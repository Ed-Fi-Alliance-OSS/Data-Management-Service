apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    serviceName: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      serviceName: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        serviceName: postgres
    spec:
      containers:
      - name: postgres-db
        image: postgres:16.3-alpine3.20@sha256:e89da2c083a5405943408b6807cd1fd25dc9010c1294e30611b841778bedc653
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: app-configmap
              key: postgres-admin-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: postgres-admin-password
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: app-configmap
              key: postgres-host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: app-configmap
              key: postgres-port
        resources: {}

        volumeMounts:
        - name: pgsql-data
          mountPath: /var/lib/postgresql/data

        - name: debezium-config-volume
          mountPath: /docker-entrypoint-initdb.d

      restartPolicy: Always
      volumes:
      - name: pgsql-data
        persistentVolumeClaim:
          claimName: pgsql-data
      - name: debezium-config-volume
        configMap:
          name: debezium-config
          defaultMode: 0744
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: debezium-config
data:
  debezium-config.sh: |
    #!/bin/bash
    echo "Setting up the wal level"
    echo "host replication postgres kafka-postgresql-source trust" >> /var/lib/postgresql/data/pg_hba.conf
    echo "wal_level = logical" >> /var/lib/postgresql/data/postgresql.conf
    echo "Setting up the wal level is done"
