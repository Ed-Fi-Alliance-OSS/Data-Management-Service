services:
  zookeeper:
    hostname: dms-zookeeper1
    container_name: dms-zookeeper1
    image: debezium/zookeeper:2.7.0.Final@sha256:47d988f5db17fc3493de683e456cfb8dc8cafcaae4d36d3885c778e9a39d62eb
    # Unlikely to need ability to connect directly into Zookeeper
    # ports:
    #   - 2181:2181
    #   - 2888:2888
    #   - 3888:3888
    volumes:
      - zookeeper-logs:/zookeeper/logs
      - zookeeper-data:/zookeeper/data
      - zookeeper-txns:/zookeeper/txns
      - zookeeper-conf:/zookeeper/conf

  kafka:
    hostname: dms-kafka1
    container_name: dms-kafka1
    image: debezium/kafka:2.7.0.Final@sha256:6b233b44f29522f8ce6018e4c95dae8be7688c82183d95da348a95bcedc6fcc6
    ports:
      - ${KAFKA_PORT:-9092}:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=dms-zookeeper1:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://dms-kafka1:9092
    volumes:
      - kafka-data:/kafka/data
      - kafka-logs:/kafka/logs

  kafka-postgresql-source:
    hostname: kafka-postgresql-source
    container_name: kafka-postgresql-source
    image: edfialliance/ed-fi-kafka-connect:pre
    ports:
      - ${CONNECT_SOURCE_PORT:-8083}:8083
    links:
      - kafka
      - zookeeper
    environment:
      BOOTSTRAP_SERVERS: dms-kafka1:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_source_config
      OFFSET_STORAGE_TOPIC: debezium_source_offset
      STATUS_STORAGE_TOPIC: debezium_source_status
    volumes:
      - kafka-postgresql-source-logs:/kafka/logs
      - kafka-postgresql-source-config:/kafka/config

  kafka-opensearch-sink:
    hostname: kafka-opensearch-sink
    container_name: kafka-opensearch-sink
    image: edfialliance/ed-fi-kafka-connect:pre
    ports:
      - ${CONNECT_SINK_PORT:-8084}:8083
    links:
      - kafka
      - zookeeper
    environment:
      BOOTSTRAP_SERVERS: dms-kafka1:9092
      GROUP_ID: 2
      CONFIG_STORAGE_TOPIC: debezium_sink_config
      OFFSET_STORAGE_TOPIC: debezium_sink_offset
      STATUS_STORAGE_TOPIC: debezium_sink_status
    volumes:
      - kafka-opensearch-sink-logs:/kafka/logs
      - kafka-opensearch-sink-config:/kafka/config

  opensearch:
    image: opensearchproject/opensearch:2.15.0@sha256:1963b3ece46dfe1a17cd633fb2e9cea22bd20753a295f39c2f513ce0070cad42
    container_name: dms-opensearch
    hostname: dms-opensearch
    environment:
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: "abcdefgh1!"
      OPENSEARCH_ADMIN_PASSWORD: "abcdefgh1!"
      cluster.name: opensearch-cluster
       # along with the memlock settings below, disables swapping
      bootstrap.memory_lock: true
      # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      # DISABLING TLS SECURITY:
      # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      DISABLE_INSTALL_DEMO_CONFIG: true
      # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
      DISABLE_SECURITY_PLUGIN: true
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - ${OPENSEARCH_HTTP_PORT:-9200}:9200
      - ${OPENSEARCH_ANALYZER_PORT:-9600}:9600 # required for Performance Analyzer
    restart: unless-stopped
    healthcheck:
      test: curl -s http://localhost:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

volumes:
  zookeeper-logs:
  zookeeper-data:
  zookeeper-txns:
  zookeeper-conf:
  kafka-data:
  kafka-logs:
  kafka-postgresql-source-logs:
  kafka-postgresql-source-config:
  kafka-opensearch-sink-logs:
  kafka-opensearch-sink-config:
  opensearch-data1:
