{
  "apiSchemaVersion": "1.0.0",
  "projectSchema": {
    "abstractResources": {
    },
    "caseInsensitiveEndpointNameMapping": {
      "artmediumdescriptors": "artMediumDescriptors",
      "buses": "buses",
      "busroutes": "busRoutes",
      "favoritebookcategorydescriptors": "favoriteBookCategoryDescriptors",
      "membershiptypedescriptors": "membershipTypeDescriptors",
      "studentartprogramassociations": "studentArtProgramAssociations",
      "studentgraduationplanassociations": "studentGraduationPlanAssociations"
    },
    "compatibleDsRange": "5.2.0",
    "description": "Sample-Core",
    "educationOrganizationHierarchy": {
      "CommunityOrganization": {
      },
      "CommunityProvider": {
        "CommunityOrganization": "$.communityOrganizationReference.communityOrganizationId"
      },
      "EducationOrganization": {
      },
      "EducationOrganizationNetwork": {
      },
      "EducationServiceCenter": {
        "StateEducationAgency": "$.stateEducationAgencyReference.stateEducationAgencyId"
      },
      "LocalEducationAgency": {
        "EducationServiceCenter": "$.educationServiceCenterReference.educationServiceCenterId",
        "LocalEducationAgency": "$.parentLocalEducationAgencyReference.localEducationAgencyId",
        "StateEducationAgency": "$.stateEducationAgencyReference.stateEducationAgencyId"
      },
      "OrganizationDepartment": {
        "EducationOrganization": "$.parentEducationOrganizationReference.educationOrganizationId"
      },
      "PostSecondaryInstitution": {
      },
      "School": {
        "LocalEducationAgency": "$.localEducationAgencyReference.localEducationAgencyId"
      },
      "StateEducationAgency": {
      }
    },
    "educationOrganizationTypes": [
      "CommunityOrganization",
      "CommunityProvider",
      "EducationOrganizationNetwork",
      "EducationServiceCenter",
      "LocalEducationAgency",
      "OrganizationDepartment",
      "PostSecondaryInstitution",
      "School",
      "StateEducationAgency",
      "EducationOrganization"
    ],
    "isExtensionProject": true,
    "openApiExtensionDescriptorFragments": {
      "exts": {
      },
      "newPaths": {
        "/sample/artMediumDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleArtMedia",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_ArtMediumDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "artMediumDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleArtMedium",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_ArtMediumDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the ArtMedium resource to be created or updated.",
              "required": true,
              "x-bodyName": "ArtMedium"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "artMediumDescriptors"
            ]
          }
        },
        "/sample/artMediumDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleArtMediaById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "artMediumDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleArtMediaById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_ArtMediumDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "artMediumDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleArtMedium",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_ArtMediumDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the ArtMedium resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "artMediumDescriptors"
            ]
          }
        },
        "/sample/favoriteBookCategoryDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleFavoriteBookCategories",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_FavoriteBookCategoryDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "favoriteBookCategoryDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleFavoriteBookCategory",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_FavoriteBookCategoryDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the FavoriteBookCategory resource to be created or updated.",
              "required": true,
              "x-bodyName": "FavoriteBookCategory"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "favoriteBookCategoryDescriptors"
            ]
          }
        },
        "/sample/favoriteBookCategoryDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleFavoriteBookCategoriesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "favoriteBookCategoryDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleFavoriteBookCategoriesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_FavoriteBookCategoryDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "favoriteBookCategoryDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleFavoriteBookCategory",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_FavoriteBookCategoryDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the FavoriteBookCategory resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "favoriteBookCategoryDescriptors"
            ]
          }
        },
        "/sample/membershipTypeDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleMembershipTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_MembershipTypeDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "membershipTypeDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleMembershipType",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_MembershipTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the MembershipType resource to be created or updated.",
              "required": true,
              "x-bodyName": "MembershipType"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "membershipTypeDescriptors"
            ]
          }
        },
        "/sample/membershipTypeDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleMembershipTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "membershipTypeDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleMembershipTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_MembershipTypeDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "membershipTypeDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleMembershipType",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_MembershipTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the MembershipType resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "membershipTypeDescriptors"
            ]
          }
        }
      },
      "newSchemas": {
        "Sample_ArtMediumDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "Sample_FavoriteBookCategoryDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "Sample_MembershipTypeDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        }
      },
      "newTags": [
        {
          "description": "Art medium used in a section or program (i.e. paint, pencils, clay, etc.).",
          "name": "artMediumDescriptors"
        },
        {
          "description": "The category of an individual's favorite book.",
          "name": "favoriteBookCategoryDescriptors"
        },
        {
          "description": "Membership Type identifies whether a school has primary responsibility for managing a specific student's curriculum or not.",
          "name": "membershipTypeDescriptors"
        }
      ]
    },
    "openApiExtensionResourceFragments": {
      "exts": {
        "EdFi_Contact": {
          "description": "",
          "properties": {
            "addresses": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_Address"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "authors": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_Author"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "averageCarLineWait": {
              "description": "The time spent per day waiting in the car line.",
              "type": "number"
            },
            "becameParent": {
              "description": "The year in which the contact first became a contact.",
              "type": "integer"
            },
            "ceilingHeights": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_CeilingHeight"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "coffeeSpend": {
              "description": "How much the contact spends on coffee in a week.",
              "type": "number"
            },
            "credentialFieldDescriptor": {
              "description": "The field in which the contact holds a credential.",
              "type": "string"
            },
            "cteProgramService": {
              "$ref": "#/components/schemas/Sample_Contact_CTEProgramService"
            },
            "duration": {
              "description": "The amount of time the contact spends reading to his/her children at bedtime.",
              "minimum": 1,
              "type": "integer"
            },
            "educationContents": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_EducationContent"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "favoriteBookTitles": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_FavoriteBookTitle"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "gpa": {
              "description": "The contact's high school GPA.",
              "type": "number"
            },
            "graduationDate": {
              "description": "The date the contact graduated high school.",
              "format": "date",
              "type": "string"
            },
            "isSportsFan": {
              "description": "An indication as to whether the contact is a sports fan.",
              "type": "boolean"
            },
            "luckyNumber": {
              "description": "The contact's lucky number.",
              "type": "integer"
            },
            "preferredWakeUpTime": {
              "description": "The time the contact would prefer to wake up in the morning.",
              "format": "time",
              "type": "string"
            },
            "rainCertainty": {
              "description": "The percent likelihood that it will rain when the contact volunteers to chaperone a field trip.",
              "type": "number"
            },
            "studentProgramAssociations": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_StudentProgramAssociation"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "teacherConference": {
              "$ref": "#/components/schemas/Sample_Contact_TeacherConference"
            }
          },
          "required": [
            "isSportsFan",
            "favoriteBookTitles",
            "teacherConference"
          ],
          "type": "object"
        },
        "EdFi_School": {
          "description": "",
          "properties": {
            "cteProgramService": {
              "$ref": "#/components/schemas/Sample_School_CTEProgramService"
            },
            "directlyOwnedBuses": {
              "items": {
                "$ref": "#/components/schemas/Sample_School_DirectlyOwnedBus"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "isExemplary": {
              "description": "An indication as to whether the school is exemplary.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "EdFi_Staff": {
          "description": "",
          "properties": {
            "firstPetOwnedDate": {
              "description": "The date the staff member adopted the first household pet.",
              "format": "date",
              "type": "string"
            },
            "petPreference": {
              "$ref": "#/components/schemas/Sample_Staff_PetPreference"
            },
            "pets": {
              "items": {
                "$ref": "#/components/schemas/Sample_Staff_Pet"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "type": "object"
        },
        "EdFi_Student": {
          "description": "",
          "properties": {
            "aquaticPets": {
              "items": {
                "$ref": "#/components/schemas/Sample_Student_AquaticPet"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "favoriteBooks": {
              "items": {
                "$ref": "#/components/schemas/Sample_Student_FavoriteBook"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "petPreference": {
              "$ref": "#/components/schemas/Sample_Student_PetPreference"
            },
            "pets": {
              "items": {
                "$ref": "#/components/schemas/Sample_Student_Pet"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "type": "object"
        },
        "EdFi_StudentCTEProgramAssociation": {
          "description": "",
          "properties": {
            "analysisCompleted": {
              "description": "A unique identification code used to identify the student's artwork produced in the program.",
              "type": "boolean"
            },
            "analysisDate": {
              "description": "The date and time the CTEProgram analysis was completed.",
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "EdFi_StudentContactAssociation": {
          "description": "",
          "properties": {
            "bedtimeReader": {
              "description": "An indication as to whether the contact regularly reads to the student before bed.",
              "type": "boolean"
            },
            "bedtimeReadingRate": {
              "description": "The average number of pages the contact reads with the student each day.",
              "type": "number"
            },
            "bookBudget": {
              "description": "The contact's estimated monthly budget dedicated to books for the student.",
              "type": "number"
            },
            "booksBorrowed": {
              "description": "The total number of books the contact has borrowed on behalf of the student to date.",
              "type": "integer"
            },
            "disciplines": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentContactAssociation_Discipline"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "favoriteBookTitles": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentContactAssociation_FavoriteBookTitle"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "hoursPerWeeks": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentContactAssociation_HoursPerWeek"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "interventionStudyReference": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_Reference"
            },
            "libraryDuration": {
              "description": "The actual or estimated number of clock minutes for a given library visit.",
              "minimum": 1,
              "type": "integer"
            },
            "libraryTime": {
              "description": "The student's regularly scheduled library time during the school day.",
              "format": "time",
              "type": "string"
            },
            "libraryVisits": {
              "description": "Total number of visits a student is allowed to the library in a single school day.",
              "type": "integer"
            },
            "pagesReads": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentContactAssociation_PagesRead"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "priorContactRestrictions": {
              "description": "Previous restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).",
              "maxLength": 250,
              "type": "string"
            },
            "readGreenEggsAndHamDate": {
              "description": "Date on which the contact first read the student Green Eggs and Ham by Dr. Seuss.",
              "format": "date",
              "type": "string"
            },
            "readingTimeSpent": {
              "description": "The amount of time the contact spends reading to the student each day.",
              "type": "number"
            },
            "staffEducationOrganizationEmploymentAssociations": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentContactAssociation_StaffEducationOrganizationEmploymentAssociation"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "studentRead": {
              "description": "The year in which the student's reading habits are being recorded.",
              "type": "integer"
            },
            "telephone": {
              "$ref": "#/components/schemas/Sample_StudentContactAssociation_Telephone"
            }
          },
          "required": [
            "bedtimeReader",
            "favoriteBookTitles"
          ],
          "type": "object"
        },
        "EdFi_StudentEducationOrganizationAssociation": {
          "description": "",
          "properties": {
            "addresses": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentEducationOrganizationAssociation_Address"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "favoriteProgramReference": {
              "$ref": "#/components/schemas/EdFi_Program_Reference"
            },
            "studentCharacteristics": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentEducationOrganizationAssociation_StudentCharacteristic"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "type": "object"
        },
        "EdFi_StudentSchoolAssociation": {
          "description": "",
          "properties": {
            "membershipTypeDescriptor": {
              "description": "Membership Type identifies whether a school has primary responsibility for managing a specific student's curriculum or not.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "EdFi_StudentSectionAssociation": {
          "description": "",
          "properties": {
            "relatedGeneralStudentProgramAssociations": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentSectionAssociation_RelatedGeneralStudentProgramAssociation"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "type": "object"
        }
      },
      "newPaths": {
        "/sample/busRoutes": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleBusRoutes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A unique identifier for the bus route.",
                "in": "query",
                "name": "busRouteNumber",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The direction of the bus route.",
                "in": "query",
                "name": "busRouteDirection",
                "schema": {
                  "maxLength": 15,
                  "type": "string"
                }
              },
              {
                "description": "An indication as to whether the bus route operates every weekday.",
                "in": "query",
                "name": "daily",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "The approximate annual cost for the bus route.",
                "in": "query",
                "name": "operatingCost",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The date the bus route became operational.",
                "in": "query",
                "name": "startDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The approximate weekly mileage for the bus route.",
                "in": "query",
                "name": "weeklyMileage",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The approximate amount of time, in minutes, for the bus route operation each day.",
                "in": "query",
                "name": "expectedTransitTime",
                "schema": {
                  "maxLength": 30,
                  "type": "string"
                }
              },
              {
                "description": "The percentage of seats filled under optimal conditions.",
                "in": "query",
                "name": "optimalCapacity",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The number of hours per week in which the bus route is operational.",
                "in": "query",
                "name": "hoursPerWeek",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The number of minutes per week in which the bus route is operational.",
                "in": "query",
                "name": "busRouteDuration",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              {
                "description": "The disability served by the bus route, if applicable.",
                "in": "query",
                "name": "disabilityDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_BusRoute"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "busRoutes"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleBusRoute",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_BusRoute"
                  }
                }
              },
              "description": "The JSON representation of the BusRoute resource to be created or updated.",
              "required": true,
              "x-bodyName": "BusRoute"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "busRoutes"
            ]
          }
        },
        "/sample/busRoutes/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleBusRoutesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "busRoutes"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleBusRoutesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_BusRoute"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "busRoutes"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleBusRoute",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_BusRoute"
                  }
                }
              },
              "description": "The JSON representation of the BusRoute resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "busRoutes"
            ]
          }
        },
        "/sample/buses": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleBuses",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The unique identifier for the bus.",
                "in": "query",
                "name": "busId",
                "schema": {
                  "maxLength": 60,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_Bus"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "buses"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleBus",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_Bus"
                  }
                }
              },
              "description": "The JSON representation of the Bus resource to be created or updated.",
              "required": true,
              "x-bodyName": "Bus"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "buses"
            ]
          }
        },
        "/sample/buses/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleBusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "buses"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleBusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_Bus"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "buses"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleBus",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_Bus"
                  }
                }
              },
              "description": "The JSON representation of the Bus resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "buses"
            ]
          }
        },
        "/sample/studentArtProgramAssociations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleStudentArtProgramAssociations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A unique identification code used to identify the student's artwork produced in the program.",
                "in": "query",
                "name": "identificationCode",
                "schema": {
                  "maxLength": 60,
                  "type": "string"
                }
              },
              {
                "description": "Start date for the program's art exhibit to display the student's work.",
                "in": "query",
                "name": "exhibitDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "Required program fees to purchase materials for the student.",
                "in": "query",
                "name": "programFees",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "This is documentation.",
                "in": "query",
                "name": "favoriteBookCategoryDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "This is documentation.",
                "in": "query",
                "name": "bookTitle",
                "schema": {
                  "maxLength": 200,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "Number of days the student is in attendance at the program.",
                "in": "query",
                "name": "numberOfDaysInAttendance",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The number of hours a student spends in the program each school day.",
                "in": "query",
                "name": "hoursPerDay",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "Indicator that the student participated in art education at a private agency or institution.",
                "in": "query",
                "name": "privateArtProgram",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "The student's reserved time for use of the kiln.",
                "in": "query",
                "name": "kilnReservation",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The number of clock minutes dedicated to the student's kiln reservation.",
                "in": "query",
                "name": "kilnReservationLength",
                "schema": {
                  "maxLength": 30,
                  "type": "string"
                }
              },
              {
                "description": "The total number of art pieces completed by the student during the program.",
                "in": "query",
                "name": "artPieces",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              {
                "description": "The total number of pieces in the student's portfolio.",
                "in": "query",
                "name": "portfolioPieces",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              {
                "description": "Percentage of the mediums taught in the program which the student mastered.",
                "in": "query",
                "name": "masteredMediums",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "beginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "endDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The reason the student left the program within a school or district.",
                "in": "query",
                "name": "reasonExitedDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Indicates whether the student received services during the summer session or between sessions.",
                "in": "query",
                "name": "servedOutsideOfRegularSession",
                "schema": {
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "studentArtProgramAssociations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleStudentArtProgramAssociation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation"
                  }
                }
              },
              "description": "The JSON representation of the StudentArtProgramAssociation resource to be created or updated.",
              "required": true,
              "x-bodyName": "StudentArtProgramAssociation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "studentArtProgramAssociations"
            ]
          }
        },
        "/sample/studentArtProgramAssociations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleStudentArtProgramAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "studentArtProgramAssociations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleStudentArtProgramAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "studentArtProgramAssociations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleStudentArtProgramAssociation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation"
                  }
                }
              },
              "description": "The JSON representation of the StudentArtProgramAssociation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "studentArtProgramAssociations"
            ]
          }
        },
        "/sample/studentGraduationPlanAssociations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_SampleStudentGraduationPlanAssociations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The date the plan went into effect.",
                "in": "query",
                "name": "effectiveDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "An indication as to whether the plan is active.",
                "in": "query",
                "name": "isActivePlan",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "Any fees the student must resolve prior to graduation, such as library fines and overdue lunch accounts.",
                "in": "query",
                "name": "graduationFee",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The GPA the student is working toward.",
                "in": "query",
                "name": "targetGPA",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The number of years remaining prior to graduation as of when the plan became effective.",
                "in": "query",
                "name": "highSchoolDuration",
                "schema": {
                  "maxLength": 30,
                  "type": "string"
                }
              },
              {
                "description": "The percentage of time the student must attend to graduate, relative to a full-time student.",
                "in": "query",
                "name": "requiredAttendance",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The time of day for the commencement ceremony.",
                "in": "query",
                "name": "commencementTime",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The number of hours per week the student will attend to graduate.",
                "in": "query",
                "name": "hoursPerWeek",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "Indicates the service being provided to the student by the CTE program.",
                "in": "query",
                "name": "cteProgramServiceDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "True if service is a primary service.",
                "in": "query",
                "name": "primaryIndicator",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "serviceBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "serviceEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "Number and description of the CIP code associated with the student's CTE program.",
                "in": "query",
                "name": "cipCode",
                "schema": {
                  "maxLength": 120,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "studentGraduationPlanAssociations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_SampleStudentGraduationPlanAssociation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation"
                  }
                }
              },
              "description": "The JSON representation of the StudentGraduationPlanAssociation resource to be created or updated.",
              "required": true,
              "x-bodyName": "StudentGraduationPlanAssociation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "studentGraduationPlanAssociations"
            ]
          }
        },
        "/sample/studentGraduationPlanAssociations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_SampleStudentGraduationPlanAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "studentGraduationPlanAssociations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_SampleStudentGraduationPlanAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "studentGraduationPlanAssociations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_SampleStudentGraduationPlanAssociation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation"
                  }
                }
              },
              "description": "The JSON representation of the StudentGraduationPlanAssociation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "studentGraduationPlanAssociations"
            ]
          }
        }
      },
      "newSchemas": {
        "Sample_Bus": {
          "description": "This is an example of a new domain entity.",
          "properties": {
            "busId": {
              "description": "The unique identifier for the bus.",
              "maxLength": 60,
              "type": "string"
            }
          },
          "required": [
            "busId"
          ],
          "type": "object"
        },
        "Sample_BusRoute": {
          "description": "This is an example of a new domain entity.",
          "properties": {
            "busReference": {
              "$ref": "#/components/schemas/Sample_Bus_Reference"
            },
            "busRouteDirection": {
              "description": "The direction of the bus route.",
              "maxLength": 15,
              "type": "string"
            },
            "busRouteDuration": {
              "description": "The number of minutes per week in which the bus route is operational.",
              "minimum": 1,
              "type": "integer"
            },
            "busRouteNumber": {
              "description": "A unique identifier for the bus route.",
              "type": "integer"
            },
            "busYears": {
              "items": {
                "$ref": "#/components/schemas/Sample_BusRoute_BusYear"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "daily": {
              "description": "An indication as to whether the bus route operates every weekday.",
              "type": "boolean"
            },
            "disabilityDescriptor": {
              "description": "The disability served by the bus route, if applicable.",
              "type": "string"
            },
            "expectedTransitTime": {
              "description": "The approximate amount of time, in minutes, for the bus route operation each day.",
              "type": "number"
            },
            "hoursPerWeek": {
              "description": "The number of hours per week in which the bus route is operational.",
              "type": "number"
            },
            "operatingCost": {
              "description": "The approximate annual cost for the bus route.",
              "type": "number"
            },
            "optimalCapacity": {
              "description": "The percentage of seats filled under optimal conditions.",
              "type": "number"
            },
            "programs": {
              "items": {
                "$ref": "#/components/schemas/Sample_BusRoute_Program"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "serviceAreaPostalCodes": {
              "items": {
                "$ref": "#/components/schemas/Sample_BusRoute_ServiceAreaPostalCode"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "staffEducationOrganizationAssignmentAssociationReference": {
              "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationAssignmentAssociation_Reference"
            },
            "startDate": {
              "description": "The date the bus route became operational.",
              "format": "date",
              "type": "string"
            },
            "startTimes": {
              "items": {
                "$ref": "#/components/schemas/Sample_BusRoute_StartTime"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "telephones": {
              "items": {
                "$ref": "#/components/schemas/Sample_BusRoute_Telephone"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "weeklyMileage": {
              "description": "The approximate weekly mileage for the bus route.",
              "type": "number"
            }
          },
          "required": [
            "busReference",
            "busRouteNumber",
            "busRouteDirection",
            "startTimes",
            "operatingCost",
            "expectedTransitTime",
            "hoursPerWeek",
            "serviceAreaPostalCodes",
            "telephones"
          ],
          "type": "object"
        },
        "Sample_BusRoute_BusYear": {
          "properties": {
            "busYear": {
              "description": "The years in which the bus route has been in active.",
              "type": "integer"
            }
          },
          "required": [
            "busYear"
          ],
          "type": "object"
        },
        "Sample_BusRoute_Program": {
          "properties": {
            "programReference": {
              "$ref": "#/components/schemas/EdFi_Program_Reference"
            }
          },
          "required": [
            "programReference"
          ],
          "type": "object"
        },
        "Sample_BusRoute_Reference": {
          "properties": {
            "busId": {
              "description": "The unique identifier for the bus.",
              "maxLength": 60,
              "type": "string"
            },
            "busRouteNumber": {
              "description": "A unique identifier for the bus route.",
              "type": "integer"
            }
          },
          "required": [
            "busId",
            "busRouteNumber"
          ],
          "type": "object"
        },
        "Sample_BusRoute_ServiceAreaPostalCode": {
          "properties": {
            "serviceAreaPostalCode": {
              "description": "The postal codes served by the bus route.",
              "maxLength": 17,
              "type": "string"
            }
          },
          "required": [
            "serviceAreaPostalCode"
          ],
          "type": "object"
        },
        "Sample_BusRoute_StartTime": {
          "properties": {
            "startTime": {
              "description": "The time the bus route begins.",
              "format": "time",
              "type": "string"
            }
          },
          "required": [
            "startTime"
          ],
          "type": "object"
        },
        "Sample_BusRoute_Telephone": {
          "properties": {
            "doNotPublishIndicator": {
              "description": "An indication that the telephone number should not be published.",
              "type": "boolean"
            },
            "orderOfPriority": {
              "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
              "minimum": 1,
              "type": "integer"
            },
            "telephoneNumber": {
              "description": "The telephone number including the area code, and extension, if applicable.",
              "maxLength": 24,
              "type": "string"
            },
            "telephoneNumberTypeDescriptor": {
              "description": "The type of communication number listed for an individual or organization.",
              "type": "string"
            },
            "textMessageCapabilityIndicator": {
              "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
              "type": "boolean"
            }
          },
          "required": [
            "telephoneNumber",
            "telephoneNumberTypeDescriptor"
          ],
          "type": "object"
        },
        "Sample_Bus_Reference": {
          "properties": {
            "busId": {
              "description": "The unique identifier for the bus.",
              "maxLength": 60,
              "type": "string"
            }
          },
          "required": [
            "busId"
          ],
          "type": "object"
        },
        "Sample_Contact_Address": {
          "properties": {
            "addressTypeDescriptor": {
              "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
              "type": "string"
            },
            "apartmentRoomSuiteNumber": {
              "description": "The apartment, room, or suite number of an address.",
              "maxLength": 50,
              "type": "string"
            },
            "buildingSiteNumber": {
              "description": "The number of the building on the site, if more than one building shares the same address.",
              "maxLength": 20,
              "type": "string"
            },
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            },
            "congressionalDistrict": {
              "description": "The congressional district in which an address is located.",
              "maxLength": 30,
              "type": "string"
            },
            "countyFIPSCode": {
              "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
              "maxLength": 5,
              "minLength": 3,
              "type": "string"
            },
            "doNotPublishIndicator": {
              "description": "An indication that the address should not be published.",
              "type": "boolean"
            },
            "latitude": {
              "description": "The geographic latitude of the physical address.",
              "maxLength": 20,
              "type": "string"
            },
            "localeDescriptor": {
              "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
              "type": "string"
            },
            "longitude": {
              "description": "The geographic longitude of the physical address.",
              "maxLength": 20,
              "type": "string"
            },
            "nameOfCounty": {
              "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
              "maxLength": 30,
              "type": "string"
            },
            "periods": {
              "items": {
                "$ref": "#/components/schemas/Sample_Contact_Period"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "postalCode": {
              "description": "The five or nine digit zip code or overseas postal code portion of an address.",
              "maxLength": 17,
              "type": "string"
            },
            "stateAbbreviationDescriptor": {
              "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
              "type": "string"
            },
            "streetNumberName": {
              "description": "The street number and street name or post office box number of an address.",
              "maxLength": 150,
              "type": "string"
            }
          },
          "required": [
            "streetNumberName",
            "city",
            "stateAbbreviationDescriptor",
            "postalCode",
            "addressTypeDescriptor"
          ],
          "type": "object"
        },
        "Sample_Contact_Author": {
          "properties": {
            "author": {
              "description": "The contact's favorite authors.",
              "maxLength": 100,
              "type": "string"
            }
          },
          "required": [
            "author"
          ],
          "type": "object"
        },
        "Sample_Contact_CTEProgramService": {
          "properties": {
            "cipCode": {
              "description": "Number and description of the CIP code associated with the student's CTE program.",
              "maxLength": 120,
              "type": "string"
            },
            "cteProgramServiceDescriptor": {
              "description": "Indicates the service being provided to the student by the CTE program.",
              "type": "string"
            },
            "primaryIndicator": {
              "description": "True if service is a primary service.",
              "type": "boolean"
            },
            "serviceBeginDate": {
              "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "serviceEndDate": {
              "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "cteProgramServiceDescriptor"
          ],
          "type": "object"
        },
        "Sample_Contact_CeilingHeight": {
          "properties": {
            "ceilingHeight": {
              "description": "The height of the ceiling in the rooms of the contact's home.",
              "type": "number"
            }
          },
          "required": [
            "ceilingHeight"
          ],
          "type": "object"
        },
        "Sample_Contact_EducationContent": {
          "properties": {
            "educationContentReference": {
              "$ref": "#/components/schemas/EdFi_EducationContent_Reference"
            }
          },
          "required": [
            "educationContentReference"
          ],
          "type": "object"
        },
        "Sample_Contact_FavoriteBookTitle": {
          "properties": {
            "favoriteBookTitle": {
              "description": "The title of the contact's favorite book.",
              "maxLength": 100,
              "type": "string"
            }
          },
          "required": [
            "favoriteBookTitle"
          ],
          "type": "object"
        },
        "Sample_Contact_Period": {
          "properties": {
            "beginDate": {
              "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "endDate": {
              "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "beginDate"
          ],
          "type": "object"
        },
        "Sample_Contact_StudentProgramAssociation": {
          "properties": {
            "studentProgramAssociationReference": {
              "$ref": "#/components/schemas/EdFi_StudentProgramAssociation_Reference"
            }
          },
          "required": [
            "studentProgramAssociationReference"
          ],
          "type": "object"
        },
        "Sample_Contact_TeacherConference": {
          "properties": {
            "dayOfWeek": {
              "description": "The day of the week the parent prefers to meet for parent-teacher conferences.",
              "maxLength": 10,
              "type": "string"
            },
            "endTime": {
              "description": "The end time the parent prefers to meet for parent-teacher conferences.",
              "format": "time",
              "type": "string"
            },
            "startTime": {
              "description": "The start time the parent prefers to meet for parent-teacher conferences.",
              "format": "time",
              "type": "string"
            }
          },
          "required": [
            "dayOfWeek",
            "startTime",
            "endTime"
          ],
          "type": "object"
        },
        "Sample_School_CTEProgramService": {
          "properties": {
            "cipCode": {
              "description": "Number and description of the CIP code associated with the student's CTE program.",
              "maxLength": 120,
              "type": "string"
            },
            "cteProgramServiceDescriptor": {
              "description": "Indicates the service being provided to the student by the CTE program.",
              "type": "string"
            },
            "primaryIndicator": {
              "description": "True if service is a primary service.",
              "type": "boolean"
            },
            "serviceBeginDate": {
              "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "serviceEndDate": {
              "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "cteProgramServiceDescriptor"
          ],
          "type": "object"
        },
        "Sample_School_DirectlyOwnedBus": {
          "properties": {
            "directlyOwnedBusReference": {
              "$ref": "#/components/schemas/Sample_Bus_Reference"
            }
          },
          "required": [
            "directlyOwnedBusReference"
          ],
          "type": "object"
        },
        "Sample_Staff_Pet": {
          "properties": {
            "isFixed": {
              "description": "An indication as to whether the pet has been spayed/neutered.",
              "type": "boolean"
            },
            "petName": {
              "description": "The pet's name.",
              "maxLength": 20,
              "minLength": 3,
              "type": "string"
            }
          },
          "required": [
            "petName"
          ],
          "type": "object"
        },
        "Sample_Staff_PetPreference": {
          "properties": {
            "maximumWeight": {
              "description": "The preferred maximum weight of a household pet.",
              "type": "integer"
            },
            "minimumWeight": {
              "description": "The preferred minimum weight of a household pet.",
              "type": "integer"
            }
          },
          "required": [
            "minimumWeight",
            "maximumWeight"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation": {
          "description": "This is an example of a subclass of an association.",
          "properties": {
            "artMedia": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation_ArtMedium"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "artPieces": {
              "description": "The total number of art pieces completed by the student during the program.",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "beginDate": {
              "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "educationOrganizationReference": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference"
            },
            "endDate": {
              "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "exhibitDate": {
              "description": "Start date for the program's art exhibit to display the student's work.",
              "format": "date",
              "type": "string"
            },
            "favoriteBook": {
              "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation_FavoriteBook"
            },
            "hoursPerDay": {
              "description": "The number of hours a student spends in the program each school day.",
              "type": "number"
            },
            "identificationCode": {
              "description": "A unique identification code used to identify the student's artwork produced in the program.",
              "maxLength": 60,
              "type": "string"
            },
            "kilnReservation": {
              "description": "The student's reserved time for use of the kiln.",
              "format": "time",
              "type": "string"
            },
            "kilnReservationLength": {
              "description": "The number of clock minutes dedicated to the student's kiln reservation.",
              "type": "number"
            },
            "masteredMediums": {
              "description": "Percentage of the mediums taught in the program which the student mastered.",
              "type": "number"
            },
            "numberOfDaysInAttendance": {
              "description": "Number of days the student is in attendance at the program.",
              "type": "number"
            },
            "portfolioPieces": {
              "description": "The total number of pieces in the student's portfolio.",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "portfolioYears": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation_PortfolioYear"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "privateArtProgram": {
              "description": "Indicator that the student participated in art education at a private agency or institution.",
              "type": "boolean"
            },
            "programFees": {
              "description": "Required program fees to purchase materials for the student.",
              "type": "number"
            },
            "programParticipationStatuses": {
              "items": {
                "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "programReference": {
              "$ref": "#/components/schemas/EdFi_Program_Reference"
            },
            "reasonExitedDescriptor": {
              "description": "The reason the student left the program within a school or district.",
              "type": "string"
            },
            "servedOutsideOfRegularSession": {
              "description": "Indicates whether the student received services during the summer session or between sessions.",
              "type": "boolean"
            },
            "services": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation_Service"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "studentReference": {
              "$ref": "#/components/schemas/EdFi_Student_Reference"
            },
            "styles": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation_Style"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "privateArtProgram",
            "styles",
            "studentReference",
            "programReference",
            "beginDate",
            "educationOrganizationReference"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_ArtMedium": {
          "properties": {
            "artMediumDescriptor": {
              "description": "The art mediums used in the program (i.e., paint, pencils, clay, etc.).",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "artMediumDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_FavoriteBook": {
          "properties": {
            "artMedia": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentArtProgramAssociation_FavoriteBookArtMedium"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "bookTitle": {
              "description": "This is documentation.",
              "maxLength": 200,
              "minLength": 1,
              "type": "string"
            },
            "favoriteBookCategoryDescriptor": {
              "description": "This is documentation.",
              "type": "string"
            }
          },
          "required": [
            "favoriteBookCategoryDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_FavoriteBookArtMedium": {
          "properties": {
            "artMediumDescriptor": {
              "description": "This is documentation.",
              "type": "string"
            },
            "artPieces": {
              "description": "This is documentation.",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [
            "artMediumDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_PortfolioYear": {
          "properties": {
            "portfolioYear": {
              "description": "The of year(s) of work included in the student's portfolio.",
              "type": "integer"
            }
          },
          "required": [
            "portfolioYear"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_Reference": {
          "properties": {
            "beginDate": {
              "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "programEducationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "programName": {
              "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
              "maxLength": 60,
              "type": "string"
            },
            "programTypeDescriptor": {
              "description": "The type of program.",
              "type": "string"
            },
            "studentUniqueId": {
              "description": "A unique alphanumeric code assigned to a student.",
              "maxLength": 32,
              "type": "string"
            }
          },
          "required": [
            "beginDate",
            "educationOrganizationId",
            "programEducationOrganizationId",
            "programName",
            "programTypeDescriptor",
            "studentUniqueId"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_Service": {
          "properties": {
            "primaryIndicator": {
              "description": "True if service is a primary service.",
              "type": "boolean"
            },
            "serviceBeginDate": {
              "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "serviceDescriptor": {
              "description": "Indicates the service being provided to the student by the program.",
              "type": "string"
            },
            "serviceEndDate": {
              "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "serviceDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentArtProgramAssociation_Style": {
          "properties": {
            "style": {
              "description": "The art style(s) exhibited by the student in the program.",
              "maxLength": 50,
              "type": "string"
            }
          },
          "required": [
            "style"
          ],
          "type": "object"
        },
        "Sample_StudentContactAssociation_Discipline": {
          "properties": {
            "disciplineDescriptor": {
              "description": "The type of action used to discipline the student preferred by the contact.",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "disciplineDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentContactAssociation_FavoriteBookTitle": {
          "properties": {
            "favoriteBookTitle": {
              "description": "The title of the student's favorite book.",
              "maxLength": 100,
              "type": "string"
            }
          },
          "required": [
            "favoriteBookTitle"
          ],
          "type": "object"
        },
        "Sample_StudentContactAssociation_HoursPerWeek": {
          "properties": {
            "hoursPerWeek": {
              "description": "Total number of hours per week a student and contact dedicates to reading.",
              "type": "number"
            }
          },
          "required": [
            "hoursPerWeek"
          ],
          "type": "object"
        },
        "Sample_StudentContactAssociation_PagesRead": {
          "properties": {
            "pagesRead": {
              "description": "Total number of pages the contact has read the student.",
              "type": "number"
            }
          },
          "required": [
            "pagesRead"
          ],
          "type": "object"
        },
        "Sample_StudentContactAssociation_StaffEducationOrganizationEmploymentAssociation": {
          "properties": {
            "staffEducationOrganizationEmploymentAssociationReference": {
              "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationEmploymentAssociation_Reference"
            }
          },
          "required": [
            "staffEducationOrganizationEmploymentAssociationReference"
          ],
          "type": "object"
        },
        "Sample_StudentContactAssociation_Telephone": {
          "properties": {
            "doNotPublishIndicator": {
              "description": "An indication that the telephone number should not be published.",
              "type": "boolean"
            },
            "orderOfPriority": {
              "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
              "minimum": 1,
              "type": "integer"
            },
            "telephoneNumber": {
              "description": "The telephone number including the area code, and extension, if applicable.",
              "maxLength": 24,
              "type": "string"
            },
            "telephoneNumberTypeDescriptor": {
              "description": "The type of communication number listed for an individual or organization.",
              "type": "string"
            },
            "textMessageCapabilityIndicator": {
              "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
              "type": "boolean"
            }
          },
          "required": [
            "telephoneNumber",
            "telephoneNumberTypeDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentEducationOrganizationAssociation_Address": {
          "properties": {
            "addressTypeDescriptor": {
              "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
              "type": "string"
            },
            "apartmentRoomSuiteNumber": {
              "description": "The apartment, room, or suite number of an address.",
              "maxLength": 50,
              "type": "string"
            },
            "buildingSiteNumber": {
              "description": "The number of the building on the site, if more than one building shares the same address.",
              "maxLength": 20,
              "type": "string"
            },
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            },
            "congressionalDistrict": {
              "description": "The congressional district in which an address is located.",
              "maxLength": 30,
              "type": "string"
            },
            "countyFIPSCode": {
              "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
              "maxLength": 5,
              "minLength": 3,
              "type": "string"
            },
            "doNotPublishIndicator": {
              "description": "An indication that the address should not be published.",
              "type": "boolean"
            },
            "latitude": {
              "description": "The geographic latitude of the physical address.",
              "maxLength": 20,
              "type": "string"
            },
            "localeDescriptor": {
              "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
              "type": "string"
            },
            "longitude": {
              "description": "The geographic longitude of the physical address.",
              "maxLength": 20,
              "type": "string"
            },
            "nameOfCounty": {
              "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
              "maxLength": 30,
              "type": "string"
            },
            "periods": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentEducationOrganizationAssociation_Period"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "postalCode": {
              "description": "The five or nine digit zip code or overseas postal code portion of an address.",
              "maxLength": 17,
              "type": "string"
            },
            "stateAbbreviationDescriptor": {
              "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
              "type": "string"
            },
            "streetNumberName": {
              "description": "The street number and street name or post office box number of an address.",
              "maxLength": 150,
              "type": "string"
            }
          },
          "required": [
            "streetNumberName",
            "city",
            "stateAbbreviationDescriptor",
            "postalCode",
            "addressTypeDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentEducationOrganizationAssociation_Period": {
          "properties": {
            "beginDate": {
              "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "endDate": {
              "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "beginDate"
          ],
          "type": "object"
        },
        "Sample_StudentEducationOrganizationAssociation_StudentCharacteristic": {
          "properties": {
            "designatedBy": {
              "description": "The person, organization, or department that designated the characteristic.",
              "maxLength": 60,
              "type": "string"
            },
            "periods": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentEducationOrganizationAssociation_Period"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "studentCharacteristicDescriptor": {
              "description": "The characteristic designated for the student.",
              "type": "string"
            }
          },
          "required": [
            "studentCharacteristicDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation": {
          "description": "This is an example of a new Association.",
          "properties": {
            "academicSubjects": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_AcademicSubject"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "careerPathwayCodes": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_CareerPathwayCode"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "commencementTime": {
              "description": "The time of day for the commencement ceremony.",
              "format": "time",
              "type": "string"
            },
            "cteProgramService": {
              "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_CTEProgramService"
            },
            "descriptions": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_Description"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "designatedBies": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_DesignatedBy"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "effectiveDate": {
              "description": "The date the plan went into effect.",
              "format": "date",
              "type": "string"
            },
            "graduationFee": {
              "description": "Any fees the student must resolve prior to graduation, such as library fines and overdue lunch accounts.",
              "type": "number"
            },
            "graduationPlanReference": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_Reference"
            },
            "highSchoolDuration": {
              "description": "The number of years remaining prior to graduation as of when the plan became effective.",
              "type": "number"
            },
            "hoursPerWeek": {
              "description": "The number of hours per week the student will attend to graduate.",
              "type": "number"
            },
            "industryCredentials": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_IndustryCredential"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "isActivePlan": {
              "description": "An indication as to whether the plan is active.",
              "type": "boolean"
            },
            "requiredAttendance": {
              "description": "The percentage of time the student must attend to graduate, relative to a full-time student.",
              "type": "number"
            },
            "staffReference": {
              "$ref": "#/components/schemas/EdFi_Staff_Reference"
            },
            "studentContactAssociations": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_StudentContactAssociation"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "studentReference": {
              "$ref": "#/components/schemas/EdFi_Student_Reference"
            },
            "targetGPA": {
              "description": "The GPA the student is working toward.",
              "type": "number"
            },
            "yearsAttendeds": {
              "items": {
                "$ref": "#/components/schemas/Sample_StudentGraduationPlanAssociation_YearsAttended"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "studentReference",
            "graduationPlanReference",
            "effectiveDate",
            "yearsAttendeds",
            "targetGPA",
            "hoursPerWeek",
            "designatedBies",
            "academicSubjects"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_AcademicSubject": {
          "properties": {
            "academicSubjectDescriptor": {
              "description": "The student's favorite academic subjects.",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "academicSubjectDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_CTEProgramService": {
          "properties": {
            "cipCode": {
              "description": "Number and description of the CIP code associated with the student's CTE program.",
              "maxLength": 120,
              "type": "string"
            },
            "cteProgramServiceDescriptor": {
              "description": "Indicates the service being provided to the student by the CTE program.",
              "type": "string"
            },
            "primaryIndicator": {
              "description": "True if service is a primary service.",
              "type": "boolean"
            },
            "serviceBeginDate": {
              "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "serviceEndDate": {
              "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "cteProgramServiceDescriptor"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_CareerPathwayCode": {
          "properties": {
            "careerPathwayCode": {
              "description": "The code representing the student's intended career pathway after graduation.",
              "type": "integer"
            }
          },
          "required": [
            "careerPathwayCode"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_Description": {
          "properties": {
            "description": {
              "description": "A description of the graduation plan.",
              "maxLength": 1024,
              "type": "string"
            }
          },
          "required": [
            "description"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_DesignatedBy": {
          "properties": {
            "designatedBy": {
              "description": "The entity governing this graduation plan.",
              "maxLength": 60,
              "type": "string"
            }
          },
          "required": [
            "designatedBy"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_IndustryCredential": {
          "properties": {
            "industryCredential": {
              "description": "Industry-recognized credentials the student will have earned at graduation.",
              "maxLength": 100,
              "type": "string"
            }
          },
          "required": [
            "industryCredential"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "graduationPlanTypeDescriptor": {
              "description": "The type of academic plan the student is following for graduation.",
              "type": "string"
            },
            "graduationSchoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "studentUniqueId": {
              "description": "A unique alphanumeric code assigned to a student.",
              "maxLength": 32,
              "type": "string"
            }
          },
          "required": [
            "educationOrganizationId",
            "graduationPlanTypeDescriptor",
            "graduationSchoolYear",
            "studentUniqueId"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_StudentContactAssociation": {
          "properties": {
            "studentContactAssociationReference": {
              "$ref": "#/components/schemas/EdFi_StudentContactAssociation_Reference"
            }
          },
          "required": [
            "studentContactAssociationReference"
          ],
          "type": "object"
        },
        "Sample_StudentGraduationPlanAssociation_YearsAttended": {
          "properties": {
            "yearsAttended": {
              "description": "The number of years the student will have attended high school by the time of graduation.",
              "type": "integer"
            }
          },
          "required": [
            "yearsAttended"
          ],
          "type": "object"
        },
        "Sample_StudentSectionAssociation_RelatedGeneralStudentProgramAssociation": {
          "properties": {
            "relatedGeneralStudentProgramAssociationReference": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_Reference"
            }
          },
          "required": [
            "relatedGeneralStudentProgramAssociationReference"
          ],
          "type": "object"
        },
        "Sample_Student_AquaticPet": {
          "properties": {
            "mimimumTankVolume": {
              "description": "The minimum tank volume this aquatic pet requires.",
              "type": "integer"
            }
          },
          "required": [
            "mimimumTankVolume"
          ],
          "type": "object"
        },
        "Sample_Student_FavoriteBook": {
          "properties": {
            "artMedia": {
              "items": {
                "$ref": "#/components/schemas/Sample_Student_FavoriteBookArtMedium"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "bookTitle": {
              "description": "This is documentation.",
              "maxLength": 200,
              "minLength": 1,
              "type": "string"
            },
            "favoriteBookCategoryDescriptor": {
              "description": "This is documentation.",
              "type": "string"
            }
          },
          "required": [
            "favoriteBookCategoryDescriptor"
          ],
          "type": "object"
        },
        "Sample_Student_FavoriteBookArtMedium": {
          "properties": {
            "artMediumDescriptor": {
              "description": "This is documentation.",
              "type": "string"
            },
            "artPieces": {
              "description": "This is documentation.",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [
            "artMediumDescriptor"
          ],
          "type": "object"
        },
        "Sample_Student_Pet": {
          "properties": {
            "isFixed": {
              "description": "An indication as to whether the pet has been spayed/neutered.",
              "type": "boolean"
            },
            "petName": {
              "description": "The pet's name.",
              "maxLength": 20,
              "minLength": 3,
              "type": "string"
            }
          },
          "required": [
            "petName"
          ],
          "type": "object"
        },
        "Sample_Student_PetPreference": {
          "properties": {
            "maximumWeight": {
              "description": "The preferred maximum weight of a household pet.",
              "type": "integer"
            },
            "minimumWeight": {
              "description": "The preferred minimum weight of a household pet.",
              "type": "integer"
            }
          },
          "required": [
            "minimumWeight",
            "maximumWeight"
          ],
          "type": "object"
        }
      },
      "newTags": [
        {
          "description": "This is an example of a new domain entity.",
          "name": "buses"
        },
        {
          "description": "This is an example of a new domain entity.",
          "name": "busRoutes"
        },
        {
          "description": "This is an example of a subclass of an association.",
          "name": "studentArtProgramAssociations"
        },
        {
          "description": "This is an example of a new Association.",
          "name": "studentGraduationPlanAssociations"
        }
      ]
    },
    "projectEndpointName": "sample",
    "projectName": "Sample",
    "projectVersion": "1.1.0",
    "resourceNameMapping": {
      "ArtMediumDescriptor": "artMediumDescriptors",
      "Bus": "buses",
      "BusRoute": "busRoutes",
      "FavoriteBookCategoryDescriptor": "favoriteBookCategoryDescriptors",
      "MembershipTypeDescriptor": "membershipTypeDescriptors",
      "StudentArtProgramAssociation": "studentArtProgramAssociations",
      "StudentGraduationPlanAssociation": "studentGraduationPlanAssociations"
    },
    "resourceSchemas": {
      "artMediumDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "ArtMediumDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "busRoutes": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.busYears[*].busYear"
            ]
          },
          {
            "paths": [
              "$.serviceAreaPostalCodes[*].serviceAreaPostalCode"
            ]
          },
          {
            "paths": [
              "$.startTimes[*].startTime"
            ]
          },
          {
            "paths": [
              "$.telephones[*].telephoneNumber",
              "$.telephones[*].telephoneNumberTypeDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$.daily",
          "$.telephones[*].doNotPublishIndicator",
          "$.telephones[*].textMessageCapabilityIndicator"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 2,
            "path": "$.weeklyMileage",
            "totalDigits": 5
          },
          {
            "decimalPlaces": 2,
            "path": "$.hoursPerWeek",
            "totalDigits": 5
          }
        ],
        "documentPathsMapping": {
          "Bus": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Sample",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.busId",
                "referenceJsonPath": "$.busReference.busId",
                "type": "string"
              }
            ],
            "resourceName": "Bus"
          },
          "BusRouteDirection": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.busRouteDirection",
            "type": "string"
          },
          "BusRouteDuration": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.busRouteDuration",
            "type": "number"
          },
          "BusRouteNumber": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.busRouteNumber",
            "type": "number"
          },
          "BusYear": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.busYears[*].busYear",
            "type": "number"
          },
          "Daily": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.daily",
            "type": "boolean"
          },
          "DisabilityDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.disabilityDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "DisabilityDescriptor",
            "type": "string"
          },
          "ExpectedTransitTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.expectedTransitTime",
            "type": "number"
          },
          "HoursPerWeek": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.hoursPerWeek",
            "type": "number"
          },
          "OperatingCost": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.operatingCost",
            "type": "number"
          },
          "OptimalCapacity": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.optimalCapacity",
            "type": "number"
          },
          "Program": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.programs[*].programReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programName",
                "referenceJsonPath": "$.programs[*].programReference.programName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.programTypeDescriptor",
                "referenceJsonPath": "$.programs[*].programReference.programTypeDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Program"
          },
          "ServiceAreaPostalCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.serviceAreaPostalCodes[*].serviceAreaPostalCode",
            "type": "string"
          },
          "StaffEducationOrganizationAssignmentAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.beginDate",
                "referenceJsonPath": "$.staffEducationOrganizationAssignmentAssociationReference.beginDate",
                "type": "date"
              },
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.staffEducationOrganizationAssignmentAssociationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.staffClassificationDescriptor",
                "referenceJsonPath": "$.staffEducationOrganizationAssignmentAssociationReference.staffClassificationDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.staffReference.staffUniqueId",
                "referenceJsonPath": "$.staffEducationOrganizationAssignmentAssociationReference.staffUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "StaffEducationOrganizationAssignmentAssociation"
          },
          "StartDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.startDate",
            "type": "date"
          },
          "StartTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.startTimes[*].startTime",
            "type": "time"
          },
          "Telephone.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.telephones[*].doNotPublishIndicator",
            "type": "boolean"
          },
          "Telephone.OrderOfPriority": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.telephones[*].orderOfPriority",
            "type": "number"
          },
          "Telephone.TelephoneNumber": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.telephones[*].telephoneNumber",
            "type": "string"
          },
          "Telephone.TelephoneNumberTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.telephones[*].telephoneNumberTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "TelephoneNumberTypeDescriptor",
            "type": "string"
          },
          "Telephone.TextMessageCapabilityIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.telephones[*].textMessageCapabilityIndicator",
            "type": "boolean"
          },
          "WeeklyMileage": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.weeklyMileage",
            "type": "number"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.busReference.busId",
          "$.busRouteNumber"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This is an example of a new domain entity.",
          "properties": {
            "busReference": {
              "additionalProperties": false,
              "properties": {
                "busId": {
                  "description": "The unique identifier for the bus.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "busId"
              ],
              "type": "object"
            },
            "busRouteDirection": {
              "description": "The direction of the bus route.",
              "maxLength": 15,
              "pattern": "^(?!\\s*$).+",
              "type": "string"
            },
            "busRouteDuration": {
              "description": "The number of minutes per week in which the bus route is operational.",
              "minimum": 1,
              "type": "integer"
            },
            "busRouteNumber": {
              "description": "A unique identifier for the bus route.",
              "type": "integer"
            },
            "busYears": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "busYear": {
                    "description": "The years in which the bus route has been in active.",
                    "type": "integer"
                  }
                },
                "required": [
                  "busYear"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "daily": {
              "description": "An indication as to whether the bus route operates every weekday.",
              "type": "boolean"
            },
            "disabilityDescriptor": {
              "description": "The disability served by the bus route, if applicable.",
              "type": "string"
            },
            "expectedTransitTime": {
              "description": "The approximate amount of time, in minutes, for the bus route operation each day.",
              "type": "number"
            },
            "hoursPerWeek": {
              "description": "The number of hours per week in which the bus route is operational.",
              "type": "number"
            },
            "operatingCost": {
              "description": "The approximate annual cost for the bus route.",
              "type": "number"
            },
            "optimalCapacity": {
              "description": "The percentage of seats filled under optimal conditions.",
              "type": "number"
            },
            "programs": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "programReference": {
                    "additionalProperties": false,
                    "properties": {
                      "educationOrganizationId": {
                        "description": "The identifier assigned to an education organization.",
                        "type": "integer"
                      },
                      "programName": {
                        "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
                        "maxLength": 60,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "programTypeDescriptor": {
                        "description": "The type of program.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "educationOrganizationId",
                      "programName",
                      "programTypeDescriptor"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "programReference"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "serviceAreaPostalCodes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "serviceAreaPostalCode": {
                    "description": "The postal codes served by the bus route.",
                    "maxLength": 17,
                    "type": "string"
                  }
                },
                "required": [
                  "serviceAreaPostalCode"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "staffEducationOrganizationAssignmentAssociationReference": {
              "additionalProperties": false,
              "properties": {
                "beginDate": {
                  "description": "Month, day, and year of the start or effective date of a staff member's employment, contract, or relationship with the education organization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                  "format": "date",
                  "type": "string"
                },
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "staffClassificationDescriptor": {
                  "description": "The titles of employment, official status, or rank of education staff.",
                  "type": "string"
                },
                "staffUniqueId": {
                  "description": "A unique alphanumeric code assigned to a staff.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "beginDate",
                "educationOrganizationId",
                "staffUniqueId",
                "staffClassificationDescriptor"
              ],
              "type": "object"
            },
            "startDate": {
              "description": "The date the bus route became operational.",
              "format": "date",
              "type": "string"
            },
            "startTimes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "startTime": {
                    "description": "The time the bus route begins.",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "startTime"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "telephones": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "doNotPublishIndicator": {
                    "description": "An indication that the telephone number should not be published.",
                    "type": "boolean"
                  },
                  "orderOfPriority": {
                    "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "telephoneNumber": {
                    "description": "The telephone number including the area code, and extension, if applicable.",
                    "maxLength": 24,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "telephoneNumberTypeDescriptor": {
                    "description": "The type of communication number listed for an individual or organization.",
                    "type": "string"
                  },
                  "textMessageCapabilityIndicator": {
                    "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "telephoneNumber",
                  "telephoneNumberTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "weeklyMileage": {
              "description": "The approximate weekly mileage for the bus route.",
              "type": "number"
            }
          },
          "required": [
            "busReference",
            "busRouteNumber",
            "busRouteDirection",
            "startTimes",
            "operatingCost",
            "expectedTransitTime",
            "hoursPerWeek",
            "serviceAreaPostalCodes",
            "telephones"
          ],
          "title": "Sample.BusRoute",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.busRouteDuration",
          "$.busRouteNumber",
          "$.busYears[*].busYear",
          "$.expectedTransitTime",
          "$.hoursPerWeek",
          "$.operatingCost",
          "$.optimalCapacity",
          "$.programs[*].programReference.educationOrganizationId",
          "$.staffEducationOrganizationAssignmentAssociationReference.educationOrganizationId",
          "$.telephones[*].orderOfPriority",
          "$.weeklyMileage"
        ],
        "queryFieldMapping": {
          "beginDate": [
            {
              "path": "$.staffEducationOrganizationAssignmentAssociationReference.beginDate",
              "type": "date"
            }
          ],
          "busId": [
            {
              "path": "$.busReference.busId",
              "type": "string"
            }
          ],
          "busRouteDirection": [
            {
              "path": "$.busRouteDirection",
              "type": "string"
            }
          ],
          "busRouteDuration": [
            {
              "path": "$.busRouteDuration",
              "type": "number"
            }
          ],
          "busRouteNumber": [
            {
              "path": "$.busRouteNumber",
              "type": "number"
            }
          ],
          "daily": [
            {
              "path": "$.daily",
              "type": "boolean"
            }
          ],
          "disabilityDescriptor": [
            {
              "path": "$.disabilityDescriptor",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.staffEducationOrganizationAssignmentAssociationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "expectedTransitTime": [
            {
              "path": "$.expectedTransitTime",
              "type": "number"
            }
          ],
          "hoursPerWeek": [
            {
              "path": "$.hoursPerWeek",
              "type": "number"
            }
          ],
          "operatingCost": [
            {
              "path": "$.operatingCost",
              "type": "number"
            }
          ],
          "optimalCapacity": [
            {
              "path": "$.optimalCapacity",
              "type": "number"
            }
          ],
          "staffClassificationDescriptor": [
            {
              "path": "$.staffEducationOrganizationAssignmentAssociationReference.staffClassificationDescriptor",
              "type": "string"
            }
          ],
          "staffUniqueId": [
            {
              "path": "$.staffEducationOrganizationAssignmentAssociationReference.staffUniqueId",
              "type": "string"
            }
          ],
          "startDate": [
            {
              "path": "$.startDate",
              "type": "date"
            }
          ],
          "weeklyMileage": [
            {
              "path": "$.weeklyMileage",
              "type": "number"
            }
          ]
        },
        "resourceName": "BusRoute",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "buses": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "BusId": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.busId",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.busId"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This is an example of a new domain entity.",
          "properties": {
            "busId": {
              "description": "The unique identifier for the bus.",
              "maxLength": 60,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            }
          },
          "required": [
            "busId"
          ],
          "title": "Sample.Bus",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "busId": [
            {
              "path": "$.busId",
              "type": "string"
            }
          ]
        },
        "resourceName": "Bus",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "contacts": {
        "arrayUniquenessConstraints": [
          {
            "nestedConstraints": [
              {
                "basePath": "$._ext.sample.addresses[*]",
                "paths": [
                  "$.periods[*].beginDate"
                ]
              }
            ],
            "paths": [
              "$._ext.sample.addresses[*].addressTypeDescriptor",
              "$._ext.sample.addresses[*].city",
              "$._ext.sample.addresses[*].postalCode",
              "$._ext.sample.addresses[*].stateAbbreviationDescriptor",
              "$._ext.sample.addresses[*].streetNumberName"
            ]
          },
          {
            "paths": [
              "$._ext.sample.authors[*].author"
            ]
          },
          {
            "paths": [
              "$._ext.sample.ceilingHeights[*].ceilingHeight"
            ]
          },
          {
            "paths": [
              "$._ext.sample.favoriteBookTitles[*].favoriteBookTitle"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.addresses[*].doNotPublishIndicator",
          "$._ext.sample.cteProgramService.primaryIndicator",
          "$._ext.sample.isSportsFan"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 1,
            "path": "$._ext.sample.ceilingHeights[*].ceilingHeight",
            "totalDigits": 5
          },
          {
            "decimalPlaces": 4,
            "path": "$._ext.sample.gpa",
            "totalDigits": 18
          }
        ],
        "documentPathsMapping": {
          "Address.AddressTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].addressTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "AddressTypeDescriptor",
            "type": "string"
          },
          "Address.ApartmentRoomSuiteNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].apartmentRoomSuiteNumber",
            "type": "string"
          },
          "Address.BuildingSiteNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].buildingSiteNumber",
            "type": "string"
          },
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].city",
            "type": "string"
          },
          "Address.CongressionalDistrict": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].congressionalDistrict",
            "type": "string"
          },
          "Address.CountyFIPSCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].countyFIPSCode",
            "type": "string"
          },
          "Address.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].doNotPublishIndicator",
            "type": "boolean"
          },
          "Address.Latitude": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].latitude",
            "type": "string"
          },
          "Address.LocaleDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].localeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "LocaleDescriptor",
            "type": "string"
          },
          "Address.Longitude": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].longitude",
            "type": "string"
          },
          "Address.NameOfCounty": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].nameOfCounty",
            "type": "string"
          },
          "Address.Period.BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].periods[*].beginDate",
            "type": "date"
          },
          "Address.Period.EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].periods[*].endDate",
            "type": "date"
          },
          "Address.PostalCode": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].postalCode",
            "type": "string"
          },
          "Address.StateAbbreviationDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].stateAbbreviationDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "StateAbbreviationDescriptor",
            "type": "string"
          },
          "Address.StreetNumberName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].streetNumberName",
            "type": "string"
          },
          "Author": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.authors[*].author",
            "type": "string"
          },
          "AverageCarLineWait": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.averageCarLineWait",
            "type": "number"
          },
          "BecameParent": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.becameParent",
            "type": "number"
          },
          "CTEProgramService.CIPCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.cipCode",
            "type": "string"
          },
          "CTEProgramService.CTEProgramServiceDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.cteProgramService.cteProgramServiceDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CTEProgramServiceDescriptor",
            "type": "string"
          },
          "CTEProgramService.PrimaryIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.primaryIndicator",
            "type": "boolean"
          },
          "CTEProgramService.ServiceBeginDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.serviceBeginDate",
            "type": "date"
          },
          "CTEProgramService.ServiceEndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.serviceEndDate",
            "type": "date"
          },
          "CeilingHeight": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.ceilingHeights[*].ceilingHeight",
            "type": "number"
          },
          "CoffeeSpend": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.coffeeSpend",
            "type": "number"
          },
          "CredentialFieldDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.sample.credentialFieldDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CredentialFieldDescriptor",
            "type": "string"
          },
          "Duration": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.duration",
            "type": "number"
          },
          "EducationContent": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.contentIdentifier",
                "referenceJsonPath": "$._ext.sample.educationContents[*].educationContentReference.contentIdentifier",
                "type": "string"
              }
            ],
            "resourceName": "EducationContent"
          },
          "FavoriteBookTitle": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.favoriteBookTitles[*].favoriteBookTitle",
            "type": "string"
          },
          "GPA": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.gpa",
            "type": "number"
          },
          "GraduationDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.graduationDate",
            "type": "date"
          },
          "IsSportsFan": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.isSportsFan",
            "type": "boolean"
          },
          "LuckyNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.luckyNumber",
            "type": "number"
          },
          "PreferredWakeUpTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.preferredWakeUpTime",
            "type": "time"
          },
          "RainCertainty": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.rainCertainty",
            "type": "number"
          },
          "StudentProgramAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.beginDate",
                "referenceJsonPath": "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.beginDate",
                "type": "date"
              },
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.programEducationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programReference.programName",
                "referenceJsonPath": "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.programName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.programReference.programTypeDescriptor",
                "referenceJsonPath": "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.programTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentUniqueId",
                "referenceJsonPath": "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.studentUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "StudentProgramAssociation"
          },
          "TeacherConference.DayOfWeek": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.teacherConference.dayOfWeek",
            "type": "string"
          },
          "TeacherConference.EndTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.teacherConference.endTime",
            "type": "time"
          },
          "TeacherConference.StartTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.teacherConference.startTime",
            "type": "time"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "addresses": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "addressTypeDescriptor": {
                            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
                            "type": "string"
                          },
                          "apartmentRoomSuiteNumber": {
                            "description": "The apartment, room, or suite number of an address.",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "buildingSiteNumber": {
                            "description": "The number of the building on the site, if more than one building shares the same address.",
                            "maxLength": 20,
                            "type": "string"
                          },
                          "city": {
                            "description": "The name of the city in which an address is located.",
                            "maxLength": 30,
                            "minLength": 2,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          },
                          "congressionalDistrict": {
                            "description": "The congressional district in which an address is located.",
                            "maxLength": 30,
                            "type": "string"
                          },
                          "countyFIPSCode": {
                            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
                            "maxLength": 5,
                            "minLength": 3,
                            "type": "string"
                          },
                          "doNotPublishIndicator": {
                            "description": "An indication that the address should not be published.",
                            "type": "boolean"
                          },
                          "latitude": {
                            "description": "The geographic latitude of the physical address.",
                            "maxLength": 20,
                            "type": "string"
                          },
                          "localeDescriptor": {
                            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
                            "type": "string"
                          },
                          "longitude": {
                            "description": "The geographic longitude of the physical address.",
                            "maxLength": 20,
                            "type": "string"
                          },
                          "nameOfCounty": {
                            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
                            "maxLength": 30,
                            "type": "string"
                          },
                          "periods": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "beginDate": {
                                  "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                  "format": "date",
                                  "type": "string"
                                },
                                "endDate": {
                                  "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                  "format": "date",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "beginDate"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array",
                            "uniqueItems": false
                          },
                          "postalCode": {
                            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
                            "maxLength": 17,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          },
                          "stateAbbreviationDescriptor": {
                            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
                            "type": "string"
                          },
                          "streetNumberName": {
                            "description": "The street number and street name or post office box number of an address.",
                            "maxLength": 150,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "streetNumberName",
                          "city",
                          "stateAbbreviationDescriptor",
                          "postalCode",
                          "addressTypeDescriptor"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "authors": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "author": {
                            "description": "The contact's favorite authors.",
                            "maxLength": 100,
                            "type": "string"
                          }
                        },
                        "required": [
                          "author"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "averageCarLineWait": {
                      "description": "The time spent per day waiting in the car line.",
                      "type": "number"
                    },
                    "becameParent": {
                      "description": "The year in which the contact first became a contact.",
                      "type": "integer"
                    },
                    "ceilingHeights": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "ceilingHeight": {
                            "description": "The height of the ceiling in the rooms of the contact's home.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "ceilingHeight"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "coffeeSpend": {
                      "description": "How much the contact spends on coffee in a week.",
                      "type": "number"
                    },
                    "credentialFieldDescriptor": {
                      "description": "The field in which the contact holds a credential.",
                      "type": "string"
                    },
                    "cteProgramService": {
                      "additionalProperties": false,
                      "properties": {
                        "cipCode": {
                          "description": "Number and description of the CIP code associated with the student's CTE program.",
                          "maxLength": 120,
                          "type": "string"
                        },
                        "cteProgramServiceDescriptor": {
                          "description": "Indicates the service being provided to the student by the CTE program.",
                          "type": "string"
                        },
                        "primaryIndicator": {
                          "description": "True if service is a primary service.",
                          "type": "boolean"
                        },
                        "serviceBeginDate": {
                          "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                          "format": "date",
                          "type": "string"
                        },
                        "serviceEndDate": {
                          "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                          "format": "date",
                          "type": "string"
                        }
                      },
                      "required": [
                        "cteProgramServiceDescriptor"
                      ],
                      "type": "object"
                    },
                    "duration": {
                      "description": "The amount of time the contact spends reading to his/her children at bedtime.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "educationContents": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "educationContentReference": {
                            "additionalProperties": false,
                            "properties": {
                              "contentIdentifier": {
                                "description": "A unique identifier for the education content.",
                                "maxLength": 225,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "contentIdentifier"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "educationContentReference"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "favoriteBookTitles": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "favoriteBookTitle": {
                            "description": "The title of the contact's favorite book.",
                            "maxLength": 100,
                            "type": "string"
                          }
                        },
                        "required": [
                          "favoriteBookTitle"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "gpa": {
                      "description": "The contact's high school GPA.",
                      "type": "number"
                    },
                    "graduationDate": {
                      "description": "The date the contact graduated high school.",
                      "format": "date",
                      "type": "string"
                    },
                    "isSportsFan": {
                      "description": "An indication as to whether the contact is a sports fan.",
                      "type": "boolean"
                    },
                    "luckyNumber": {
                      "description": "The contact's lucky number.",
                      "type": "integer"
                    },
                    "preferredWakeUpTime": {
                      "description": "The time the contact would prefer to wake up in the morning.",
                      "format": "time",
                      "type": "string"
                    },
                    "rainCertainty": {
                      "description": "The percent likelihood that it will rain when the contact volunteers to chaperone a field trip.",
                      "type": "number"
                    },
                    "studentProgramAssociations": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "studentProgramAssociationReference": {
                            "additionalProperties": false,
                            "properties": {
                              "beginDate": {
                                "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                "format": "date",
                                "type": "string"
                              },
                              "educationOrganizationId": {
                                "description": "The identifier assigned to an education organization.",
                                "type": "integer"
                              },
                              "programEducationOrganizationId": {
                                "description": "The identifier assigned to an education organization.",
                                "type": "integer"
                              },
                              "programName": {
                                "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
                                "maxLength": 60,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              },
                              "programTypeDescriptor": {
                                "description": "The type of program.",
                                "type": "string"
                              },
                              "studentUniqueId": {
                                "description": "A unique alphanumeric code assigned to a student.",
                                "maxLength": 32,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "beginDate",
                              "educationOrganizationId",
                              "programEducationOrganizationId",
                              "programName",
                              "programTypeDescriptor",
                              "studentUniqueId"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "studentProgramAssociationReference"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "teacherConference": {
                      "additionalProperties": false,
                      "properties": {
                        "dayOfWeek": {
                          "description": "The day of the week the parent prefers to meet for parent-teacher conferences.",
                          "maxLength": 10,
                          "pattern": "^(?!\\s*$).+",
                          "type": "string"
                        },
                        "endTime": {
                          "description": "The end time the parent prefers to meet for parent-teacher conferences.",
                          "format": "time",
                          "type": "string"
                        },
                        "startTime": {
                          "description": "The start time the parent prefers to meet for parent-teacher conferences.",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "dayOfWeek",
                        "startTime",
                        "endTime"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "isSportsFan",
            "favoriteBookTitles",
            "teacherConference"
          ],
          "title": "Sample.Contact",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.sample.averageCarLineWait",
          "$._ext.sample.becameParent",
          "$._ext.sample.ceilingHeights[*].ceilingHeight",
          "$._ext.sample.coffeeSpend",
          "$._ext.sample.duration",
          "$._ext.sample.gpa",
          "$._ext.sample.luckyNumber",
          "$._ext.sample.rainCertainty",
          "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.educationOrganizationId",
          "$._ext.sample.studentProgramAssociations[*].studentProgramAssociationReference.programEducationOrganizationId"
        ],
        "resourceName": "Contact",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "favoriteBookCategoryDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "FavoriteBookCategoryDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "membershipTypeDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "MembershipTypeDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "schools": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.cteProgramService.primaryIndicator",
          "$._ext.sample.isExemplary"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "CTEProgramService.CIPCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.cipCode",
            "type": "string"
          },
          "CTEProgramService.CTEProgramServiceDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.cteProgramService.cteProgramServiceDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CTEProgramServiceDescriptor",
            "type": "string"
          },
          "CTEProgramService.PrimaryIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.primaryIndicator",
            "type": "boolean"
          },
          "CTEProgramService.ServiceBeginDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.serviceBeginDate",
            "type": "date"
          },
          "CTEProgramService.ServiceEndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.cteProgramService.serviceEndDate",
            "type": "date"
          },
          "DirectlyOwnedBus": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Sample",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.busId",
                "referenceJsonPath": "$._ext.sample.directlyOwnedBuses[*].directlyOwnedBusReference.busId",
                "type": "string"
              }
            ],
            "resourceName": "Bus"
          },
          "IsExemplary": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.isExemplary",
            "type": "boolean"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "cteProgramService": {
                      "additionalProperties": false,
                      "properties": {
                        "cipCode": {
                          "description": "Number and description of the CIP code associated with the student's CTE program.",
                          "maxLength": 120,
                          "type": "string"
                        },
                        "cteProgramServiceDescriptor": {
                          "description": "Indicates the service being provided to the student by the CTE program.",
                          "type": "string"
                        },
                        "primaryIndicator": {
                          "description": "True if service is a primary service.",
                          "type": "boolean"
                        },
                        "serviceBeginDate": {
                          "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                          "format": "date",
                          "type": "string"
                        },
                        "serviceEndDate": {
                          "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                          "format": "date",
                          "type": "string"
                        }
                      },
                      "required": [
                        "cteProgramServiceDescriptor"
                      ],
                      "type": "object"
                    },
                    "directlyOwnedBuses": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "directlyOwnedBusReference": {
                            "additionalProperties": false,
                            "properties": {
                              "busId": {
                                "description": "The unique identifier for the bus.",
                                "maxLength": 60,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "busId"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "directlyOwnedBusReference"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "isExemplary": {
                      "description": "An indication as to whether the school is exemplary.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.School",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "resourceName": "School",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "staffs": {
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$._ext.sample.pets[*].petName"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.pets[*].isFixed"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "FirstPetOwnedDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.firstPetOwnedDate",
            "type": "date"
          },
          "Pet.IsFixed": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.pets[*].isFixed",
            "type": "boolean"
          },
          "Pet.PetName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.pets[*].petName",
            "type": "string"
          },
          "PetPreference.MaximumWeight": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.petPreference.maximumWeight",
            "type": "number"
          },
          "PetPreference.MinimumWeight": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.petPreference.minimumWeight",
            "type": "number"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "firstPetOwnedDate": {
                      "description": "The date the staff member adopted the first household pet.",
                      "format": "date",
                      "type": "string"
                    },
                    "petPreference": {
                      "additionalProperties": false,
                      "properties": {
                        "maximumWeight": {
                          "description": "The preferred maximum weight of a household pet.",
                          "type": "integer"
                        },
                        "minimumWeight": {
                          "description": "The preferred minimum weight of a household pet.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "minimumWeight",
                        "maximumWeight"
                      ],
                      "type": "object"
                    },
                    "pets": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "isFixed": {
                            "description": "An indication as to whether the pet has been spayed/neutered.",
                            "type": "boolean"
                          },
                          "petName": {
                            "description": "The pet's name.",
                            "maxLength": 20,
                            "minLength": 3,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "petName"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.Staff",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.sample.petPreference.maximumWeight",
          "$._ext.sample.petPreference.minimumWeight"
        ],
        "resourceName": "Staff",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "studentArtProgramAssociations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.artMedia[*].artMediumDescriptor"
            ]
          },
          {
            "paths": [
              "$.favoriteBook.artMedia[*].artMediumDescriptor"
            ]
          },
          {
            "paths": [
              "$.portfolioYears[*].portfolioYears"
            ]
          },
          {
            "paths": [
              "$.programParticipationStatuses[*].participationStatusDescriptor",
              "$.programParticipationStatuses[*].statusBeginDate"
            ]
          },
          {
            "paths": [
              "$.services[*].serviceDescriptor"
            ]
          },
          {
            "paths": [
              "$.styles[*].style"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$.privateArtProgram",
          "$.servedOutsideOfRegularSession",
          "$.services[*].primaryIndicator"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 4,
            "path": "$.numberOfDaysInAttendance",
            "totalDigits": 18
          },
          {
            "decimalPlaces": 2,
            "path": "$.hoursPerDay",
            "totalDigits": 5
          }
        ],
        "documentPathsMapping": {
          "ArtMediumDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.artMedia[*].artMediumDescriptor",
            "projectName": "Sample",
            "resourceName": "ArtMediumDescriptor",
            "type": "string"
          },
          "ArtPieces": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.artPieces",
            "type": "number"
          },
          "BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.beginDate",
            "type": "date"
          },
          "EducationOrganization": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationId",
                "referenceJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "type": "number"
              }
            ],
            "resourceName": "EducationOrganization"
          },
          "EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.endDate",
            "type": "date"
          },
          "ExhibitDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.exhibitDate",
            "type": "date"
          },
          "FavoriteBook.BookTitle": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.favoriteBook.bookTitle",
            "type": "string"
          },
          "FavoriteBook.FavoriteBookArtMedium.ArtMediumDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.favoriteBook.artMedia[*].artMediumDescriptor",
            "projectName": "Sample",
            "resourceName": "ArtMediumDescriptor",
            "type": "string"
          },
          "FavoriteBook.FavoriteBookArtMedium.ArtPieces": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.favoriteBook.artMedia[*].artPieces",
            "type": "number"
          },
          "FavoriteBook.FavoriteBookCategoryDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.favoriteBook.favoriteBookCategoryDescriptor",
            "projectName": "Sample",
            "resourceName": "FavoriteBookCategoryDescriptor",
            "type": "string"
          },
          "HoursPerDay": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.hoursPerDay",
            "type": "number"
          },
          "IdentificationCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.identificationCode",
            "type": "string"
          },
          "KilnReservation": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.kilnReservation",
            "type": "time"
          },
          "KilnReservationLength": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.kilnReservationLength",
            "type": "number"
          },
          "MasteredMediums": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.masteredMediums",
            "type": "number"
          },
          "NumberOfDaysInAttendance": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.numberOfDaysInAttendance",
            "type": "number"
          },
          "PortfolioPieces": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.portfolioPieces",
            "type": "number"
          },
          "PortfolioYears": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.portfolioYears[*].portfolioYears",
            "type": "number"
          },
          "PrivateArtProgram": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.privateArtProgram",
            "type": "boolean"
          },
          "Program": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.programReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programName",
                "referenceJsonPath": "$.programReference.programName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.programTypeDescriptor",
                "referenceJsonPath": "$.programReference.programTypeDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Program"
          },
          "ProgramFees": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.programFees",
            "type": "number"
          },
          "ProgramParticipationStatus.DesignatedBy": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.programParticipationStatuses[*].designatedBy",
            "type": "string"
          },
          "ProgramParticipationStatus.ParticipationStatusDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.programParticipationStatuses[*].participationStatusDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ParticipationStatusDescriptor",
            "type": "string"
          },
          "ProgramParticipationStatus.StatusBeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.programParticipationStatuses[*].statusBeginDate",
            "type": "date"
          },
          "ProgramParticipationStatus.StatusEndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.programParticipationStatuses[*].statusEndDate",
            "type": "date"
          },
          "ReasonExitedDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.reasonExitedDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ReasonExitedDescriptor",
            "type": "string"
          },
          "ServedOutsideOfRegularSession": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.servedOutsideOfRegularSession",
            "type": "boolean"
          },
          "Service.PrimaryIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.services[*].primaryIndicator",
            "type": "boolean"
          },
          "Service.ServiceBeginDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.services[*].serviceBeginDate",
            "type": "date"
          },
          "Service.ServiceDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.services[*].serviceDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ServiceDescriptor",
            "type": "string"
          },
          "Service.ServiceEndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.services[*].serviceEndDate",
            "type": "date"
          },
          "Student": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.studentUniqueId",
                "referenceJsonPath": "$.studentReference.studentUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "Student"
          },
          "Style": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.styles[*].style",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.beginDate",
          "$.educationOrganizationReference.educationOrganizationId",
          "$.programReference.educationOrganizationId",
          "$.programReference.programName",
          "$.programReference.programTypeDescriptor",
          "$.studentReference.studentUniqueId"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This is an example of a subclass of an association.",
          "properties": {
            "artMedia": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "artMediumDescriptor": {
                    "description": "An Ed-Fi Descriptor",
                    "type": "string"
                  }
                },
                "required": [
                  "artMediumDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "artPieces": {
              "description": "The total number of art pieces completed by the student during the program.",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "beginDate": {
              "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "educationOrganizationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                }
              },
              "required": [
                "educationOrganizationId"
              ],
              "type": "object"
            },
            "endDate": {
              "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "exhibitDate": {
              "description": "Start date for the program's art exhibit to display the student's work.",
              "format": "date",
              "type": "string"
            },
            "favoriteBook": {
              "additionalProperties": false,
              "properties": {
                "artMedia": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "artMediumDescriptor": {
                        "description": "This is documentation.",
                        "type": "string"
                      },
                      "artPieces": {
                        "description": "This is documentation.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "artMediumDescriptor"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": false
                },
                "bookTitle": {
                  "description": "This is documentation.",
                  "maxLength": 200,
                  "minLength": 1,
                  "type": "string"
                },
                "favoriteBookCategoryDescriptor": {
                  "description": "This is documentation.",
                  "type": "string"
                }
              },
              "required": [
                "favoriteBookCategoryDescriptor"
              ],
              "type": "object"
            },
            "hoursPerDay": {
              "description": "The number of hours a student spends in the program each school day.",
              "type": "number"
            },
            "identificationCode": {
              "description": "A unique identification code used to identify the student's artwork produced in the program.",
              "maxLength": 60,
              "type": "string"
            },
            "kilnReservation": {
              "description": "The student's reserved time for use of the kiln.",
              "format": "time",
              "type": "string"
            },
            "kilnReservationLength": {
              "description": "The number of clock minutes dedicated to the student's kiln reservation.",
              "type": "number"
            },
            "masteredMediums": {
              "description": "Percentage of the mediums taught in the program which the student mastered.",
              "type": "number"
            },
            "numberOfDaysInAttendance": {
              "description": "Number of days the student is in attendance at the program.",
              "type": "number"
            },
            "portfolioPieces": {
              "description": "The total number of pieces in the student's portfolio.",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "portfolioYears": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "portfolioYear": {
                    "description": "The of year(s) of work included in the student's portfolio.",
                    "type": "integer"
                  }
                },
                "required": [
                  "portfolioYear"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "privateArtProgram": {
              "description": "Indicator that the student participated in art education at a private agency or institution.",
              "type": "boolean"
            },
            "programFees": {
              "description": "Required program fees to purchase materials for the student.",
              "type": "number"
            },
            "programParticipationStatuses": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "designatedBy": {
                    "description": "The person, organization, or department that designated the participation status.",
                    "maxLength": 60,
                    "type": "string"
                  },
                  "participationStatusDescriptor": {
                    "description": "The student's program participation status.",
                    "type": "string"
                  },
                  "statusBeginDate": {
                    "description": "The date the student's program participation status began.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                    "format": "date",
                    "type": "string"
                  },
                  "statusEndDate": {
                    "description": "The date the student's program participation status ended.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                    "format": "date",
                    "type": "string"
                  }
                },
                "required": [
                  "participationStatusDescriptor",
                  "statusBeginDate"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "programReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "programName": {
                  "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "programTypeDescriptor": {
                  "description": "The type of program.",
                  "type": "string"
                }
              },
              "required": [
                "educationOrganizationId",
                "programName",
                "programTypeDescriptor"
              ],
              "type": "object"
            },
            "reasonExitedDescriptor": {
              "description": "The reason the student left the program within a school or district.",
              "type": "string"
            },
            "servedOutsideOfRegularSession": {
              "description": "Indicates whether the student received services during the summer session or between sessions.",
              "type": "boolean"
            },
            "services": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "primaryIndicator": {
                    "description": "True if service is a primary service.",
                    "type": "boolean"
                  },
                  "serviceBeginDate": {
                    "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                    "format": "date",
                    "type": "string"
                  },
                  "serviceDescriptor": {
                    "description": "Indicates the service being provided to the student by the program.",
                    "type": "string"
                  },
                  "serviceEndDate": {
                    "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                    "format": "date",
                    "type": "string"
                  }
                },
                "required": [
                  "serviceDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "studentReference": {
              "additionalProperties": false,
              "properties": {
                "studentUniqueId": {
                  "description": "A unique alphanumeric code assigned to a student.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "studentUniqueId"
              ],
              "type": "object"
            },
            "styles": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "style": {
                    "description": "The art style(s) exhibited by the student in the program.",
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "style"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "privateArtProgram",
            "styles",
            "studentReference",
            "programReference",
            "beginDate",
            "educationOrganizationReference"
          ],
          "title": "Sample.StudentArtProgramAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.artPieces",
          "$.educationOrganizationReference.educationOrganizationId",
          "$.favoriteBook.artMedia[*].artPieces",
          "$.hoursPerDay",
          "$.kilnReservationLength",
          "$.masteredMediums",
          "$.numberOfDaysInAttendance",
          "$.portfolioPieces",
          "$.portfolioYears[*].portfolioYears",
          "$.programFees",
          "$.programReference.educationOrganizationId"
        ],
        "queryFieldMapping": {
          "artPieces": [
            {
              "path": "$.artPieces",
              "type": "number"
            }
          ],
          "beginDate": [
            {
              "path": "$.beginDate",
              "type": "date"
            }
          ],
          "bookTitle": [
            {
              "path": "$.favoriteBook.bookTitle",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.educationOrganizationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "endDate": [
            {
              "path": "$.endDate",
              "type": "date"
            }
          ],
          "exhibitDate": [
            {
              "path": "$.exhibitDate",
              "type": "date"
            }
          ],
          "favoriteBookCategoryDescriptor": [
            {
              "path": "$.favoriteBook.favoriteBookCategoryDescriptor",
              "type": "string"
            }
          ],
          "hoursPerDay": [
            {
              "path": "$.hoursPerDay",
              "type": "number"
            }
          ],
          "identificationCode": [
            {
              "path": "$.identificationCode",
              "type": "string"
            }
          ],
          "kilnReservation": [
            {
              "path": "$.kilnReservation",
              "type": "time"
            }
          ],
          "kilnReservationLength": [
            {
              "path": "$.kilnReservationLength",
              "type": "number"
            }
          ],
          "masteredMediums": [
            {
              "path": "$.masteredMediums",
              "type": "number"
            }
          ],
          "numberOfDaysInAttendance": [
            {
              "path": "$.numberOfDaysInAttendance",
              "type": "number"
            }
          ],
          "portfolioPieces": [
            {
              "path": "$.portfolioPieces",
              "type": "number"
            }
          ],
          "privateArtProgram": [
            {
              "path": "$.privateArtProgram",
              "type": "boolean"
            }
          ],
          "programFees": [
            {
              "path": "$.programFees",
              "type": "number"
            }
          ],
          "programName": [
            {
              "path": "$.programReference.programName",
              "type": "string"
            }
          ],
          "programTypeDescriptor": [
            {
              "path": "$.programReference.programTypeDescriptor",
              "type": "string"
            }
          ],
          "reasonExitedDescriptor": [
            {
              "path": "$.reasonExitedDescriptor",
              "type": "string"
            }
          ],
          "servedOutsideOfRegularSession": [
            {
              "path": "$.servedOutsideOfRegularSession",
              "type": "boolean"
            }
          ],
          "studentUniqueId": [
            {
              "path": "$.studentReference.studentUniqueId",
              "type": "string"
            }
          ]
        },
        "resourceName": "StudentArtProgramAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.educationOrganizationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
            "$.studentReference.studentUniqueId"
          ]
        },
        "subclassType": "association",
        "superclassProjectName": "Ed-Fi",
        "superclassResourceName": "GeneralStudentProgramAssociation"
      },
      "studentCTEProgramAssociations": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.analysisCompleted"
        ],
        "dateTimeJsonPaths": [
          "$._ext.sample.analysisDate"
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "AnalysisCompleted": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.analysisCompleted",
            "type": "boolean"
          },
          "AnalysisDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.analysisDate",
            "type": "date-time"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "analysisCompleted": {
                      "description": "A unique identification code used to identify the student's artwork produced in the program.",
                      "type": "boolean"
                    },
                    "analysisDate": {
                      "description": "The date and time the CTEProgram analysis was completed.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.StudentCTEProgramAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "resourceName": "StudentCTEProgramAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "studentContactAssociations": {
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$._ext.sample.disciplines[*].disciplineDescriptor"
            ]
          },
          {
            "paths": [
              "$._ext.sample.favoriteBookTitles[*].favoriteBookTitle"
            ]
          },
          {
            "paths": [
              "$._ext.sample.hoursPerWeeks[*].hoursPerWeek"
            ]
          },
          {
            "paths": [
              "$._ext.sample.pagesReads[*].pagesRead"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.bedtimeReader",
          "$._ext.sample.telephone.doNotPublishIndicator",
          "$._ext.sample.telephone.textMessageCapabilityIndicator"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 2,
            "path": "$._ext.sample.pagesReads[*].pagesRead",
            "totalDigits": 18
          },
          {
            "decimalPlaces": 2,
            "path": "$._ext.sample.hoursPerWeeks[*].hoursPerWeek",
            "totalDigits": 5
          }
        ],
        "documentPathsMapping": {
          "BedtimeReader": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.bedtimeReader",
            "type": "boolean"
          },
          "BedtimeReadingRate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.bedtimeReadingRate",
            "type": "number"
          },
          "BookBudget": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.bookBudget",
            "type": "number"
          },
          "BooksBorrowed": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.booksBorrowed",
            "type": "number"
          },
          "DisciplineDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.sample.disciplines[*].disciplineDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "DisciplineDescriptor",
            "type": "string"
          },
          "FavoriteBookTitle": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.favoriteBookTitles[*].favoriteBookTitle",
            "type": "string"
          },
          "HoursPerWeek": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.hoursPerWeeks[*].hoursPerWeek",
            "type": "number"
          },
          "InterventionStudy": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.interventionStudyReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.interventionStudyIdentificationCode",
                "referenceJsonPath": "$._ext.sample.interventionStudyReference.interventionStudyIdentificationCode",
                "type": "string"
              }
            ],
            "resourceName": "InterventionStudy"
          },
          "LibraryDuration": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.libraryDuration",
            "type": "number"
          },
          "LibraryTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.libraryTime",
            "type": "time"
          },
          "LibraryVisits": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.libraryVisits",
            "type": "number"
          },
          "PagesRead": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.pagesReads[*].pagesRead",
            "type": "number"
          },
          "PriorContactRestrictions": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.priorContactRestrictions",
            "type": "string"
          },
          "ReadGreenEggsAndHamDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.readGreenEggsAndHamDate",
            "type": "date"
          },
          "ReadingTimeSpent": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.readingTimeSpent",
            "type": "number"
          },
          "StaffEducationOrganizationEmploymentAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.staffEducationOrganizationEmploymentAssociations[*].staffEducationOrganizationEmploymentAssociationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.employmentStatusDescriptor",
                "referenceJsonPath": "$._ext.sample.staffEducationOrganizationEmploymentAssociations[*].staffEducationOrganizationEmploymentAssociationReference.employmentStatusDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.hireDate",
                "referenceJsonPath": "$._ext.sample.staffEducationOrganizationEmploymentAssociations[*].staffEducationOrganizationEmploymentAssociationReference.hireDate",
                "type": "date"
              },
              {
                "identityJsonPath": "$.staffReference.staffUniqueId",
                "referenceJsonPath": "$._ext.sample.staffEducationOrganizationEmploymentAssociations[*].staffEducationOrganizationEmploymentAssociationReference.staffUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "StaffEducationOrganizationEmploymentAssociation"
          },
          "StudentRead": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.studentRead",
            "type": "number"
          },
          "Telephone.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.telephone.doNotPublishIndicator",
            "type": "boolean"
          },
          "Telephone.OrderOfPriority": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.telephone.orderOfPriority",
            "type": "number"
          },
          "Telephone.TelephoneNumber": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.telephone.telephoneNumber",
            "type": "string"
          },
          "Telephone.TelephoneNumberTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.telephone.telephoneNumberTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "TelephoneNumberTypeDescriptor",
            "type": "string"
          },
          "Telephone.TextMessageCapabilityIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.telephone.textMessageCapabilityIndicator",
            "type": "boolean"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "bedtimeReader": {
                      "description": "An indication as to whether the contact regularly reads to the student before bed.",
                      "type": "boolean"
                    },
                    "bedtimeReadingRate": {
                      "description": "The average number of pages the contact reads with the student each day.",
                      "type": "number"
                    },
                    "bookBudget": {
                      "description": "The contact's estimated monthly budget dedicated to books for the student.",
                      "type": "number"
                    },
                    "booksBorrowed": {
                      "description": "The total number of books the contact has borrowed on behalf of the student to date.",
                      "type": "integer"
                    },
                    "disciplines": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "disciplineDescriptor": {
                            "description": "An Ed-Fi Descriptor",
                            "type": "string"
                          }
                        },
                        "required": [
                          "disciplineDescriptor"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "favoriteBookTitles": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "favoriteBookTitle": {
                            "description": "The title of the student's favorite book.",
                            "maxLength": 100,
                            "type": "string"
                          }
                        },
                        "required": [
                          "favoriteBookTitle"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "hoursPerWeeks": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "hoursPerWeek": {
                            "description": "Total number of hours per week a student and contact dedicates to reading.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "hoursPerWeek"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "interventionStudyReference": {
                      "additionalProperties": false,
                      "properties": {
                        "educationOrganizationId": {
                          "description": "The identifier assigned to an education organization.",
                          "type": "integer"
                        },
                        "interventionStudyIdentificationCode": {
                          "description": "A unique number or alphanumeric code assigned to an intervention study.",
                          "maxLength": 60,
                          "pattern": "^(?!\\s)(.*\\S)$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "educationOrganizationId",
                        "interventionStudyIdentificationCode"
                      ],
                      "type": "object"
                    },
                    "libraryDuration": {
                      "description": "The actual or estimated number of clock minutes for a given library visit.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "libraryTime": {
                      "description": "The student's regularly scheduled library time during the school day.",
                      "format": "time",
                      "type": "string"
                    },
                    "libraryVisits": {
                      "description": "Total number of visits a student is allowed to the library in a single school day.",
                      "type": "integer"
                    },
                    "pagesReads": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "pagesRead": {
                            "description": "Total number of pages the contact has read the student.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "pagesRead"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "priorContactRestrictions": {
                      "description": "Previous restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).",
                      "maxLength": 250,
                      "type": "string"
                    },
                    "readGreenEggsAndHamDate": {
                      "description": "Date on which the contact first read the student Green Eggs and Ham by Dr. Seuss.",
                      "format": "date",
                      "type": "string"
                    },
                    "readingTimeSpent": {
                      "description": "The amount of time the contact spends reading to the student each day.",
                      "type": "number"
                    },
                    "staffEducationOrganizationEmploymentAssociations": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "staffEducationOrganizationEmploymentAssociationReference": {
                            "additionalProperties": false,
                            "properties": {
                              "educationOrganizationId": {
                                "description": "The identifier assigned to an education organization.",
                                "type": "integer"
                              },
                              "employmentStatusDescriptor": {
                                "description": "Reflects the type of employment or contract.",
                                "type": "string"
                              },
                              "hireDate": {
                                "description": "The month, day, and year on which an individual was hired for a position.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                "format": "date",
                                "type": "string"
                              },
                              "staffUniqueId": {
                                "description": "A unique alphanumeric code assigned to a staff.",
                                "maxLength": 32,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "educationOrganizationId",
                              "employmentStatusDescriptor",
                              "hireDate",
                              "staffUniqueId"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "staffEducationOrganizationEmploymentAssociationReference"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "studentRead": {
                      "description": "The year in which the student's reading habits are being recorded.",
                      "type": "integer"
                    },
                    "telephone": {
                      "additionalProperties": false,
                      "properties": {
                        "doNotPublishIndicator": {
                          "description": "An indication that the telephone number should not be published.",
                          "type": "boolean"
                        },
                        "orderOfPriority": {
                          "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "telephoneNumber": {
                          "description": "The telephone number including the area code, and extension, if applicable.",
                          "maxLength": 24,
                          "pattern": "^(?!\\s)(.*\\S)$",
                          "type": "string"
                        },
                        "telephoneNumberTypeDescriptor": {
                          "description": "The type of communication number listed for an individual or organization.",
                          "type": "string"
                        },
                        "textMessageCapabilityIndicator": {
                          "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "telephoneNumber",
                        "telephoneNumberTypeDescriptor"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "bedtimeReader",
            "favoriteBookTitles"
          ],
          "title": "Sample.StudentContactAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.sample.bedtimeReadingRate",
          "$._ext.sample.bookBudget",
          "$._ext.sample.booksBorrowed",
          "$._ext.sample.hoursPerWeeks[*].hoursPerWeek",
          "$._ext.sample.interventionStudyReference.educationOrganizationId",
          "$._ext.sample.libraryDuration",
          "$._ext.sample.libraryVisits",
          "$._ext.sample.pagesReads[*].pagesRead",
          "$._ext.sample.readingTimeSpent",
          "$._ext.sample.staffEducationOrganizationEmploymentAssociations[*].staffEducationOrganizationEmploymentAssociationReference.educationOrganizationId",
          "$._ext.sample.studentRead",
          "$._ext.sample.telephone.orderOfPriority"
        ],
        "resourceName": "StudentContactAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "studentEducationOrganizationAssociations": {
        "arrayUniquenessConstraints": [
          {
            "nestedConstraints": [
              {
                "basePath": "$._ext.sample.addresses[*]",
                "paths": [
                  "$.periods[*].beginDate"
                ]
              }
            ],
            "paths": [
              "$._ext.sample.addresses[*].addressTypeDescriptor",
              "$._ext.sample.addresses[*].city",
              "$._ext.sample.addresses[*].postalCode",
              "$._ext.sample.addresses[*].stateAbbreviationDescriptor",
              "$._ext.sample.addresses[*].streetNumberName"
            ]
          },
          {
            "nestedConstraints": [
              {
                "basePath": "$._ext.sample.studentCharacteristics[*]",
                "paths": [
                  "$.periods[*].beginDate"
                ]
              }
            ],
            "paths": [
              "$._ext.sample.studentCharacteristics[*].studentCharacteristicDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.addresses[*].doNotPublishIndicator"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Address.AddressTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].addressTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "AddressTypeDescriptor",
            "type": "string"
          },
          "Address.ApartmentRoomSuiteNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].apartmentRoomSuiteNumber",
            "type": "string"
          },
          "Address.BuildingSiteNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].buildingSiteNumber",
            "type": "string"
          },
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].city",
            "type": "string"
          },
          "Address.CongressionalDistrict": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].congressionalDistrict",
            "type": "string"
          },
          "Address.CountyFIPSCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].countyFIPSCode",
            "type": "string"
          },
          "Address.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].doNotPublishIndicator",
            "type": "boolean"
          },
          "Address.Latitude": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].latitude",
            "type": "string"
          },
          "Address.LocaleDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].localeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "LocaleDescriptor",
            "type": "string"
          },
          "Address.Longitude": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].longitude",
            "type": "string"
          },
          "Address.NameOfCounty": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].nameOfCounty",
            "type": "string"
          },
          "Address.Period.BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].periods[*].beginDate",
            "type": "date"
          },
          "Address.Period.EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.addresses[*].periods[*].endDate",
            "type": "date"
          },
          "Address.PostalCode": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].postalCode",
            "type": "string"
          },
          "Address.StateAbbreviationDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].stateAbbreviationDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "StateAbbreviationDescriptor",
            "type": "string"
          },
          "Address.StreetNumberName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.addresses[*].streetNumberName",
            "type": "string"
          },
          "FavoriteProgram": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.favoriteProgramReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programName",
                "referenceJsonPath": "$._ext.sample.favoriteProgramReference.programName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.programTypeDescriptor",
                "referenceJsonPath": "$._ext.sample.favoriteProgramReference.programTypeDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Program"
          },
          "StudentCharacteristic.DesignatedBy": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.studentCharacteristics[*].designatedBy",
            "type": "string"
          },
          "StudentCharacteristic.Period.BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.studentCharacteristics[*].periods[*].beginDate",
            "type": "date"
          },
          "StudentCharacteristic.Period.EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.studentCharacteristics[*].periods[*].endDate",
            "type": "date"
          },
          "StudentCharacteristic.StudentCharacteristicDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.studentCharacteristics[*].studentCharacteristicDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "StudentCharacteristicDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$._ext.sample.favoriteProgramReference.educationOrganizationId",
            "targetJsonPath": "$.educationOrganizationReference.educationOrganizationId"
          }
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "addresses": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "addressTypeDescriptor": {
                            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
                            "type": "string"
                          },
                          "apartmentRoomSuiteNumber": {
                            "description": "The apartment, room, or suite number of an address.",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "buildingSiteNumber": {
                            "description": "The number of the building on the site, if more than one building shares the same address.",
                            "maxLength": 20,
                            "type": "string"
                          },
                          "city": {
                            "description": "The name of the city in which an address is located.",
                            "maxLength": 30,
                            "minLength": 2,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          },
                          "congressionalDistrict": {
                            "description": "The congressional district in which an address is located.",
                            "maxLength": 30,
                            "type": "string"
                          },
                          "countyFIPSCode": {
                            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
                            "maxLength": 5,
                            "minLength": 3,
                            "type": "string"
                          },
                          "doNotPublishIndicator": {
                            "description": "An indication that the address should not be published.",
                            "type": "boolean"
                          },
                          "latitude": {
                            "description": "The geographic latitude of the physical address.",
                            "maxLength": 20,
                            "type": "string"
                          },
                          "localeDescriptor": {
                            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
                            "type": "string"
                          },
                          "longitude": {
                            "description": "The geographic longitude of the physical address.",
                            "maxLength": 20,
                            "type": "string"
                          },
                          "nameOfCounty": {
                            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
                            "maxLength": 30,
                            "type": "string"
                          },
                          "periods": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "beginDate": {
                                  "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                  "format": "date",
                                  "type": "string"
                                },
                                "endDate": {
                                  "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                  "format": "date",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "beginDate"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array",
                            "uniqueItems": false
                          },
                          "postalCode": {
                            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
                            "maxLength": 17,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          },
                          "stateAbbreviationDescriptor": {
                            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
                            "type": "string"
                          },
                          "streetNumberName": {
                            "description": "The street number and street name or post office box number of an address.",
                            "maxLength": 150,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "streetNumberName",
                          "city",
                          "stateAbbreviationDescriptor",
                          "postalCode",
                          "addressTypeDescriptor"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "favoriteProgramReference": {
                      "additionalProperties": false,
                      "properties": {
                        "educationOrganizationId": {
                          "description": "The identifier assigned to an education organization.",
                          "type": "integer"
                        },
                        "programName": {
                          "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
                          "maxLength": 60,
                          "pattern": "^(?!\\s)(.*\\S)$",
                          "type": "string"
                        },
                        "programTypeDescriptor": {
                          "description": "The type of program.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "educationOrganizationId",
                        "programName",
                        "programTypeDescriptor"
                      ],
                      "type": "object"
                    },
                    "studentCharacteristics": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "designatedBy": {
                            "description": "The person, organization, or department that designated the characteristic.",
                            "maxLength": 60,
                            "type": "string"
                          },
                          "periods": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "beginDate": {
                                  "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                  "format": "date",
                                  "type": "string"
                                },
                                "endDate": {
                                  "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                  "format": "date",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "beginDate"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array",
                            "uniqueItems": false
                          },
                          "studentCharacteristicDescriptor": {
                            "description": "The characteristic designated for the student.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "studentCharacteristicDescriptor"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.StudentEducationOrganizationAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.sample.favoriteProgramReference.educationOrganizationId"
        ],
        "resourceName": "StudentEducationOrganizationAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "studentGraduationPlanAssociations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.academicSubjects[*].academicSubjectDescriptor"
            ]
          },
          {
            "paths": [
              "$.careerPathwayCodes[*].careerPathwayCode"
            ]
          },
          {
            "paths": [
              "$.descriptions[*].description"
            ]
          },
          {
            "paths": [
              "$.designatedBies[*].designatedBy"
            ]
          },
          {
            "paths": [
              "$.industryCredentials[*].industryCredential"
            ]
          },
          {
            "paths": [
              "$.yearsAttendeds[*].yearsAttended"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$.cteProgramService.primaryIndicator",
          "$.isActivePlan"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 4,
            "path": "$.targetGPA",
            "totalDigits": 18
          },
          {
            "decimalPlaces": 2,
            "path": "$.hoursPerWeek",
            "totalDigits": 5
          }
        ],
        "documentPathsMapping": {
          "AcademicSubjectDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.academicSubjects[*].academicSubjectDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "AcademicSubjectDescriptor",
            "type": "string"
          },
          "CTEProgramService.CIPCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.cteProgramService.cipCode",
            "type": "string"
          },
          "CTEProgramService.CTEProgramServiceDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.cteProgramService.cteProgramServiceDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CTEProgramServiceDescriptor",
            "type": "string"
          },
          "CTEProgramService.PrimaryIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.cteProgramService.primaryIndicator",
            "type": "boolean"
          },
          "CTEProgramService.ServiceBeginDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.cteProgramService.serviceBeginDate",
            "type": "date"
          },
          "CTEProgramService.ServiceEndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.cteProgramService.serviceEndDate",
            "type": "date"
          },
          "CareerPathwayCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.careerPathwayCodes[*].careerPathwayCode",
            "type": "number"
          },
          "CommencementTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.commencementTime",
            "type": "time"
          },
          "Description": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.descriptions[*].description",
            "type": "string"
          },
          "DesignatedBy": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.designatedBies[*].designatedBy",
            "type": "string"
          },
          "EffectiveDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.effectiveDate",
            "type": "date"
          },
          "GraduationFee": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.graduationFee",
            "type": "number"
          },
          "GraduationPlan": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.graduationPlanReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.graduationPlanTypeDescriptor",
                "referenceJsonPath": "$.graduationPlanReference.graduationPlanTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.graduationSchoolYearTypeReference.schoolYear",
                "referenceJsonPath": "$.graduationPlanReference.graduationSchoolYear",
                "type": "string"
              }
            ],
            "resourceName": "GraduationPlan"
          },
          "HighSchoolDuration": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.highSchoolDuration",
            "type": "number"
          },
          "HoursPerWeek": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.hoursPerWeek",
            "type": "number"
          },
          "IndustryCredential": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.industryCredentials[*].industryCredential",
            "type": "string"
          },
          "IsActivePlan": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.isActivePlan",
            "type": "boolean"
          },
          "RequiredAttendance": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.requiredAttendance",
            "type": "number"
          },
          "Staff": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.staffUniqueId",
                "referenceJsonPath": "$.staffReference.staffUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "Staff"
          },
          "Student": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.studentUniqueId",
                "referenceJsonPath": "$.studentReference.studentUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "Student"
          },
          "StudentContactAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.contactReference.contactUniqueId",
                "referenceJsonPath": "$.studentContactAssociations[*].studentContactAssociationReference.contactUniqueId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentUniqueId",
                "referenceJsonPath": "$.studentContactAssociations[*].studentContactAssociationReference.studentUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "StudentContactAssociation"
          },
          "TargetGPA": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.targetGPA",
            "type": "number"
          },
          "YearsAttended": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.yearsAttendeds[*].yearsAttended",
            "type": "number"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$.studentContactAssociations[*].studentContactAssociationReference.studentUniqueId",
            "targetJsonPath": "$.studentReference.studentUniqueId"
          }
        ],
        "identityJsonPaths": [
          "$.graduationPlanReference.educationOrganizationId",
          "$.graduationPlanReference.graduationPlanTypeDescriptor",
          "$.graduationPlanReference.graduationSchoolYear",
          "$.studentReference.studentUniqueId"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This is an example of a new Association.",
          "properties": {
            "academicSubjects": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "academicSubjectDescriptor": {
                    "description": "An Ed-Fi Descriptor",
                    "type": "string"
                  }
                },
                "required": [
                  "academicSubjectDescriptor"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "careerPathwayCodes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "careerPathwayCode": {
                    "description": "The code representing the student's intended career pathway after graduation.",
                    "type": "integer"
                  }
                },
                "required": [
                  "careerPathwayCode"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "commencementTime": {
              "description": "The time of day for the commencement ceremony.",
              "format": "time",
              "type": "string"
            },
            "cteProgramService": {
              "additionalProperties": false,
              "properties": {
                "cipCode": {
                  "description": "Number and description of the CIP code associated with the student's CTE program.",
                  "maxLength": 120,
                  "type": "string"
                },
                "cteProgramServiceDescriptor": {
                  "description": "Indicates the service being provided to the student by the CTE program.",
                  "type": "string"
                },
                "primaryIndicator": {
                  "description": "True if service is a primary service.",
                  "type": "boolean"
                },
                "serviceBeginDate": {
                  "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                  "format": "date",
                  "type": "string"
                },
                "serviceEndDate": {
                  "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                  "format": "date",
                  "type": "string"
                }
              },
              "required": [
                "cteProgramServiceDescriptor"
              ],
              "type": "object"
            },
            "descriptions": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "A description of the graduation plan.",
                    "maxLength": 1024,
                    "type": "string"
                  }
                },
                "required": [
                  "description"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "designatedBies": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "designatedBy": {
                    "description": "The entity governing this graduation plan.",
                    "maxLength": 60,
                    "type": "string"
                  }
                },
                "required": [
                  "designatedBy"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "effectiveDate": {
              "description": "The date the plan went into effect.",
              "format": "date",
              "type": "string"
            },
            "graduationFee": {
              "description": "Any fees the student must resolve prior to graduation, such as library fines and overdue lunch accounts.",
              "type": "number"
            },
            "graduationPlanReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "graduationPlanTypeDescriptor": {
                  "description": "The type of academic plan the student is following for graduation.",
                  "type": "string"
                },
                "graduationSchoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                }
              },
              "required": [
                "educationOrganizationId",
                "graduationPlanTypeDescriptor",
                "graduationSchoolYear"
              ],
              "type": "object"
            },
            "highSchoolDuration": {
              "description": "The number of years remaining prior to graduation as of when the plan became effective.",
              "type": "number"
            },
            "hoursPerWeek": {
              "description": "The number of hours per week the student will attend to graduate.",
              "type": "number"
            },
            "industryCredentials": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "industryCredential": {
                    "description": "Industry-recognized credentials the student will have earned at graduation.",
                    "maxLength": 100,
                    "type": "string"
                  }
                },
                "required": [
                  "industryCredential"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "isActivePlan": {
              "description": "An indication as to whether the plan is active.",
              "type": "boolean"
            },
            "requiredAttendance": {
              "description": "The percentage of time the student must attend to graduate, relative to a full-time student.",
              "type": "number"
            },
            "staffReference": {
              "additionalProperties": false,
              "properties": {
                "staffUniqueId": {
                  "description": "A unique alphanumeric code assigned to a staff.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "staffUniqueId"
              ],
              "type": "object"
            },
            "studentContactAssociations": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "studentContactAssociationReference": {
                    "additionalProperties": false,
                    "properties": {
                      "contactUniqueId": {
                        "description": "A unique alphanumeric code assigned to a contact.",
                        "maxLength": 32,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "studentUniqueId": {
                        "description": "A unique alphanumeric code assigned to a student.",
                        "maxLength": 32,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "contactUniqueId",
                      "studentUniqueId"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "studentContactAssociationReference"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "studentReference": {
              "additionalProperties": false,
              "properties": {
                "studentUniqueId": {
                  "description": "A unique alphanumeric code assigned to a student.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "studentUniqueId"
              ],
              "type": "object"
            },
            "targetGPA": {
              "description": "The GPA the student is working toward.",
              "type": "number"
            },
            "yearsAttendeds": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "yearsAttended": {
                    "description": "The number of years the student will have attended high school by the time of graduation.",
                    "type": "integer"
                  }
                },
                "required": [
                  "yearsAttended"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "studentReference",
            "graduationPlanReference",
            "effectiveDate",
            "yearsAttendeds",
            "targetGPA",
            "hoursPerWeek",
            "designatedBies",
            "academicSubjects"
          ],
          "title": "Sample.StudentGraduationPlanAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.careerPathwayCodes[*].careerPathwayCode",
          "$.graduationFee",
          "$.graduationPlanReference.educationOrganizationId",
          "$.graduationPlanReference.graduationSchoolYear",
          "$.highSchoolDuration",
          "$.hoursPerWeek",
          "$.requiredAttendance",
          "$.targetGPA",
          "$.yearsAttendeds[*].yearsAttended"
        ],
        "queryFieldMapping": {
          "cipCode": [
            {
              "path": "$.cteProgramService.cipCode",
              "type": "string"
            }
          ],
          "commencementTime": [
            {
              "path": "$.commencementTime",
              "type": "time"
            }
          ],
          "cteProgramServiceDescriptor": [
            {
              "path": "$.cteProgramService.cteProgramServiceDescriptor",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.graduationPlanReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "effectiveDate": [
            {
              "path": "$.effectiveDate",
              "type": "date"
            }
          ],
          "graduationFee": [
            {
              "path": "$.graduationFee",
              "type": "number"
            }
          ],
          "graduationPlanTypeDescriptor": [
            {
              "path": "$.graduationPlanReference.graduationPlanTypeDescriptor",
              "type": "string"
            }
          ],
          "graduationSchoolYear": [
            {
              "path": "$.graduationPlanReference.graduationSchoolYear",
              "type": "string"
            }
          ],
          "highSchoolDuration": [
            {
              "path": "$.highSchoolDuration",
              "type": "number"
            }
          ],
          "hoursPerWeek": [
            {
              "path": "$.hoursPerWeek",
              "type": "number"
            }
          ],
          "isActivePlan": [
            {
              "path": "$.isActivePlan",
              "type": "boolean"
            }
          ],
          "primaryIndicator": [
            {
              "path": "$.cteProgramService.primaryIndicator",
              "type": "boolean"
            }
          ],
          "requiredAttendance": [
            {
              "path": "$.requiredAttendance",
              "type": "number"
            }
          ],
          "serviceBeginDate": [
            {
              "path": "$.cteProgramService.serviceBeginDate",
              "type": "date"
            }
          ],
          "serviceEndDate": [
            {
              "path": "$.cteProgramService.serviceEndDate",
              "type": "date"
            }
          ],
          "staffUniqueId": [
            {
              "path": "$.staffReference.staffUniqueId",
              "type": "string"
            }
          ],
          "studentUniqueId": [
            {
              "path": "$.studentReference.studentUniqueId",
              "type": "string"
            }
          ],
          "targetGPA": [
            {
              "path": "$.targetGPA",
              "type": "number"
            }
          ]
        },
        "resourceName": "StudentGraduationPlanAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.graduationPlanReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
            "$.studentReference.studentUniqueId"
          ]
        }
      },
      "studentSchoolAssociations": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "MembershipTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.sample.membershipTypeDescriptor",
            "projectName": "Sample",
            "resourceName": "MembershipTypeDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "membershipTypeDescriptor": {
                      "description": "Membership Type identifies whether a school has primary responsibility for managing a specific student's curriculum or not.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.StudentSchoolAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "resourceName": "StudentSchoolAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "studentSectionAssociations": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "RelatedGeneralStudentProgramAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.beginDate",
                "referenceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.beginDate",
                "type": "date"
              },
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.programEducationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programReference.programName",
                "referenceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.programName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.programReference.programTypeDescriptor",
                "referenceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.programTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentUniqueId",
                "referenceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.studentUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "GeneralStudentProgramAssociation"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.studentUniqueId",
            "targetJsonPath": "$.studentReference.studentUniqueId"
          }
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "relatedGeneralStudentProgramAssociations": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "relatedGeneralStudentProgramAssociationReference": {
                            "additionalProperties": false,
                            "properties": {
                              "beginDate": {
                                "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                                "format": "date",
                                "type": "string"
                              },
                              "educationOrganizationId": {
                                "description": "The identifier assigned to an education organization.",
                                "type": "integer"
                              },
                              "programEducationOrganizationId": {
                                "description": "The identifier assigned to an education organization.",
                                "type": "integer"
                              },
                              "programName": {
                                "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
                                "maxLength": 60,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              },
                              "programTypeDescriptor": {
                                "description": "The type of program.",
                                "type": "string"
                              },
                              "studentUniqueId": {
                                "description": "A unique alphanumeric code assigned to a student.",
                                "maxLength": 32,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "beginDate",
                              "educationOrganizationId",
                              "programEducationOrganizationId",
                              "programName",
                              "programTypeDescriptor",
                              "studentUniqueId"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "relatedGeneralStudentProgramAssociationReference"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.StudentSectionAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.educationOrganizationId",
          "$._ext.sample.relatedGeneralStudentProgramAssociations[*].relatedGeneralStudentProgramAssociationReference.programEducationOrganizationId"
        ],
        "resourceName": "StudentSectionAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "students": {
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$._ext.sample.aquaticPets[*].mimimumTankVolume"
            ]
          },
          {
            "nestedConstraints": [
              {
                "basePath": "$._ext.sample.favoriteBooks[*]",
                "paths": [
                  "$.artMedia[*].artMediumDescriptor"
                ]
              }
            ],
            "paths": [
              "$._ext.sample.favoriteBooks[*].favoriteBookCategoryDescriptor"
            ]
          },
          {
            "paths": [
              "$._ext.sample.pets[*].petName"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.sample.pets[*].isFixed"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "AquaticPet.MimimumTankVolume": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.aquaticPets[*].mimimumTankVolume",
            "type": "number"
          },
          "FavoriteBook.BookTitle": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.favoriteBooks[*].bookTitle",
            "type": "string"
          },
          "FavoriteBook.FavoriteBookArtMedium.ArtMediumDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.favoriteBooks[*].artMedia[*].artMediumDescriptor",
            "projectName": "Sample",
            "resourceName": "ArtMediumDescriptor",
            "type": "string"
          },
          "FavoriteBook.FavoriteBookArtMedium.ArtPieces": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.favoriteBooks[*].artMedia[*].artPieces",
            "type": "number"
          },
          "FavoriteBook.FavoriteBookCategoryDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$._ext.sample.favoriteBooks[*].favoriteBookCategoryDescriptor",
            "projectName": "Sample",
            "resourceName": "FavoriteBookCategoryDescriptor",
            "type": "string"
          },
          "Pet.IsFixed": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.sample.pets[*].isFixed",
            "type": "boolean"
          },
          "Pet.PetName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.pets[*].petName",
            "type": "string"
          },
          "PetPreference.MaximumWeight": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.petPreference.maximumWeight",
            "type": "number"
          },
          "PetPreference.MinimumWeight": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$._ext.sample.petPreference.minimumWeight",
            "type": "number"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "sample": {
                  "additionalProperties": true,
                  "description": "sample extension properties collection",
                  "properties": {
                    "aquaticPets": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "mimimumTankVolume": {
                            "description": "The minimum tank volume this aquatic pet requires.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "mimimumTankVolume"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "favoriteBooks": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "artMedia": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "artMediumDescriptor": {
                                  "description": "This is documentation.",
                                  "type": "string"
                                },
                                "artPieces": {
                                  "description": "This is documentation.",
                                  "maximum": 100,
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "artMediumDescriptor"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array",
                            "uniqueItems": false
                          },
                          "bookTitle": {
                            "description": "This is documentation.",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                          },
                          "favoriteBookCategoryDescriptor": {
                            "description": "This is documentation.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "favoriteBookCategoryDescriptor"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    },
                    "petPreference": {
                      "additionalProperties": false,
                      "properties": {
                        "maximumWeight": {
                          "description": "The preferred maximum weight of a household pet.",
                          "type": "integer"
                        },
                        "minimumWeight": {
                          "description": "The preferred minimum weight of a household pet.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "minimumWeight",
                        "maximumWeight"
                      ],
                      "type": "object"
                    },
                    "pets": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "isFixed": {
                            "description": "An indication as to whether the pet has been spayed/neutered.",
                            "type": "boolean"
                          },
                          "petName": {
                            "description": "The pet's name.",
                            "maxLength": 20,
                            "minLength": 3,
                            "pattern": "^(?!\\s)(.*\\S)$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "petName"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "Sample.Student",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.sample.aquaticPets[*].mimimumTankVolume",
          "$._ext.sample.favoriteBooks[*].artMedia[*].artPieces",
          "$._ext.sample.petPreference.maximumWeight",
          "$._ext.sample.petPreference.minimumWeight"
        ],
        "resourceName": "Student",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      }
    }
  }
}