{
  "apiSchemaVersion": "1.0.0",
  "projectSchema": {
    "abstractResources": {
    },
    "caseInsensitiveEndpointNameMapping": {
      "contacts": "contacts",
      "names": "names",
      "schools": "schools",
      "schoolyeartypes": "schoolYearTypes",
      "staffs": "staffs",
      "students": "students",
      "studentschoolassociations": "studentSchoolAssociations"
    },
    "compatibleDsRange": "5.2.0",
    "description": "Homograph",
    "educationOrganizationHierarchy": {
      "CommunityOrganization": {
      },
      "CommunityProvider": {
        "CommunityOrganization": "$.communityOrganizationReference.communityOrganizationId"
      },
      "EducationOrganization": {
      },
      "EducationOrganizationNetwork": {
      },
      "EducationServiceCenter": {
        "StateEducationAgency": "$.stateEducationAgencyReference.stateEducationAgencyId"
      },
      "LocalEducationAgency": {
        "EducationServiceCenter": "$.educationServiceCenterReference.educationServiceCenterId",
        "LocalEducationAgency": "$.parentLocalEducationAgencyReference.localEducationAgencyId",
        "StateEducationAgency": "$.stateEducationAgencyReference.stateEducationAgencyId"
      },
      "OrganizationDepartment": {
        "EducationOrganization": "$.parentEducationOrganizationReference.educationOrganizationId"
      },
      "PostSecondaryInstitution": {
      },
      "School": {
        "LocalEducationAgency": "$.localEducationAgencyReference.localEducationAgencyId"
      },
      "StateEducationAgency": {
      }
    },
    "educationOrganizationTypes": [
      "CommunityOrganization",
      "CommunityProvider",
      "EducationOrganizationNetwork",
      "EducationServiceCenter",
      "LocalEducationAgency",
      "OrganizationDepartment",
      "PostSecondaryInstitution",
      "School",
      "StateEducationAgency",
      "EducationOrganization"
    ],
    "isExtensionProject": true,
    "openApiExtensionDescriptorFragments": {
      "exts": {
      },
      "newPaths": {
      },
      "newSchemas": {
      },
      "newTags": [
      ]
    },
    "openApiExtensionResourceFragments": {
      "exts": {
      },
      "newPaths": {
        "/homograph/contacts": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographContacts",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_Contact"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "contacts"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographContact",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Contact"
                  }
                }
              },
              "description": "The JSON representation of the Contact resource to be created or updated.",
              "required": true,
              "x-bodyName": "Contact"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "contacts"
            ]
          }
        },
        "/homograph/contacts/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographContactsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "contacts"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographContactsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_Contact"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "contacts"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographContact",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Contact"
                  }
                }
              },
              "description": "The JSON representation of the Contact resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "contacts"
            ]
          }
        },
        "/homograph/names": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographNames",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                "in": "query",
                "name": "firstName",
                "schema": {
                  "maxLength": 75,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The name borne in common by members of a family.",
                "in": "query",
                "name": "lastSurname",
                "schema": {
                  "maxLength": 75,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_Name"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "names"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographName",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Name"
                  }
                }
              },
              "description": "The JSON representation of the Name resource to be created or updated.",
              "required": true,
              "x-bodyName": "Name"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "names"
            ]
          }
        },
        "/homograph/names/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographNamesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "names"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographNamesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_Name"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "names"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographName",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Name"
                  }
                }
              },
              "description": "The JSON representation of the Name resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "names"
            ]
          }
        },
        "/homograph/schoolYearTypes": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographSchoolYearTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A school year.",
                "in": "query",
                "name": "schoolYear",
                "schema": {
                  "maxLength": 20,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_SchoolYearType"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "schoolYearTypes"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographSchoolYearType",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_SchoolYearType"
                  }
                }
              },
              "description": "The JSON representation of the SchoolYearType resource to be created or updated.",
              "required": true,
              "x-bodyName": "SchoolYearType"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "schoolYearTypes"
            ]
          }
        },
        "/homograph/schoolYearTypes/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographSchoolYearTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "schoolYearTypes"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographSchoolYearTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_SchoolYearType"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "schoolYearTypes"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographSchoolYearType",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_SchoolYearType"
                  }
                }
              },
              "description": "The JSON representation of the SchoolYearType resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "schoolYearTypes"
            ]
          }
        },
        "/homograph/schools": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographSchools",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The name of the school.",
                "in": "query",
                "name": "schoolName",
                "schema": {
                  "maxLength": 100,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The name of the city in which an address is located.",
                "in": "query",
                "name": "city",
                "schema": {
                  "maxLength": 30,
                  "minLength": 2,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_School"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "schools"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographSchool",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_School"
                  }
                }
              },
              "description": "The JSON representation of the School resource to be created or updated.",
              "required": true,
              "x-bodyName": "School"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "schools"
            ]
          }
        },
        "/homograph/schools/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographSchoolsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "schools"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographSchoolsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_School"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "schools"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographSchool",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_School"
                  }
                }
              },
              "description": "The JSON representation of the School resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "schools"
            ]
          }
        },
        "/homograph/staffs": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographStaffs",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_Staff"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "staffs"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographStaff",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Staff"
                  }
                }
              },
              "description": "The JSON representation of the Staff resource to be created or updated.",
              "required": true,
              "x-bodyName": "Staff"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "staffs"
            ]
          }
        },
        "/homograph/staffs/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographStaffsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "staffs"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographStaffsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_Staff"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "staffs"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographStaff",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Staff"
                  }
                }
              },
              "description": "The JSON representation of the Staff resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "staffs"
            ]
          }
        },
        "/homograph/studentSchoolAssociations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographStudentSchoolAssociations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_StudentSchoolAssociation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "studentSchoolAssociations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographStudentSchoolAssociation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_StudentSchoolAssociation"
                  }
                }
              },
              "description": "The JSON representation of the StudentSchoolAssociation resource to be created or updated.",
              "required": true,
              "x-bodyName": "StudentSchoolAssociation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "studentSchoolAssociations"
            ]
          }
        },
        "/homograph/studentSchoolAssociations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographStudentSchoolAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "studentSchoolAssociations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographStudentSchoolAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_StudentSchoolAssociation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "studentSchoolAssociations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographStudentSchoolAssociation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_StudentSchoolAssociation"
                  }
                }
              },
              "description": "The JSON representation of the StudentSchoolAssociation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "studentSchoolAssociations"
            ]
          }
        },
        "/homograph/students": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_HomographStudents",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The name of the city in which an address is located.",
                "in": "query",
                "name": "city",
                "schema": {
                  "maxLength": 30,
                  "minLength": 2,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/Homograph_Student"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "students"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_HomographStudent",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Student"
                  }
                }
              },
              "description": "The JSON representation of the Student resource to be created or updated.",
              "required": true,
              "x-bodyName": "Student"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "students"
            ]
          }
        },
        "/homograph/students/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_HomographStudentsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "students"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_HomographStudentsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Homograph_Student"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "students"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_HomographStudent",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Homograph_Student"
                  }
                }
              },
              "description": "The JSON representation of the Student resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "students"
            ]
          }
        }
      },
      "newSchemas": {
        "Homograph_Contact": {
          "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
          "properties": {
            "addresses": {
              "items": {
                "$ref": "#/components/schemas/Homograph_Contact_Address"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            },
            "contactNameReference": {
              "$ref": "#/components/schemas/Homograph_Name_Reference"
            },
            "studentSchoolAssociations": {
              "items": {
                "$ref": "#/components/schemas/Homograph_Contact_StudentSchoolAssociation"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "contactNameReference",
            "studentSchoolAssociations",
            "addresses"
          ],
          "type": "object"
        },
        "Homograph_Contact_Address": {
          "properties": {
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            }
          },
          "required": [
            "city"
          ],
          "type": "object"
        },
        "Homograph_Contact_Reference": {
          "properties": {
            "contactFirstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            },
            "contactLastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "contactFirstName",
            "contactLastSurname"
          ],
          "type": "object"
        },
        "Homograph_Contact_StudentSchoolAssociation": {
          "properties": {
            "studentSchoolAssociationReference": {
              "$ref": "#/components/schemas/Homograph_StudentSchoolAssociation_Reference"
            }
          },
          "required": [
            "studentSchoolAssociationReference"
          ],
          "type": "object"
        },
        "Homograph_Name": {
          "description": "The set of elements that comprise a person's legal name.",
          "properties": {
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastSurname"
          ],
          "type": "object"
        },
        "Homograph_Name_Reference": {
          "properties": {
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastSurname"
          ],
          "type": "object"
        },
        "Homograph_School": {
          "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/Homograph_School_Address"
            },
            "schoolName": {
              "description": "The name of the school.",
              "maxLength": 100,
              "type": "string"
            },
            "schoolYearTypeReference": {
              "$ref": "#/components/schemas/Homograph_SchoolYearType_Reference"
            }
          },
          "required": [
            "schoolName"
          ],
          "type": "object"
        },
        "Homograph_SchoolYearType": {
          "description": "Identifier for a school year.",
          "properties": {
            "schoolYear": {
              "description": "A school year.",
              "maxLength": 20,
              "type": "string"
            }
          },
          "required": [
            "schoolYear"
          ],
          "type": "object"
        },
        "Homograph_SchoolYearType_Reference": {
          "properties": {
            "schoolYear": {
              "description": "A school year.",
              "maxLength": 20,
              "type": "string"
            }
          },
          "required": [
            "schoolYear"
          ],
          "type": "object"
        },
        "Homograph_School_Address": {
          "properties": {
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            }
          },
          "required": [
            "city"
          ],
          "type": "object"
        },
        "Homograph_School_Reference": {
          "properties": {
            "schoolName": {
              "description": "The name of the school.",
              "maxLength": 100,
              "type": "string"
            }
          },
          "required": [
            "schoolName"
          ],
          "type": "object"
        },
        "Homograph_Staff": {
          "description": "same name as a core domain entity",
          "properties": {
            "addresses": {
              "items": {
                "$ref": "#/components/schemas/Homograph_Staff_Address"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "staffNameReference": {
              "$ref": "#/components/schemas/Homograph_Name_Reference"
            },
            "studentSchoolAssociations": {
              "items": {
                "$ref": "#/components/schemas/Homograph_Staff_StudentSchoolAssociation"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "staffNameReference"
          ],
          "type": "object"
        },
        "Homograph_Staff_Address": {
          "properties": {
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            }
          },
          "required": [
            "city"
          ],
          "type": "object"
        },
        "Homograph_Staff_Reference": {
          "properties": {
            "staffFirstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            },
            "staffLastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "staffFirstName",
            "staffLastSurname"
          ],
          "type": "object"
        },
        "Homograph_Staff_StudentSchoolAssociation": {
          "properties": {
            "studentSchoolAssociationReference": {
              "$ref": "#/components/schemas/Homograph_StudentSchoolAssociation_Reference"
            }
          },
          "required": [
            "studentSchoolAssociationReference"
          ],
          "type": "object"
        },
        "Homograph_Student": {
          "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/Homograph_Student_Address"
            },
            "schoolYearTypeReference": {
              "$ref": "#/components/schemas/Homograph_SchoolYearType_Reference"
            },
            "studentNameReference": {
              "$ref": "#/components/schemas/Homograph_Name_Reference"
            }
          },
          "required": [
            "studentNameReference",
            "schoolYearTypeReference",
            "address"
          ],
          "type": "object"
        },
        "Homograph_StudentSchoolAssociation": {
          "description": "This association represents the School in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.",
          "properties": {
            "schoolReference": {
              "$ref": "#/components/schemas/Homograph_School_Reference"
            },
            "studentReference": {
              "$ref": "#/components/schemas/Homograph_Student_Reference"
            }
          },
          "required": [
            "studentReference",
            "schoolReference"
          ],
          "type": "object"
        },
        "Homograph_StudentSchoolAssociation_Reference": {
          "properties": {
            "schoolName": {
              "description": "The name of the school.",
              "maxLength": 100,
              "type": "string"
            },
            "studentFirstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            },
            "studentLastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "schoolName",
            "studentFirstName",
            "studentLastSurname"
          ],
          "type": "object"
        },
        "Homograph_Student_Address": {
          "properties": {
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            }
          },
          "required": [
            "city"
          ],
          "type": "object"
        },
        "Homograph_Student_Reference": {
          "properties": {
            "studentFirstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            },
            "studentLastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "studentFirstName",
            "studentLastSurname"
          ],
          "type": "object"
        }
      },
      "newTags": [
        {
          "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
          "name": "contacts"
        },
        {
          "description": "The set of elements that comprise a person's legal name.",
          "name": "names"
        },
        {
          "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
          "name": "schools"
        },
        {
          "description": "Identifier for a school year.",
          "name": "schoolYearTypes"
        },
        {
          "description": "same name as a core domain entity",
          "name": "staffs"
        },
        {
          "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
          "name": "students"
        },
        {
          "description": "This association represents the School in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.",
          "name": "studentSchoolAssociations"
        }
      ]
    },
    "projectEndpointName": "homograph",
    "projectName": "Homograph",
    "projectVersion": "1.0.0",
    "resourceNameMapping": {
      "Contact": "contacts",
      "Name": "names",
      "School": "schools",
      "SchoolYearType": "schoolYearTypes",
      "Staff": "staffs",
      "Student": "students",
      "StudentSchoolAssociation": "studentSchoolAssociations"
    },
    "resourceSchemas": {
      "contacts": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.addresses[*].city"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.addresses[*].city",
            "type": "string"
          },
          "ContactName": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.firstName",
                "referenceJsonPath": "$.contactNameReference.firstName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.lastSurname",
                "referenceJsonPath": "$.contactNameReference.lastSurname",
                "type": "string"
              }
            ],
            "resourceName": "Name"
          },
          "StudentSchoolAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolReference.schoolName",
                "referenceJsonPath": "$.studentSchoolAssociations[*].studentSchoolAssociationReference.schoolName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentFirstName",
                "referenceJsonPath": "$.studentSchoolAssociations[*].studentSchoolAssociationReference.studentFirstName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentLastSurname",
                "referenceJsonPath": "$.studentSchoolAssociations[*].studentSchoolAssociationReference.studentLastSurname",
                "type": "string"
              }
            ],
            "resourceName": "StudentSchoolAssociation"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.contactNameReference.firstName",
          "$.contactNameReference.lastSurname"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
          "properties": {
            "addresses": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "city": {
                    "description": "The name of the city in which an address is located.",
                    "maxLength": 30,
                    "minLength": 2,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  }
                },
                "required": [
                  "city"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "contactNameReference": {
              "additionalProperties": false,
              "properties": {
                "firstName": {
                  "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "lastSurname": {
                  "description": "The name borne in common by members of a family.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastSurname"
              ],
              "type": "object"
            },
            "studentSchoolAssociations": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "studentSchoolAssociationReference": {
                    "additionalProperties": false,
                    "properties": {
                      "schoolName": {
                        "description": "The name of the school.",
                        "maxLength": 100,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "studentFirstName": {
                        "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                        "maxLength": 75,
                        "minLength": 1,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "studentLastSurname": {
                        "description": "The name borne in common by members of a family.",
                        "maxLength": 75,
                        "minLength": 1,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "schoolName",
                      "studentFirstName",
                      "studentLastSurname"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "studentSchoolAssociationReference"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "contactNameReference",
            "studentSchoolAssociations",
            "addresses"
          ],
          "title": "Homograph.Contact",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "firstName": [
            {
              "path": "$.contactNameReference.firstName",
              "type": "string"
            }
          ],
          "lastSurname": [
            {
              "path": "$.contactNameReference.lastSurname",
              "type": "string"
            }
          ]
        },
        "resourceName": "Contact",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "names": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "FirstName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.firstName",
            "type": "string"
          },
          "LastSurname": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.lastSurname",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.firstName",
          "$.lastSurname"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The set of elements that comprise a person's legal name.",
          "properties": {
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastSurname"
          ],
          "title": "Homograph.Name",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "firstName": [
            {
              "path": "$.firstName",
              "type": "string"
            }
          ],
          "lastSurname": [
            {
              "path": "$.lastSurname",
              "type": "string"
            }
          ]
        },
        "resourceName": "Name",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "schoolYearTypes": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "SchoolYear": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.schoolYear",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.schoolYear"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "Identifier for a school year.",
          "properties": {
            "schoolYear": {
              "description": "A school year.",
              "maxLength": 20,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            }
          },
          "required": [
            "schoolYear"
          ],
          "title": "Homograph.SchoolYearType",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "schoolYear": [
            {
              "path": "$.schoolYear",
              "type": "string"
            }
          ]
        },
        "resourceName": "SchoolYearType",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "schools": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.address.city",
            "type": "string"
          },
          "SchoolName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.schoolName",
            "type": "string"
          },
          "SchoolYearType": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolYear",
                "referenceJsonPath": "$.schoolYearTypeReference.schoolYear",
                "type": "string"
              }
            ],
            "resourceName": "SchoolYearType"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.schoolName"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
          "properties": {
            "address": {
              "additionalProperties": false,
              "properties": {
                "city": {
                  "description": "The name of the city in which an address is located.",
                  "maxLength": 30,
                  "minLength": 2,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "city"
              ],
              "type": "object"
            },
            "schoolName": {
              "description": "The name of the school.",
              "maxLength": 100,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "schoolYearTypeReference": {
              "additionalProperties": false,
              "properties": {
                "schoolYear": {
                  "description": "A school year.",
                  "maxLength": 20,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "schoolYear"
              ],
              "type": "object"
            }
          },
          "required": [
            "schoolName"
          ],
          "title": "Homograph.School",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "city": [
            {
              "path": "$.address.city",
              "type": "string"
            }
          ],
          "schoolName": [
            {
              "path": "$.schoolName",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.schoolYearTypeReference.schoolYear",
              "type": "string"
            }
          ]
        },
        "resourceName": "School",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "staffs": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.addresses[*].city"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.addresses[*].city",
            "type": "string"
          },
          "StaffName": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.firstName",
                "referenceJsonPath": "$.staffNameReference.firstName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.lastSurname",
                "referenceJsonPath": "$.staffNameReference.lastSurname",
                "type": "string"
              }
            ],
            "resourceName": "Name"
          },
          "StudentSchoolAssociation": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolReference.schoolName",
                "referenceJsonPath": "$.studentSchoolAssociations[*].studentSchoolAssociationReference.schoolName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentFirstName",
                "referenceJsonPath": "$.studentSchoolAssociations[*].studentSchoolAssociationReference.studentFirstName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentLastSurname",
                "referenceJsonPath": "$.studentSchoolAssociations[*].studentSchoolAssociationReference.studentLastSurname",
                "type": "string"
              }
            ],
            "resourceName": "StudentSchoolAssociation"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.staffNameReference.firstName",
          "$.staffNameReference.lastSurname"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "same name as a core domain entity",
          "properties": {
            "addresses": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "city": {
                    "description": "The name of the city in which an address is located.",
                    "maxLength": 30,
                    "minLength": 2,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  }
                },
                "required": [
                  "city"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "staffNameReference": {
              "additionalProperties": false,
              "properties": {
                "firstName": {
                  "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "lastSurname": {
                  "description": "The name borne in common by members of a family.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastSurname"
              ],
              "type": "object"
            },
            "studentSchoolAssociations": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "studentSchoolAssociationReference": {
                    "additionalProperties": false,
                    "properties": {
                      "schoolName": {
                        "description": "The name of the school.",
                        "maxLength": 100,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "studentFirstName": {
                        "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                        "maxLength": 75,
                        "minLength": 1,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "studentLastSurname": {
                        "description": "The name borne in common by members of a family.",
                        "maxLength": 75,
                        "minLength": 1,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "schoolName",
                      "studentFirstName",
                      "studentLastSurname"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "studentSchoolAssociationReference"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "staffNameReference"
          ],
          "title": "Homograph.Staff",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "firstName": [
            {
              "path": "$.staffNameReference.firstName",
              "type": "string"
            }
          ],
          "lastSurname": [
            {
              "path": "$.staffNameReference.lastSurname",
              "type": "string"
            }
          ]
        },
        "resourceName": "Staff",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "studentSchoolAssociations": {
        "allowIdentityUpdates": true,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "School": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolName",
                "referenceJsonPath": "$.schoolReference.schoolName",
                "type": "string"
              }
            ],
            "resourceName": "School"
          },
          "Student": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.studentNameReference.firstName",
                "referenceJsonPath": "$.studentReference.studentFirstName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentNameReference.lastSurname",
                "referenceJsonPath": "$.studentReference.studentLastSurname",
                "type": "string"
              }
            ],
            "resourceName": "Student"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.schoolReference.schoolName",
          "$.studentReference.studentFirstName",
          "$.studentReference.studentLastSurname"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This association represents the School in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.",
          "properties": {
            "schoolReference": {
              "additionalProperties": false,
              "properties": {
                "schoolName": {
                  "description": "The name of the school.",
                  "maxLength": 100,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "schoolName"
              ],
              "type": "object"
            },
            "studentReference": {
              "additionalProperties": false,
              "properties": {
                "studentFirstName": {
                  "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "studentLastSurname": {
                  "description": "The name borne in common by members of a family.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "studentFirstName",
                "studentLastSurname"
              ],
              "type": "object"
            }
          },
          "required": [
            "studentReference",
            "schoolReference"
          ],
          "title": "Homograph.StudentSchoolAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "schoolName": [
            {
              "path": "$.schoolReference.schoolName",
              "type": "string"
            }
          ],
          "studentFirstName": [
            {
              "path": "$.studentReference.studentFirstName",
              "type": "string"
            }
          ],
          "studentLastSurname": [
            {
              "path": "$.studentReference.studentLastSurname",
              "type": "string"
            }
          ]
        },
        "resourceName": "StudentSchoolAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "students": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.address.city",
            "type": "string"
          },
          "SchoolYearType": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": true,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolYear",
                "referenceJsonPath": "$.schoolYearTypeReference.schoolYear",
                "type": "string"
              }
            ],
            "resourceName": "SchoolYearType"
          },
          "StudentName": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Homograph",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.firstName",
                "referenceJsonPath": "$.studentNameReference.firstName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.lastSurname",
                "referenceJsonPath": "$.studentNameReference.lastSurname",
                "type": "string"
              }
            ],
            "resourceName": "Name"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.studentNameReference.firstName",
          "$.studentNameReference.lastSurname"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
          "properties": {
            "address": {
              "additionalProperties": false,
              "properties": {
                "city": {
                  "description": "The name of the city in which an address is located.",
                  "maxLength": 30,
                  "minLength": 2,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "city"
              ],
              "type": "object"
            },
            "schoolYearTypeReference": {
              "additionalProperties": false,
              "properties": {
                "schoolYear": {
                  "description": "A school year.",
                  "maxLength": 20,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "schoolYear"
              ],
              "type": "object"
            },
            "studentNameReference": {
              "additionalProperties": false,
              "properties": {
                "firstName": {
                  "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "lastSurname": {
                  "description": "The name borne in common by members of a family.",
                  "maxLength": 75,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastSurname"
              ],
              "type": "object"
            }
          },
          "required": [
            "studentNameReference",
            "schoolYearTypeReference",
            "address"
          ],
          "title": "Homograph.Student",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "city": [
            {
              "path": "$.address.city",
              "type": "string"
            }
          ],
          "firstName": [
            {
              "path": "$.studentNameReference.firstName",
              "type": "string"
            }
          ],
          "lastSurname": [
            {
              "path": "$.studentNameReference.lastSurname",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.schoolYearTypeReference.schoolYear",
              "type": "string"
            }
          ]
        },
        "resourceName": "Student",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      }
    }
  }
}