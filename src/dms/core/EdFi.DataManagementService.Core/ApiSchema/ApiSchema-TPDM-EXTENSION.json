{
  "apiSchemaVersion": "1.0.0",
  "projectSchema": {
    "abstractResources": {
    },
    "caseInsensitiveEndpointNameMapping": {
      "accreditationstatusdescriptors": "accreditationStatusDescriptors",
      "aidtypedescriptors": "aidTypeDescriptors",
      "candidateeducatorpreparationprogramassociations": "candidateEducatorPreparationProgramAssociations",
      "candidates": "candidates",
      "certificationroutedescriptors": "certificationRouteDescriptors",
      "coteachingstyleobserveddescriptors": "coteachingStyleObservedDescriptors",
      "credentialstatusdescriptors": "credentialStatusDescriptors",
      "educatorpreparationprograms": "educatorPreparationPrograms",
      "educatorroledescriptors": "educatorRoleDescriptors",
      "englishlanguageexamdescriptors": "englishLanguageExamDescriptors",
      "eppprogrampathwaydescriptors": "eppProgramPathwayDescriptors",
      "evaluationelementratingleveldescriptors": "evaluationElementRatingLevelDescriptors",
      "evaluationelementratings": "evaluationElementRatings",
      "evaluationelements": "evaluationElements",
      "evaluationobjectiveratings": "evaluationObjectiveRatings",
      "evaluationobjectives": "evaluationObjectives",
      "evaluationperioddescriptors": "evaluationPeriodDescriptors",
      "evaluationratingleveldescriptors": "evaluationRatingLevelDescriptors",
      "evaluationratings": "evaluationRatings",
      "evaluationratingstatusdescriptors": "evaluationRatingStatusDescriptors",
      "evaluations": "evaluations",
      "evaluationtypedescriptors": "evaluationTypeDescriptors",
      "financialaids": "financialAids",
      "genderdescriptors": "genderDescriptors",
      "objectiveratingleveldescriptors": "objectiveRatingLevelDescriptors",
      "performanceevaluationratingleveldescriptors": "performanceEvaluationRatingLevelDescriptors",
      "performanceevaluationratings": "performanceEvaluationRatings",
      "performanceevaluations": "performanceEvaluations",
      "performanceevaluationtypedescriptors": "performanceEvaluationTypeDescriptors",
      "rubricdimensions": "rubricDimensions",
      "rubricratingleveldescriptors": "rubricRatingLevelDescriptors",
      "surveyresponsepersontargetassociations": "surveyResponsePersonTargetAssociations",
      "surveysectionresponsepersontargetassociations": "surveySectionResponsePersonTargetAssociations"
    },
    "compatibleDsRange": "5.2.0",
    "description": "TPDM-Core",
    "educationOrganizationHierarchy": {
      "CommunityOrganization": {
      },
      "CommunityProvider": {
        "CommunityOrganization": "$.communityOrganizationReference.communityOrganizationId"
      },
      "EducationOrganization": {
      },
      "EducationOrganizationNetwork": {
      },
      "EducationServiceCenter": {
        "StateEducationAgency": "$.stateEducationAgencyReference.stateEducationAgencyId"
      },
      "LocalEducationAgency": {
        "EducationServiceCenter": "$.educationServiceCenterReference.educationServiceCenterId",
        "LocalEducationAgency": "$.parentLocalEducationAgencyReference.localEducationAgencyId",
        "StateEducationAgency": "$.stateEducationAgencyReference.stateEducationAgencyId"
      },
      "OrganizationDepartment": {
        "EducationOrganization": "$.parentEducationOrganizationReference.educationOrganizationId"
      },
      "PostSecondaryInstitution": {
      },
      "School": {
        "LocalEducationAgency": "$.localEducationAgencyReference.localEducationAgencyId"
      },
      "StateEducationAgency": {
      }
    },
    "educationOrganizationTypes": [
      "CommunityOrganization",
      "CommunityProvider",
      "EducationOrganizationNetwork",
      "EducationServiceCenter",
      "LocalEducationAgency",
      "OrganizationDepartment",
      "PostSecondaryInstitution",
      "School",
      "StateEducationAgency",
      "EducationOrganization"
    ],
    "isExtensionProject": true,
    "openApiExtensionDescriptorFragments": {
      "exts": {
      },
      "newPaths": {
        "/tpdm/accreditationStatusDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMAccreditationStatuses",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "accreditationStatusDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMAccreditationStatus",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the AccreditationStatus resource to be created or updated.",
              "required": true,
              "x-bodyName": "AccreditationStatus"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "accreditationStatusDescriptors"
            ]
          }
        },
        "/tpdm/accreditationStatusDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMAccreditationStatusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "accreditationStatusDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMAccreditationStatusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "accreditationStatusDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMAccreditationStatus",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the AccreditationStatus resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "accreditationStatusDescriptors"
            ]
          }
        },
        "/tpdm/aidTypeDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMAidTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "aidTypeDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMAidType",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the AidType resource to be created or updated.",
              "required": true,
              "x-bodyName": "AidType"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "aidTypeDescriptors"
            ]
          }
        },
        "/tpdm/aidTypeDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMAidTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "aidTypeDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMAidTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "aidTypeDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMAidType",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the AidType resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "aidTypeDescriptors"
            ]
          }
        },
        "/tpdm/certificationRouteDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMCertificationRoutes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "certificationRouteDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMCertificationRoute",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the CertificationRoute resource to be created or updated.",
              "required": true,
              "x-bodyName": "CertificationRoute"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "certificationRouteDescriptors"
            ]
          }
        },
        "/tpdm/certificationRouteDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMCertificationRoutesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "certificationRouteDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMCertificationRoutesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "certificationRouteDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMCertificationRoute",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the CertificationRoute resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "certificationRouteDescriptors"
            ]
          }
        },
        "/tpdm/coteachingStyleObservedDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMCoteachingStyleObserveds",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "coteachingStyleObservedDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMCoteachingStyleObserved",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the CoteachingStyleObserved resource to be created or updated.",
              "required": true,
              "x-bodyName": "CoteachingStyleObserved"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "coteachingStyleObservedDescriptors"
            ]
          }
        },
        "/tpdm/coteachingStyleObservedDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMCoteachingStyleObservedsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "coteachingStyleObservedDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMCoteachingStyleObservedsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "coteachingStyleObservedDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMCoteachingStyleObserved",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the CoteachingStyleObserved resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "coteachingStyleObservedDescriptors"
            ]
          }
        },
        "/tpdm/credentialStatusDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMCredentialStatuses",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "credentialStatusDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMCredentialStatus",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the CredentialStatus resource to be created or updated.",
              "required": true,
              "x-bodyName": "CredentialStatus"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "credentialStatusDescriptors"
            ]
          }
        },
        "/tpdm/credentialStatusDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMCredentialStatusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "credentialStatusDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMCredentialStatusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "credentialStatusDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMCredentialStatus",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the CredentialStatus resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "credentialStatusDescriptors"
            ]
          }
        },
        "/tpdm/educatorRoleDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEducatorRoles",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "educatorRoleDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEducatorRole",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EducatorRole resource to be created or updated.",
              "required": true,
              "x-bodyName": "EducatorRole"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "educatorRoleDescriptors"
            ]
          }
        },
        "/tpdm/educatorRoleDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEducatorRolesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "educatorRoleDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEducatorRolesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "educatorRoleDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEducatorRole",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EducatorRole resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "educatorRoleDescriptors"
            ]
          }
        },
        "/tpdm/englishLanguageExamDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEnglishLanguageExams",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "englishLanguageExamDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEnglishLanguageExam",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EnglishLanguageExam resource to be created or updated.",
              "required": true,
              "x-bodyName": "EnglishLanguageExam"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "englishLanguageExamDescriptors"
            ]
          }
        },
        "/tpdm/englishLanguageExamDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEnglishLanguageExamsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "englishLanguageExamDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEnglishLanguageExamsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "englishLanguageExamDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEnglishLanguageExam",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EnglishLanguageExam resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "englishLanguageExamDescriptors"
            ]
          }
        },
        "/tpdm/eppProgramPathwayDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEPPProgramPathways",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "eppProgramPathwayDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEPPProgramPathway",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EPPProgramPathway resource to be created or updated.",
              "required": true,
              "x-bodyName": "EPPProgramPathway"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "eppProgramPathwayDescriptors"
            ]
          }
        },
        "/tpdm/eppProgramPathwayDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEPPProgramPathwaysById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "eppProgramPathwayDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEPPProgramPathwaysById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "eppProgramPathwayDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEPPProgramPathway",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EPPProgramPathway resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "eppProgramPathwayDescriptors"
            ]
          }
        },
        "/tpdm/evaluationElementRatingLevelDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationElementRatingLevels",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationElementRatingLevelDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationElementRatingLevel",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationElementRatingLevel resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationElementRatingLevel"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationElementRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/evaluationElementRatingLevelDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationElementRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationElementRatingLevelDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationElementRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationElementRatingLevelDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationElementRatingLevel",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationElementRatingLevel resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationElementRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/evaluationPeriodDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationPeriods",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationPeriodDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationPeriod",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationPeriod resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationPeriod"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationPeriodDescriptors"
            ]
          }
        },
        "/tpdm/evaluationPeriodDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationPeriodsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationPeriodDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationPeriodsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationPeriodDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationPeriod",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationPeriod resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationPeriodDescriptors"
            ]
          }
        },
        "/tpdm/evaluationRatingLevelDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationRatingLevels",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationRatingLevelDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationRatingLevel",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationRatingLevel resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationRatingLevel"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/evaluationRatingLevelDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationRatingLevelDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationRatingLevelDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationRatingLevel",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationRatingLevel resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/evaluationRatingStatusDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationRatingStatuses",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationRatingStatusDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationRatingStatus",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationRatingStatus resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationRatingStatus"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationRatingStatusDescriptors"
            ]
          }
        },
        "/tpdm/evaluationRatingStatusDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationRatingStatusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationRatingStatusDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationRatingStatusesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationRatingStatusDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationRatingStatus",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationRatingStatus resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationRatingStatusDescriptors"
            ]
          }
        },
        "/tpdm/evaluationTypeDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationTypeDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationType",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationType resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationType"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationTypeDescriptors"
            ]
          }
        },
        "/tpdm/evaluationTypeDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationTypeDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationTypeDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationType",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationType resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationTypeDescriptors"
            ]
          }
        },
        "/tpdm/genderDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMGenders",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_GenderDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "genderDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMGender",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_GenderDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the Gender resource to be created or updated.",
              "required": true,
              "x-bodyName": "Gender"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "genderDescriptors"
            ]
          }
        },
        "/tpdm/genderDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMGendersById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "genderDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMGendersById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_GenderDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "genderDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMGender",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_GenderDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the Gender resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "genderDescriptors"
            ]
          }
        },
        "/tpdm/objectiveRatingLevelDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMObjectiveRatingLevels",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "objectiveRatingLevelDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMObjectiveRatingLevel",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the ObjectiveRatingLevel resource to be created or updated.",
              "required": true,
              "x-bodyName": "ObjectiveRatingLevel"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "objectiveRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/objectiveRatingLevelDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMObjectiveRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "objectiveRatingLevelDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMObjectiveRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "objectiveRatingLevelDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMObjectiveRatingLevel",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the ObjectiveRatingLevel resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "objectiveRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/performanceEvaluationRatingLevelDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMPerformanceEvaluationRatingLevels",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "performanceEvaluationRatingLevelDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMPerformanceEvaluationRatingLevel",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluationRatingLevel resource to be created or updated.",
              "required": true,
              "x-bodyName": "PerformanceEvaluationRatingLevel"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "performanceEvaluationRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/performanceEvaluationRatingLevelDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMPerformanceEvaluationRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "performanceEvaluationRatingLevelDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMPerformanceEvaluationRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "performanceEvaluationRatingLevelDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMPerformanceEvaluationRatingLevel",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluationRatingLevel resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "performanceEvaluationRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/performanceEvaluationTypeDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMPerformanceEvaluationTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "performanceEvaluationTypeDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMPerformanceEvaluationType",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluationType resource to be created or updated.",
              "required": true,
              "x-bodyName": "PerformanceEvaluationType"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "performanceEvaluationTypeDescriptors"
            ]
          }
        },
        "/tpdm/performanceEvaluationTypeDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMPerformanceEvaluationTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "performanceEvaluationTypeDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMPerformanceEvaluationTypesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "performanceEvaluationTypeDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMPerformanceEvaluationType",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluationType resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "performanceEvaluationTypeDescriptors"
            ]
          }
        },
        "/tpdm/rubricRatingLevelDescriptors": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMRubricRatingLevels",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A code or abbreviation that is used to refer to the descriptor.",
                "in": "query",
                "name": "codeValue",
                "schema": {
                  "maxLength": 50,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the descriptor.",
                "in": "query",
                "name": "description",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
                "in": "query",
                "name": "effectiveBeginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The end date of the period when the descriptor is in effect.",
                "in": "query",
                "name": "effectiveEndDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
                "in": "query",
                "name": "namespace",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A shortened description for the descriptor.",
                "in": "query",
                "name": "shortDescription",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "rubricRatingLevelDescriptors"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMRubricRatingLevel",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the RubricRatingLevel resource to be created or updated.",
              "required": true,
              "x-bodyName": "RubricRatingLevel"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "rubricRatingLevelDescriptors"
            ]
          }
        },
        "/tpdm/rubricRatingLevelDescriptors/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMRubricRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "rubricRatingLevelDescriptors"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMRubricRatingLevelsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "rubricRatingLevelDescriptors"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMRubricRatingLevel",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
                  }
                }
              },
              "description": "The JSON representation of the RubricRatingLevel resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "rubricRatingLevelDescriptors"
            ]
          }
        }
      },
      "newSchemas": {
        "TPDM_AccreditationStatusDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_AidTypeDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_CertificationRouteDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_CoteachingStyleObservedDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_CredentialStatusDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EPPProgramPathwayDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EducatorRoleDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EnglishLanguageExamDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElementRatingLevelDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EvaluationPeriodDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EvaluationRatingLevelDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EvaluationRatingStatusDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_EvaluationTypeDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_GenderDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_ObjectiveRatingLevelDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluationRatingLevelDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluationTypeDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        },
        "TPDM_RubricRatingLevelDescriptor": {
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "type": "object"
        }
      },
      "newTags": [
        {
          "description": "Accreditation Status for a Teacher Preparation Provider.",
          "name": "accreditationStatusDescriptors"
        },
        {
          "description": "This descriptor defines the classification of financial aid awarded to a person for the academic term/year.",
          "name": "aidTypeDescriptors"
        },
        {
          "description": "The process, program, or pathway used to obtain a certification.",
          "name": "certificationRouteDescriptors"
        },
        {
          "description": "A type of co-teaching observed as part of the performance evaluation.",
          "name": "coteachingStyleObservedDescriptors"
        },
        {
          "description": "The current status of the credential.",
          "name": "credentialStatusDescriptors"
        },
        {
          "description": "The role authorized by the Credential or Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.",
          "name": "educatorRoleDescriptors"
        },
        {
          "description": "Indicates that a person passed, failed, or did not take an English Language assessment.",
          "name": "englishLanguageExamDescriptors"
        },
        {
          "description": "The description of the program pathway, for example: Residency, Internship, Traditional",
          "name": "eppProgramPathwayDescriptors"
        },
        {
          "description": "Rating levels for Evaluation Elements.",
          "name": "evaluationElementRatingLevelDescriptors"
        },
        {
          "description": "The period for the evaluation.",
          "name": "evaluationPeriodDescriptors"
        },
        {
          "description": "Rating levels for Evaluations.",
          "name": "evaluationRatingLevelDescriptors"
        },
        {
          "description": "Represents the status of a Evaluation Rating.",
          "name": "evaluationRatingStatusDescriptors"
        },
        {
          "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
          "name": "evaluationTypeDescriptors"
        },
        {
          "description": "A person's gender.",
          "name": "genderDescriptors"
        },
        {
          "description": "Rating levels for Evaluation Objectives.",
          "name": "objectiveRatingLevelDescriptors"
        },
        {
          "description": "Rating levels for Performance Evaluations.",
          "name": "performanceEvaluationRatingLevelDescriptors"
        },
        {
          "description": "The type of performance evaluation conducted (e.g., walkthrough, summative).",
          "name": "performanceEvaluationTypeDescriptors"
        },
        {
          "description": "Rating levels for Rubric Dimensions.",
          "name": "rubricRatingLevelDescriptors"
        }
      ]
    },
    "openApiExtensionResourceFragments": {
      "exts": {
        "EdFi_Credential": {
          "description": "",
          "properties": {
            "boardCertificationIndicator": {
              "description": "Indicator that the credential was granted under the authority of a national Board Certification.",
              "type": "boolean"
            },
            "certificationRouteDescriptor": {
              "description": "The process, program, or pathway used to obtain certification.",
              "type": "string"
            },
            "certificationTitle": {
              "description": "The title of the certification obtained by the educator.",
              "maxLength": 64,
              "minLength": 1,
              "type": "string"
            },
            "credentialStatusDate": {
              "description": "The month, day, and year on which the credential status was effective.",
              "format": "date",
              "type": "string"
            },
            "credentialStatusDescriptor": {
              "description": "The current status of the credential (e.g., active, suspended, etc.).",
              "type": "string"
            },
            "educatorRoleDescriptor": {
              "description": "The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.",
              "type": "string"
            },
            "personReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            },
            "studentAcademicRecords": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Credential_StudentAcademicRecord"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "type": "object"
        },
        "EdFi_School": {
          "description": "",
          "properties": {
            "postSecondaryInstitutionReference": {
              "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution_Reference"
            }
          },
          "type": "object"
        },
        "EdFi_SurveyResponse": {
          "description": "",
          "properties": {
            "personReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            }
          },
          "type": "object"
        }
      },
      "newPaths": {
        "/tpdm/candidateEducatorPreparationProgramAssociations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMCandidateEducatorPreparationProgramAssociations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "beginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The end date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "endDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "Reason exited for the association.",
                "in": "query",
                "name": "reasonExitedDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
                "in": "query",
                "name": "eppProgramPathwayDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "candidateEducatorPreparationProgramAssociations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMCandidateEducatorPreparationProgramAssociation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
                  }
                }
              },
              "description": "The JSON representation of the CandidateEducatorPreparationProgramAssociation resource to be created or updated.",
              "required": true,
              "x-bodyName": "CandidateEducatorPreparationProgramAssociation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "candidateEducatorPreparationProgramAssociations"
            ]
          }
        },
        "/tpdm/candidateEducatorPreparationProgramAssociations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMCandidateEducatorPreparationProgramAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "candidateEducatorPreparationProgramAssociations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMCandidateEducatorPreparationProgramAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "candidateEducatorPreparationProgramAssociations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMCandidateEducatorPreparationProgramAssociation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
                  }
                }
              },
              "description": "The JSON representation of the CandidateEducatorPreparationProgramAssociation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "candidateEducatorPreparationProgramAssociations"
            ]
          }
        },
        "/tpdm/candidates": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMCandidates",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A unique alphanumeric code assigned to a candidate.",
                "in": "query",
                "name": "candidateIdentifier",
                "schema": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
                "in": "query",
                "name": "personalTitlePrefix",
                "schema": {
                  "maxLength": 30,
                  "type": "string"
                }
              },
              {
                "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                "in": "query",
                "name": "firstName",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              },
              {
                "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
                "in": "query",
                "name": "middleName",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              },
              {
                "description": "The name borne in common by members of a family.",
                "in": "query",
                "name": "lastSurname",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              },
              {
                "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
                "in": "query",
                "name": "generationCodeSuffix",
                "schema": {
                  "maxLength": 10,
                  "type": "string"
                }
              },
              {
                "description": "The individual's maiden name.",
                "in": "query",
                "name": "maidenName",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              },
              {
                "description": "The first name the individual prefers, if different from their legal first name",
                "in": "query",
                "name": "preferredFirstName",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              },
              {
                "description": "The last name the individual prefers, if different from their legal last name",
                "in": "query",
                "name": "preferredLastSurname",
                "schema": {
                  "maxLength": 75,
                  "type": "string"
                }
              },
              {
                "description": "The sex of the candidate.",
                "in": "query",
                "name": "sexDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "The month, day, and year on which an individual was born.",
                "in": "query",
                "name": "birthDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The city the student was born in.",
                "in": "query",
                "name": "birthCity",
                "schema": {
                  "maxLength": 30,
                  "minLength": 2,
                  "type": "string"
                }
              },
              {
                "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
                "in": "query",
                "name": "birthStateAbbreviationDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
                "in": "query",
                "name": "birthInternationalProvince",
                "schema": {
                  "maxLength": 150,
                  "type": "string"
                }
              },
              {
                "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
                "in": "query",
                "name": "birthCountryDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "For students born outside of the U.S., the date the student entered the U.S.",
                "in": "query",
                "name": "dateEnteredUS",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
                "in": "query",
                "name": "multipleBirthStatus",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "A person's sex at birth.",
                "in": "query",
                "name": "birthSexDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
                "in": "query",
                "name": "hispanicLatinoEthnicity",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "An indication of inadequate financial condition of an individual's family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
                "in": "query",
                "name": "economicDisadvantaged",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
                "in": "query",
                "name": "limitedEnglishProficiencyDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
                "in": "query",
                "name": "displacementStatus",
                "schema": {
                  "maxLength": 30,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "The gender of the candidate.",
                "in": "query",
                "name": "genderDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
                "in": "query",
                "name": "englishLanguageExamDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Indicator of whether individual is a first generation college student.",
                "in": "query",
                "name": "firstGenerationStudent",
                "schema": {
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_Candidate"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "candidates"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMCandidate",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_Candidate"
                  }
                }
              },
              "description": "The JSON representation of the Candidate resource to be created or updated.",
              "required": true,
              "x-bodyName": "Candidate"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "candidates"
            ]
          }
        },
        "/tpdm/candidates/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMCandidatesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "candidates"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMCandidatesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_Candidate"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "candidates"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMCandidate",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_Candidate"
                  }
                }
              },
              "description": "The JSON representation of the Candidate resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "candidates"
            ]
          }
        },
        "/tpdm/educatorPreparationPrograms": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEducatorPreparationPrograms",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
                "in": "query",
                "name": "programId",
                "schema": {
                  "maxLength": 20,
                  "type": "string"
                }
              },
              {
                "description": "The name of the Educator Preparation Program.",
                "in": "query",
                "name": "programName",
                "schema": {
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The type of program.",
                "in": "query",
                "name": "programTypeDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The current accreditation status of the Educator Preparation Program.",
                "in": "query",
                "name": "accreditationStatusDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "educatorPreparationPrograms"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEducatorPreparationProgram",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
                  }
                }
              },
              "description": "The JSON representation of the EducatorPreparationProgram resource to be created or updated.",
              "required": true,
              "x-bodyName": "EducatorPreparationProgram"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "educatorPreparationPrograms"
            ]
          }
        },
        "/tpdm/educatorPreparationPrograms/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEducatorPreparationProgramsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "educatorPreparationPrograms"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEducatorPreparationProgramsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "educatorPreparationPrograms"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEducatorPreparationProgram",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
                  }
                }
              },
              "description": "The JSON representation of the EducatorPreparationProgram resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "educatorPreparationPrograms"
            ]
          }
        },
        "/tpdm/evaluationElementRatings": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationElementRatings",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The rating level achieved based upon the rating or score.",
                "in": "query",
                "name": "evaluationElementRatingLevelDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Area identified for person to refine or improve as part of the evaluation.",
                "in": "query",
                "name": "areaOfRefinement",
                "schema": {
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
                "in": "query",
                "name": "areaOfReinforcement",
                "schema": {
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "Any comments about the performance evaluation to be captured.",
                "in": "query",
                "name": "comments",
                "schema": {
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "Feedback provided to the evaluated person.",
                "in": "query",
                "name": "feedback",
                "schema": {
                  "maxLength": 2048,
                  "minLength": 1,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationElementRatings"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationElementRating",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationElementRating resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationElementRating"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationElementRatings"
            ]
          }
        },
        "/tpdm/evaluationElementRatings/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationElementRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationElementRatings"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationElementRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationElementRatings"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationElementRating",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationElementRating resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationElementRatings"
            ]
          }
        },
        "/tpdm/evaluationElements": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationElements",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The name or title of the evaluation element.",
                "in": "query",
                "name": "evaluationElementTitle",
                "schema": {
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The sort order of this Evaluation Element.",
                "in": "query",
                "name": "sortOrder",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              {
                "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
                "in": "query",
                "name": "minRating",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The maximum summary numerical rating or score for the evaluation element.",
                "in": "query",
                "name": "maxRating",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
                "in": "query",
                "name": "evaluationTypeDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationElement"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationElements"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationElement",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElement"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationElement resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationElement"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationElements"
            ]
          }
        },
        "/tpdm/evaluationElements/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationElementsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationElements"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationElementsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationElement"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationElements"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationElement",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElement"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationElement resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationElements"
            ]
          }
        },
        "/tpdm/evaluationObjectiveRatings": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationObjectiveRatings",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The rating level achieved based upon the rating or score.",
                "in": "query",
                "name": "objectiveRatingLevelDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Any comments about the performance evaluation to be captured.",
                "in": "query",
                "name": "comments",
                "schema": {
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationObjectiveRatings"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationObjectiveRating",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationObjectiveRating resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationObjectiveRating"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationObjectiveRatings"
            ]
          }
        },
        "/tpdm/evaluationObjectiveRatings/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationObjectiveRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationObjectiveRatings"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationObjectiveRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationObjectiveRatings"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationObjectiveRating",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationObjectiveRating resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationObjectiveRatings"
            ]
          }
        },
        "/tpdm/evaluationObjectives": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationObjectives",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The name or title of the evaluation Objective.",
                "in": "query",
                "name": "evaluationObjectiveTitle",
                "schema": {
                  "maxLength": 50,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The long description of the Evaluation Objective.",
                "in": "query",
                "name": "evaluationObjectiveDescription",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                }
              },
              {
                "description": "The sort order of this Evaluation Objective.",
                "in": "query",
                "name": "sortOrder",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              {
                "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
                "in": "query",
                "name": "minRating",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The maximum summary numerical rating or score for the evaluation Objective.",
                "in": "query",
                "name": "maxRating",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
                "in": "query",
                "name": "evaluationTypeDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationObjective"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationObjectives"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationObjective",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationObjective"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationObjective resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationObjective"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationObjectives"
            ]
          }
        },
        "/tpdm/evaluationObjectives/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationObjectivesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationObjectives"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationObjectivesById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationObjective"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationObjectives"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationObjective",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationObjective"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationObjective resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationObjectives"
            ]
          }
        },
        "/tpdm/evaluationRatings": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluationRatings",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The date for the person's evaluation.",
                "in": "query",
                "name": "evaluationDate",
                "schema": {
                  "format": "date-time",
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The rating level achieved based upon the rating or score.",
                "in": "query",
                "name": "evaluationRatingLevelDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "The Status of the poerformance evaluation.",
                "in": "query",
                "name": "evaluationRatingStatusDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "Any comments about the evaluation to be captured.",
                "in": "query",
                "name": "comments",
                "schema": {
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
                "in": "query",
                "name": "actualDuration",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_EvaluationRating"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluationRatings"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluationRating",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRating"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationRating resource to be created or updated.",
              "required": true,
              "x-bodyName": "EvaluationRating"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluationRatings"
            ]
          }
        },
        "/tpdm/evaluationRatings/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluationRatings"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_EvaluationRating"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluationRatings"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluationRating",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRating"
                  }
                }
              },
              "description": "The JSON representation of the EvaluationRating resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluationRatings"
            ]
          }
        },
        "/tpdm/evaluations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMEvaluations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The name or title of the evaluation.",
                "in": "query",
                "name": "evaluationTitle",
                "schema": {
                  "maxLength": 50,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The long description of the Evaluation.",
                "in": "query",
                "name": "evaluationDescription",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                }
              },
              {
                "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
                "in": "query",
                "name": "minRating",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The maximum summary numerical rating or score for the evaluation.",
                "in": "query",
                "name": "maxRating",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
                "in": "query",
                "name": "evaluationTypeDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
                "in": "query",
                "name": "interRaterReliabilityScore",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_Evaluation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "evaluations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMEvaluation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_Evaluation"
                  }
                }
              },
              "description": "The JSON representation of the Evaluation resource to be created or updated.",
              "required": true,
              "x-bodyName": "Evaluation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "evaluations"
            ]
          }
        },
        "/tpdm/evaluations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMEvaluationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "evaluations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMEvaluationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_Evaluation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "evaluations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMEvaluation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_Evaluation"
                  }
                }
              },
              "description": "The JSON representation of the Evaluation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "evaluations"
            ]
          }
        },
        "/tpdm/financialAids": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMFinancialAids",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "beginDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The date the award was removed.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                "in": "query",
                "name": "endDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
                "in": "query",
                "name": "aidConditionDescription",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The classification of financial aid awarded to a person for the academic term/year.",
                "in": "query",
                "name": "aidTypeDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The amount of financial aid awarded to a person for the term/year.",
                "in": "query",
                "name": "aidAmount",
                "schema": {
                  "format": "double",
                  "type": "number"
                }
              },
              {
                "description": "Indicates a person who receives Pell Grant aid.",
                "in": "query",
                "name": "pellGrantRecipient",
                "schema": {
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_FinancialAid"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "financialAids"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMFinancialAid",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_FinancialAid"
                  }
                }
              },
              "description": "The JSON representation of the FinancialAid resource to be created or updated.",
              "required": true,
              "x-bodyName": "FinancialAid"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "financialAids"
            ]
          }
        },
        "/tpdm/financialAids/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMFinancialAidsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "financialAids"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMFinancialAidsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_FinancialAid"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "financialAids"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMFinancialAid",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_FinancialAid"
                  }
                }
              },
              "description": "The JSON representation of the FinancialAid resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "financialAids"
            ]
          }
        },
        "/tpdm/performanceEvaluationRatings": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMPerformanceEvaluationRatings",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The month, day, and year on which the performance evaluation was conducted.",
                "in": "query",
                "name": "actualDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "An indicator of whether the performance evaluation was announced or not.",
                "in": "query",
                "name": "announced",
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "description": "Any comments about the performance evaluation to be captured.",
                "in": "query",
                "name": "comments",
                "schema": {
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              },
              {
                "description": "A type of co-teaching observed as part of the performance evaluation.",
                "in": "query",
                "name": "coteachingStyleObservedDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
                "in": "query",
                "name": "actualDuration",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              {
                "description": "The rating level achieved based upon the rating or score.",
                "in": "query",
                "name": "performanceEvaluationRatingLevelDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "The month, day, and year on which the performance evaluation was scheduled.",
                "in": "query",
                "name": "scheduleDate",
                "schema": {
                  "format": "date",
                  "type": "string"
                }
              },
              {
                "description": "An indication of the the time at which the performance evaluation was conducted.",
                "in": "query",
                "name": "actualTime",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "performanceEvaluationRatings"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMPerformanceEvaluationRating",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluationRating resource to be created or updated.",
              "required": true,
              "x-bodyName": "PerformanceEvaluationRating"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "performanceEvaluationRatings"
            ]
          }
        },
        "/tpdm/performanceEvaluationRatings/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMPerformanceEvaluationRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "performanceEvaluationRatings"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMPerformanceEvaluationRatingsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "performanceEvaluationRatings"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMPerformanceEvaluationRating",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluationRating resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "performanceEvaluationRatings"
            ]
          }
        },
        "/tpdm/performanceEvaluations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMPerformanceEvaluations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "An assigned unique identifier for the performance evaluation.",
                "in": "query",
                "name": "performanceEvaluationTitle",
                "schema": {
                  "maxLength": 50,
                  "minLength": 1,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The long description of the Performance Evaluation.",
                "in": "query",
                "name": "performanceEvaluationDescription",
                "schema": {
                  "maxLength": 255,
                  "type": "string"
                }
              },
              {
                "description": "The term for the session during the school year.",
                "in": "query",
                "name": "termDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The type of performance evaluation conducted.",
                "in": "query",
                "name": "performanceEvaluationTypeDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The identifier for the school year.",
                "in": "query",
                "name": "schoolYear",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The period for the evaluation.",
                "in": "query",
                "name": "evaluationPeriodDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The description of the content or subject area of a performance evaluation.",
                "in": "query",
                "name": "academicSubjectDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "performanceEvaluations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMPerformanceEvaluation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluation resource to be created or updated.",
              "required": true,
              "x-bodyName": "PerformanceEvaluation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "performanceEvaluations"
            ]
          }
        },
        "/tpdm/performanceEvaluations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMPerformanceEvaluationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "performanceEvaluations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMPerformanceEvaluationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "performanceEvaluations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMPerformanceEvaluation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
                  }
                }
              },
              "description": "The JSON representation of the PerformanceEvaluation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "performanceEvaluations"
            ]
          }
        },
        "/tpdm/rubricDimensions": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMRubricDimensions",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The rating achieved for the rubric dimension.",
                "in": "query",
                "name": "rubricRating",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                },
                "x-Ed-Fi-isIdentity": true
              },
              {
                "description": "The rating level achieved for the rubric dimension.",
                "in": "query",
                "name": "rubricRatingLevelDescriptor",
                "schema": {
                  "maxLength": 306,
                  "type": "string"
                }
              },
              {
                "description": "The criterion description for the rubric dimension.",
                "in": "query",
                "name": "criterionDescription",
                "schema": {
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              {
                "description": "The order for the rubric dimension.",
                "in": "query",
                "name": "dimensionOrder",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_RubricDimension"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "rubricDimensions"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMRubricDimension",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_RubricDimension"
                  }
                }
              },
              "description": "The JSON representation of the RubricDimension resource to be created or updated.",
              "required": true,
              "x-bodyName": "RubricDimension"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "rubricDimensions"
            ]
          }
        },
        "/tpdm/rubricDimensions/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMRubricDimensionsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "rubricDimensions"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMRubricDimensionsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_RubricDimension"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "rubricDimensions"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMRubricDimension",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_RubricDimension"
                  }
                }
              },
              "description": "The JSON representation of the RubricDimension resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "rubricDimensions"
            ]
          }
        },
        "/tpdm/surveyResponsePersonTargetAssociations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMSurveyResponsePersonTargetAssociations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "surveyResponsePersonTargetAssociations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMSurveyResponsePersonTargetAssociation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
                  }
                }
              },
              "description": "The JSON representation of the SurveyResponsePersonTargetAssociation resource to be created or updated.",
              "required": true,
              "x-bodyName": "SurveyResponsePersonTargetAssociation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "surveyResponsePersonTargetAssociations"
            ]
          }
        },
        "/tpdm/surveyResponsePersonTargetAssociations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMSurveyResponsePersonTargetAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "surveyResponsePersonTargetAssociations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMSurveyResponsePersonTargetAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "surveyResponsePersonTargetAssociations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMSurveyResponsePersonTargetAssociation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
                  }
                }
              },
              "description": "The JSON representation of the SurveyResponsePersonTargetAssociation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "surveyResponsePersonTargetAssociations"
            ]
          }
        },
        "/tpdm/surveySectionResponsePersonTargetAssociations": {
          "get": {
            "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
            "operationId": "get_TPDMSurveySectionResponsePersonTargetAssociations",
            "parameters": [
              {
                "$ref": "#/components/parameters/offset"
              },
              {
                "$ref": "#/components/parameters/limit"
              },
              {
                "$ref": "#/components/parameters/MinChangeVersion"
              },
              {
                "$ref": "#/components/parameters/MaxChangeVersion"
              },
              {
                "$ref": "#/components/parameters/totalCount"
              },
              {
                "description": "",
                "in": "query",
                "name": "id",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
            "tags": [
              "surveySectionResponsePersonTargetAssociations"
            ]
          },
          "post": {
            "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
            "operationId": "post_TPDMSurveySectionResponsePersonTargetAssociation",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
                  }
                }
              },
              "description": "The JSON representation of the SurveySectionResponsePersonTargetAssociation resource to be created or updated.",
              "required": true,
              "x-bodyName": "SurveySectionResponsePersonTargetAssociation"
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/Updated"
              },
              "201": {
                "$ref": "#/components/responses/Created"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
            "tags": [
              "surveySectionResponsePersonTargetAssociations"
            ]
          }
        },
        "/tpdm/surveySectionResponsePersonTargetAssociations/{id}": {
          "delete": {
            "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
            "operationId": "delete_TPDMSurveySectionResponsePersonTargetAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              }
            ],
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Deletes an existing resource using the resource identifier.",
            "tags": [
              "surveySectionResponsePersonTargetAssociations"
            ]
          },
          "get": {
            "description": "This GET operation retrieves a resource by the specified resource identifier.",
            "operationId": "get_TPDMSurveySectionResponsePersonTargetAssociationsById",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
                    }
                  }
                },
                "description": "The requested resource was successfully retrieved."
              },
              "304": {
                "$ref": "#/components/responses/NotModified"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundUseSnapshot"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
            "tags": [
              "surveySectionResponsePersonTargetAssociations"
            ]
          },
          "put": {
            "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
            "operationId": "put_TPDMSurveySectionResponsePersonTargetAssociation",
            "parameters": [
              {
                "description": "A resource identifier that uniquely identifies the resource.",
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/If-None-Match"
              },
              {
                "description": "Indicates if the configured Snapshot should be used.",
                "in": "header",
                "name": "Use-Snapshot",
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
                  }
                }
              },
              "description": "The JSON representation of the SurveySectionResponsePersonTargetAssociation resource to be created or updated."
            },
            "responses": {
              "204": {
                "$ref": "#/components/responses/Updated"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "405": {
                "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "412": {
                "$ref": "#/components/responses/PreconditionFailed"
              },
              "500": {
                "$ref": "#/components/responses/Error"
              }
            },
            "summary": "Updates a resource based on the resource identifier.",
            "tags": [
              "surveySectionResponsePersonTargetAssociations"
            ]
          }
        }
      },
      "newSchemas": {
        "TPDM_Candidate": {
          "description": "A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.",
          "properties": {
            "addresses": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Address"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "birthCity": {
              "description": "The city the student was born in.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            },
            "birthCountryDescriptor": {
              "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
              "type": "string"
            },
            "birthDate": {
              "description": "The month, day, and year on which an individual was born.",
              "format": "date",
              "type": "string"
            },
            "birthInternationalProvince": {
              "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
              "maxLength": 150,
              "type": "string"
            },
            "birthSexDescriptor": {
              "description": "A person's sex at birth.",
              "type": "string"
            },
            "birthStateAbbreviationDescriptor": {
              "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
              "type": "string"
            },
            "candidateIdentifier": {
              "description": "A unique alphanumeric code assigned to a candidate.",
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "dateEnteredUS": {
              "description": "For students born outside of the U.S., the date the student entered the U.S.",
              "format": "date",
              "type": "string"
            },
            "disabilities": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Disability"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "displacementStatus": {
              "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
              "maxLength": 30,
              "minLength": 1,
              "type": "string"
            },
            "economicDisadvantaged": {
              "description": "An indication of inadequate financial condition of an individual's family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
              "type": "boolean"
            },
            "electronicMails": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_ElectronicMail"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "englishLanguageExamDescriptor": {
              "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
              "type": "string"
            },
            "firstGenerationStudent": {
              "description": "Indicator of whether individual is a first generation college student.",
              "type": "boolean"
            },
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "type": "string"
            },
            "genderDescriptor": {
              "description": "The gender of the candidate.",
              "type": "string"
            },
            "generationCodeSuffix": {
              "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
              "maxLength": 10,
              "type": "string"
            },
            "hispanicLatinoEthnicity": {
              "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
              "type": "boolean"
            },
            "languages": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Language"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "type": "string"
            },
            "limitedEnglishProficiencyDescriptor": {
              "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
              "type": "string"
            },
            "maidenName": {
              "description": "The individual's maiden name.",
              "maxLength": 75,
              "type": "string"
            },
            "middleName": {
              "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
              "maxLength": 75,
              "type": "string"
            },
            "multipleBirthStatus": {
              "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
              "type": "boolean"
            },
            "otherNames": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_OtherName"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "personReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            },
            "personalIdentificationDocuments": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Name_PersonalIdentificationDocument"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "personalTitlePrefix": {
              "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
              "maxLength": 30,
              "type": "string"
            },
            "preferredFirstName": {
              "description": "The first name the individual prefers, if different from their legal first name",
              "maxLength": 75,
              "type": "string"
            },
            "preferredLastSurname": {
              "description": "The last name the individual prefers, if different from their legal last name",
              "maxLength": 75,
              "type": "string"
            },
            "races": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Race"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sexDescriptor": {
              "description": "The sex of the candidate.",
              "type": "string"
            },
            "telephones": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Telephone"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "candidateIdentifier",
            "firstName",
            "lastSurname",
            "birthDate"
          ],
          "type": "object"
        },
        "TPDM_CandidateEducatorPreparationProgramAssociation": {
          "description": "Information about the association between the Teacher Candidate and the EducatorPreparationProgram",
          "properties": {
            "beginDate": {
              "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "candidateReference": {
              "$ref": "#/components/schemas/TPDM_Candidate_Reference"
            },
            "cohortYears": {
              "items": {
                "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation_CohortYear"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "degreeSpecializations": {
              "items": {
                "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation_DegreeSpecialization"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "educatorPreparationProgramReference": {
              "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram_Reference"
            },
            "endDate": {
              "description": "The end date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "eppProgramPathwayDescriptor": {
              "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
              "type": "string"
            },
            "reasonExitedDescriptor": {
              "description": "Reason exited for the association.",
              "type": "string"
            }
          },
          "required": [
            "candidateReference",
            "educatorPreparationProgramReference",
            "beginDate"
          ],
          "type": "object"
        },
        "TPDM_CandidateEducatorPreparationProgramAssociation_CohortYear": {
          "properties": {
            "cohortYearTypeDescriptor": {
              "description": "The type of cohort year (9th grade, graduation).",
              "type": "string"
            },
            "schoolYearTypeReference": {
              "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
            },
            "termDescriptor": {
              "description": "The term associated with the cohort year; for example, the intended term of graduation.",
              "type": "string"
            }
          },
          "required": [
            "schoolYearTypeReference",
            "cohortYearTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_CandidateEducatorPreparationProgramAssociation_DegreeSpecialization": {
          "properties": {
            "beginDate": {
              "description": "The month, day, and year on which the Teacher Candidate first declared specialization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "endDate": {
              "description": "The month, day, and year on which the Teacher Candidate exited the declared specialization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "majorSpecialization": {
              "description": "The major area for a degree or area of specialization for a certificate.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "minorSpecialization": {
              "description": "The minor area for a degree or area of specialization for a certificate.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "majorSpecialization",
            "beginDate"
          ],
          "type": "object"
        },
        "TPDM_CandidateEducatorPreparationProgramAssociation_Reference": {
          "properties": {
            "beginDate": {
              "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "candidateIdentifier": {
              "description": "A unique alphanumeric code assigned to a candidate.",
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "programName": {
              "description": "The name of the Educator Preparation Program.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "programTypeDescriptor": {
              "description": "The type of program.",
              "type": "string"
            }
          },
          "required": [
            "beginDate",
            "candidateIdentifier",
            "educationOrganizationId",
            "programName",
            "programTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Address": {
          "properties": {
            "addressTypeDescriptor": {
              "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
              "type": "string"
            },
            "apartmentRoomSuiteNumber": {
              "description": "The apartment, room, or suite number of an address.",
              "maxLength": 50,
              "type": "string"
            },
            "buildingSiteNumber": {
              "description": "The number of the building on the site, if more than one building shares the same address.",
              "maxLength": 20,
              "type": "string"
            },
            "city": {
              "description": "The name of the city in which an address is located.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            },
            "congressionalDistrict": {
              "description": "The congressional district in which an address is located.",
              "maxLength": 30,
              "type": "string"
            },
            "countyFIPSCode": {
              "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
              "maxLength": 5,
              "minLength": 3,
              "type": "string"
            },
            "doNotPublishIndicator": {
              "description": "An indication that the address should not be published.",
              "type": "boolean"
            },
            "latitude": {
              "description": "The geographic latitude of the physical address.",
              "maxLength": 20,
              "type": "string"
            },
            "localeDescriptor": {
              "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
              "type": "string"
            },
            "longitude": {
              "description": "The geographic longitude of the physical address.",
              "maxLength": 20,
              "type": "string"
            },
            "nameOfCounty": {
              "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
              "maxLength": 30,
              "type": "string"
            },
            "periods": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_Period"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "postalCode": {
              "description": "The five or nine digit zip code or overseas postal code portion of an address.",
              "maxLength": 17,
              "type": "string"
            },
            "stateAbbreviationDescriptor": {
              "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
              "type": "string"
            },
            "streetNumberName": {
              "description": "The street number and street name or post office box number of an address.",
              "maxLength": 150,
              "type": "string"
            }
          },
          "required": [
            "streetNumberName",
            "city",
            "stateAbbreviationDescriptor",
            "postalCode",
            "addressTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Disability": {
          "properties": {
            "designations": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_DisabilityDesignation"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "disabilityDescriptor": {
              "description": "A disability category that describes a individual's impairment.",
              "type": "string"
            },
            "disabilityDeterminationSourceTypeDescriptor": {
              "description": "The source that provided the disability determination.",
              "type": "string"
            },
            "disabilityDiagnosis": {
              "description": "A description of the disability diagnosis.",
              "maxLength": 80,
              "type": "string"
            },
            "orderOfDisability": {
              "description": "The order by severity of individual's disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
              "type": "integer"
            }
          },
          "required": [
            "disabilityDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_DisabilityDesignation": {
          "properties": {
            "disabilityDesignationDescriptor": {
              "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "disabilityDesignationDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_ElectronicMail": {
          "properties": {
            "doNotPublishIndicator": {
              "description": "An indication that the electronic email address should not be published.",
              "type": "boolean"
            },
            "electronicMailAddress": {
              "description": "The electronic mail (e-mail) address listed for an individual or organization.",
              "maxLength": 128,
              "minLength": 7,
              "type": "string"
            },
            "electronicMailTypeDescriptor": {
              "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
              "type": "string"
            },
            "primaryEmailAddressIndicator": {
              "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
              "type": "boolean"
            }
          },
          "required": [
            "electronicMailAddress",
            "electronicMailTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Language": {
          "properties": {
            "languageDescriptor": {
              "description": "A specification of which written or spoken communication is being used.",
              "type": "string"
            },
            "uses": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Candidate_LanguageUse"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "languageDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_LanguageUse": {
          "properties": {
            "languageUseDescriptor": {
              "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "languageUseDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Name_PersonalIdentificationDocument": {
          "properties": {
            "documentExpirationDate": {
              "description": "The day when the document  expires, if null then never expires.",
              "format": "date",
              "type": "string"
            },
            "documentTitle": {
              "description": "The title of the document given by the issuer.",
              "maxLength": 60,
              "type": "string"
            },
            "identificationDocumentUseDescriptor": {
              "description": "The primary function of the document used for establishing identity.",
              "type": "string"
            },
            "issuerCountryDescriptor": {
              "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
              "type": "string"
            },
            "issuerDocumentIdentificationCode": {
              "description": "The unique identifier on the issuer's identification system.",
              "maxLength": 60,
              "type": "string"
            },
            "issuerName": {
              "description": "Name of the entity or institution that issued the document.",
              "maxLength": 150,
              "type": "string"
            },
            "personalInformationVerificationDescriptor": {
              "description": "The category of the document relative to its purpose.",
              "type": "string"
            }
          },
          "required": [
            "personalInformationVerificationDescriptor",
            "identificationDocumentUseDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_OtherName": {
          "properties": {
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "type": "string"
            },
            "generationCodeSuffix": {
              "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
              "maxLength": 10,
              "type": "string"
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "type": "string"
            },
            "middleName": {
              "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
              "maxLength": 75,
              "type": "string"
            },
            "otherNameTypeDescriptor": {
              "description": "The types of alternate names for an individual.",
              "type": "string"
            },
            "personalTitlePrefix": {
              "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
              "maxLength": 30,
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastSurname",
            "otherNameTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Period": {
          "properties": {
            "beginDate": {
              "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "endDate": {
              "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "beginDate"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Race": {
          "properties": {
            "raceDescriptor": {
              "description": "The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "raceDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Reference": {
          "properties": {
            "candidateIdentifier": {
              "description": "A unique alphanumeric code assigned to a candidate.",
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "candidateIdentifier"
          ],
          "type": "object"
        },
        "TPDM_Candidate_Telephone": {
          "properties": {
            "doNotPublishIndicator": {
              "description": "An indication that the telephone number should not be published.",
              "type": "boolean"
            },
            "orderOfPriority": {
              "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
              "minimum": 1,
              "type": "integer"
            },
            "telephoneNumber": {
              "description": "The telephone number including the area code, and extension, if applicable.",
              "maxLength": 24,
              "type": "string"
            },
            "telephoneNumberTypeDescriptor": {
              "description": "The type of communication number listed for an individual or organization.",
              "type": "string"
            },
            "textMessageCapabilityIndicator": {
              "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
              "type": "boolean"
            }
          },
          "required": [
            "telephoneNumber",
            "telephoneNumberTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Credential_StudentAcademicRecord": {
          "properties": {
            "studentAcademicRecordReference": {
              "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_Reference"
            }
          },
          "required": [
            "studentAcademicRecordReference"
          ],
          "type": "object"
        },
        "TPDM_EducatorPreparationProgram": {
          "description": "The Educator Preparation Program is designed to prepare students to become licensed educators.",
          "properties": {
            "accreditationStatusDescriptor": {
              "description": "The current accreditation status of the Educator Preparation Program.",
              "type": "string"
            },
            "educationOrganizationReference": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference"
            },
            "gradeLevels": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram_GradeLevel"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "programId": {
              "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
              "maxLength": 20,
              "type": "string"
            },
            "programName": {
              "description": "The name of the Educator Preparation Program.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "programTypeDescriptor": {
              "description": "The type of program.",
              "type": "string"
            }
          },
          "required": [
            "educationOrganizationReference",
            "programName",
            "programTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EducatorPreparationProgram_GradeLevel": {
          "properties": {
            "gradeLevelDescriptor": {
              "description": "The grade levels served at the EPP Program.",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "gradeLevelDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EducatorPreparationProgram_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "programName": {
              "description": "The name of the Educator Preparation Program.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "programTypeDescriptor": {
              "description": "The type of program.",
              "type": "string"
            }
          },
          "required": [
            "educationOrganizationId",
            "programName",
            "programTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Evaluation": {
          "description": "An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.",
          "properties": {
            "evaluationDescription": {
              "description": "The long description of the Evaluation.",
              "maxLength": 255,
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationTypeDescriptor": {
              "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
              "type": "string"
            },
            "interRaterReliabilityScore": {
              "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
              "type": "integer"
            },
            "maxRating": {
              "description": "The maximum summary numerical rating or score for the evaluation.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
              "type": "number"
            },
            "performanceEvaluationReference": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_Reference"
            },
            "ratingLevels": {
              "items": {
                "$ref": "#/components/schemas/TPDM_Evaluation_EvaluationRatingLevel"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "performanceEvaluationReference",
            "evaluationTitle"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElement": {
          "description": "The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.",
          "properties": {
            "evaluationElementTitle": {
              "description": "The name or title of the evaluation element.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "evaluationObjectiveReference": {
              "$ref": "#/components/schemas/TPDM_EvaluationObjective_Reference"
            },
            "evaluationTypeDescriptor": {
              "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum summary numerical rating or score for the evaluation element.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
              "type": "number"
            },
            "ratingLevels": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EvaluationElement_ElementRatingLevel"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sortOrder": {
              "description": "The sort order of this Evaluation Element.",
              "type": "integer"
            }
          },
          "required": [
            "evaluationObjectiveReference",
            "evaluationElementTitle"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElementRating": {
          "description": "The lowest-level rating for an Evaluation Element for an individual educator.",
          "properties": {
            "areaOfRefinement": {
              "description": "Area identified for person to refine or improve as part of the evaluation.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "areaOfReinforcement": {
              "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "comments": {
              "description": "Any comments about the performance evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "elementRatingResults": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EvaluationElementRating_ElementRatingResult"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "evaluationElementRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "evaluationElementReference": {
              "$ref": "#/components/schemas/TPDM_EvaluationElement_Reference"
            },
            "evaluationObjectiveRatingReference": {
              "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating_Reference"
            },
            "feedback": {
              "description": "Feedback provided to the evaluated person.",
              "maxLength": 2048,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "evaluationObjectiveRatingReference",
            "evaluationElementReference"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElementRating_ElementRatingResult": {
          "properties": {
            "rating": {
              "description": "The numerical summary rating or score for the evaluation.",
              "type": "number"
            },
            "ratingResultTitle": {
              "description": "The title of Rating Result.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "resultDatatypeTypeDescriptor": {
              "description": "The datatype of the result.",
              "type": "string"
            }
          },
          "required": [
            "ratingResultTitle",
            "rating",
            "resultDatatypeTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElementRating_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationDate": {
              "description": "The date for the person's evaluation.",
              "format": "date-time",
              "type": "string"
            },
            "evaluationElementTitle": {
              "description": "The name or title of the evaluation element.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "personId": {
              "description": "A unique alphanumeric code assigned to a person.",
              "maxLength": 32,
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "sourceSystemDescriptor": {
              "description": "This descriptor defines the originating record source system for the person.",
              "type": "string"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationElementTitle",
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "evaluationObjectiveTitle",
            "evaluationDate",
            "personId",
            "sourceSystemDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElement_ElementRatingLevel": {
          "properties": {
            "evaluationRatingLevelDescriptor": {
              "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            }
          },
          "required": [
            "evaluationRatingLevelDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationElement_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationElementTitle": {
              "description": "The name or title of the evaluation element.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationElementTitle",
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "evaluationObjectiveTitle"
          ],
          "type": "object"
        },
        "TPDM_EvaluationObjective": {
          "description": "A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.",
          "properties": {
            "evaluationObjectiveDescription": {
              "description": "The long description of the Evaluation Objective.",
              "maxLength": 255,
              "type": "string"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationReference": {
              "$ref": "#/components/schemas/TPDM_Evaluation_Reference"
            },
            "evaluationTypeDescriptor": {
              "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum summary numerical rating or score for the evaluation Objective.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
              "type": "number"
            },
            "ratingLevels": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EvaluationObjective_ObjectiveRatingLevel"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sortOrder": {
              "description": "The sort order of this Evaluation Objective.",
              "type": "integer"
            }
          },
          "required": [
            "evaluationReference",
            "evaluationObjectiveTitle"
          ],
          "type": "object"
        },
        "TPDM_EvaluationObjectiveRating": {
          "description": "The rating for the component Evaluation Objective for an individual educator.",
          "properties": {
            "comments": {
              "description": "Any comments about the performance evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "evaluationObjectiveReference": {
              "$ref": "#/components/schemas/TPDM_EvaluationObjective_Reference"
            },
            "evaluationRatingReference": {
              "$ref": "#/components/schemas/TPDM_EvaluationRating_Reference"
            },
            "objectiveRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "objectiveRatingResults": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating_ObjectiveRatingResult"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "evaluationRatingReference",
            "evaluationObjectiveReference"
          ],
          "type": "object"
        },
        "TPDM_EvaluationObjectiveRating_ObjectiveRatingResult": {
          "properties": {
            "rating": {
              "description": "The numerical summary rating or score for the evaluation.",
              "type": "number"
            },
            "ratingResultTitle": {
              "description": "The title of Rating Result.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "resultDatatypeTypeDescriptor": {
              "description": "The datatype of the result.",
              "type": "string"
            }
          },
          "required": [
            "ratingResultTitle",
            "rating",
            "resultDatatypeTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationObjectiveRating_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationDate": {
              "description": "The date for the person's evaluation.",
              "format": "date-time",
              "type": "string"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "personId": {
              "description": "A unique alphanumeric code assigned to a person.",
              "maxLength": 32,
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "sourceSystemDescriptor": {
              "description": "This descriptor defines the originating record source system for the person.",
              "type": "string"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "evaluationObjectiveTitle",
            "evaluationDate",
            "personId",
            "sourceSystemDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationObjective_ObjectiveRatingLevel": {
          "properties": {
            "evaluationRatingLevelDescriptor": {
              "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            }
          },
          "required": [
            "evaluationRatingLevelDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationObjective_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "evaluationObjectiveTitle"
          ],
          "type": "object"
        },
        "TPDM_EvaluationRating": {
          "description": "The summary weighting for the Evaluation instrument for an individual educator.",
          "properties": {
            "actualDuration": {
              "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
              "minimum": 1,
              "type": "integer"
            },
            "comments": {
              "description": "Any comments about the evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "evaluationDate": {
              "description": "The date for the person's evaluation.",
              "format": "date-time",
              "type": "string"
            },
            "evaluationRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "evaluationRatingStatusDescriptor": {
              "description": "The Status of the poerformance evaluation.",
              "type": "string"
            },
            "evaluationReference": {
              "$ref": "#/components/schemas/TPDM_Evaluation_Reference"
            },
            "performanceEvaluationRatingReference": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_Reference"
            },
            "results": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EvaluationRating_EvaluationRatingResult"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "reviewers": {
              "items": {
                "$ref": "#/components/schemas/TPDM_EvaluationRating_Reviewer"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sectionReference": {
              "$ref": "#/components/schemas/EdFi_Section_Reference"
            }
          },
          "required": [
            "performanceEvaluationRatingReference",
            "evaluationReference",
            "evaluationDate"
          ],
          "type": "object"
        },
        "TPDM_EvaluationRating_EvaluationRatingResult": {
          "properties": {
            "rating": {
              "description": "The numerical summary rating or score for the evaluation.",
              "type": "number"
            },
            "ratingResultTitle": {
              "description": "The title of Rating Result.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "resultDatatypeTypeDescriptor": {
              "description": "The datatype of the result.",
              "type": "string"
            }
          },
          "required": [
            "ratingResultTitle",
            "rating",
            "resultDatatypeTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationRating_ReceivedTraining": {
          "properties": {
            "interRaterReliabilityScore": {
              "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
              "type": "integer"
            },
            "receivedTrainingDate": {
              "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
              "format": "date",
              "type": "string"
            }
          },
          "type": "object"
        },
        "TPDM_EvaluationRating_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationDate": {
              "description": "The date for the person's evaluation.",
              "format": "date-time",
              "type": "string"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "personId": {
              "description": "A unique alphanumeric code assigned to a person.",
              "maxLength": 32,
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "sourceSystemDescriptor": {
              "description": "This descriptor defines the originating record source system for the person.",
              "type": "string"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "evaluationDate",
            "personId",
            "sourceSystemDescriptor"
          ],
          "type": "object"
        },
        "TPDM_EvaluationRating_Reviewer": {
          "properties": {
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "type": "string"
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "type": "string"
            },
            "receivedTraining": {
              "$ref": "#/components/schemas/TPDM_EvaluationRating_ReceivedTraining"
            },
            "reviewerPersonReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            }
          },
          "required": [
            "firstName",
            "lastSurname"
          ],
          "type": "object"
        },
        "TPDM_Evaluation_EvaluationRatingLevel": {
          "properties": {
            "evaluationRatingLevelDescriptor": {
              "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            }
          },
          "required": [
            "evaluationRatingLevelDescriptor"
          ],
          "type": "object"
        },
        "TPDM_Evaluation_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor"
          ],
          "type": "object"
        },
        "TPDM_FinancialAid": {
          "description": "This entity represents the financial aid a person is awarded.",
          "properties": {
            "aidAmount": {
              "description": "The amount of financial aid awarded to a person for the term/year.",
              "type": "number"
            },
            "aidConditionDescription": {
              "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
              "maxLength": 1024,
              "type": "string"
            },
            "aidTypeDescriptor": {
              "description": "The classification of financial aid awarded to a person for the academic term/year.",
              "type": "string"
            },
            "beginDate": {
              "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "endDate": {
              "description": "The date the award was removed.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "pellGrantRecipient": {
              "description": "Indicates a person who receives Pell Grant aid.",
              "type": "boolean"
            },
            "studentReference": {
              "$ref": "#/components/schemas/EdFi_Student_Reference"
            }
          },
          "required": [
            "studentReference",
            "beginDate",
            "aidTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_FinancialAid_Reference": {
          "properties": {
            "aidTypeDescriptor": {
              "description": "The classification of financial aid awarded to a person for the academic term/year.",
              "type": "string"
            },
            "beginDate": {
              "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "studentUniqueId": {
              "description": "A unique alphanumeric code assigned to a student.",
              "maxLength": 32,
              "type": "string"
            }
          },
          "required": [
            "aidTypeDescriptor",
            "beginDate",
            "studentUniqueId"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluation": {
          "description": "A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.",
          "properties": {
            "academicSubjectDescriptor": {
              "description": "The description of the content or subject area of a performance evaluation.",
              "type": "string"
            },
            "educationOrganizationReference": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "gradeLevels": {
              "items": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_GradeLevel"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "performanceEvaluationDescription": {
              "description": "The long description of the Performance Evaluation.",
              "maxLength": 255,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "ratingLevels": {
              "items": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_PerformanceEvaluationRatingLevel"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "schoolYearTypeReference": {
              "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "performanceEvaluationTitle",
            "termDescriptor",
            "performanceEvaluationTypeDescriptor",
            "schoolYearTypeReference",
            "evaluationPeriodDescriptor",
            "educationOrganizationReference"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluationRating": {
          "description": "The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.",
          "properties": {
            "actualDate": {
              "description": "The month, day, and year on which the performance evaluation was conducted.",
              "format": "date",
              "type": "string"
            },
            "actualDuration": {
              "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
              "minimum": 1,
              "type": "integer"
            },
            "actualTime": {
              "description": "An indication of the the time at which the performance evaluation was conducted.",
              "format": "time",
              "type": "string"
            },
            "announced": {
              "description": "An indicator of whether the performance evaluation was announced or not.",
              "type": "boolean"
            },
            "comments": {
              "description": "Any comments about the performance evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "coteachingStyleObservedDescriptor": {
              "description": "A type of co-teaching observed as part of the performance evaluation.",
              "type": "string"
            },
            "performanceEvaluationRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "performanceEvaluationReference": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_Reference"
            },
            "personReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            },
            "results": {
              "items": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_PerformanceEvaluationRatingResult"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "reviewers": {
              "items": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_Reviewer"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "scheduleDate": {
              "description": "The month, day, and year on which the performance evaluation was scheduled.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "personReference",
            "performanceEvaluationReference",
            "actualDate"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluationRating_PerformanceEvaluationRatingResult": {
          "properties": {
            "rating": {
              "description": "The numerical summary rating or score for the evaluation.",
              "type": "number"
            },
            "ratingResultTitle": {
              "description": "The title of Rating Result.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "resultDatatypeTypeDescriptor": {
              "description": "The datatype of the result.",
              "type": "string"
            }
          },
          "required": [
            "ratingResultTitle",
            "rating",
            "resultDatatypeTypeDescriptor"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluationRating_ReceivedTraining": {
          "properties": {
            "interRaterReliabilityScore": {
              "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
              "type": "integer"
            },
            "receivedTrainingDate": {
              "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
              "format": "date",
              "type": "string"
            }
          },
          "type": "object"
        },
        "TPDM_PerformanceEvaluationRating_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "personId": {
              "description": "A unique alphanumeric code assigned to a person.",
              "maxLength": 32,
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "sourceSystemDescriptor": {
              "description": "This descriptor defines the originating record source system for the person.",
              "type": "string"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "personId",
            "sourceSystemDescriptor"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluationRating_Reviewer": {
          "properties": {
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "type": "string"
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "type": "string"
            },
            "receivedTraining": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_ReceivedTraining"
            },
            "reviewerPersonReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            }
          },
          "required": [
            "firstName",
            "lastSurname"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluation_GradeLevel": {
          "properties": {
            "gradeLevelDescriptor": {
              "description": "The grade levels involved with the performance evaluation.",
              "maxLength": 306,
              "type": "string"
            }
          },
          "required": [
            "gradeLevelDescriptor"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluation_PerformanceEvaluationRatingLevel": {
          "properties": {
            "evaluationRatingLevelDescriptor": {
              "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
              "type": "number"
            }
          },
          "required": [
            "evaluationRatingLevelDescriptor"
          ],
          "type": "object"
        },
        "TPDM_PerformanceEvaluation_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor"
          ],
          "type": "object"
        },
        "TPDM_RubricDimension": {
          "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.",
          "properties": {
            "criterionDescription": {
              "description": "The criterion description for the rubric dimension.",
              "maxLength": 1024,
              "type": "string"
            },
            "dimensionOrder": {
              "description": "The order for the rubric dimension.",
              "type": "integer"
            },
            "evaluationElementReference": {
              "$ref": "#/components/schemas/TPDM_EvaluationElement_Reference"
            },
            "rubricRating": {
              "description": "The rating achieved for the rubric dimension.",
              "type": "integer"
            },
            "rubricRatingLevelDescriptor": {
              "description": "The rating level achieved for the rubric dimension.",
              "type": "string"
            }
          },
          "required": [
            "evaluationElementReference",
            "rubricRating",
            "criterionDescription"
          ],
          "type": "object"
        },
        "TPDM_RubricDimension_Reference": {
          "properties": {
            "educationOrganizationId": {
              "description": "The identifier assigned to an education organization.",
              "type": "integer"
            },
            "evaluationElementTitle": {
              "description": "The name or title of the evaluation element.",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "rubricRating": {
              "description": "The rating achieved for the rubric dimension.",
              "type": "integer"
            },
            "schoolYear": {
              "description": "A school year between 1900 and 2100",
              "maximum": 2100,
              "minimum": 1900,
              "type": "integer"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "evaluationElementTitle",
            "evaluationTitle",
            "educationOrganizationId",
            "evaluationPeriodDescriptor",
            "performanceEvaluationTitle",
            "performanceEvaluationTypeDescriptor",
            "schoolYear",
            "termDescriptor",
            "evaluationObjectiveTitle",
            "rubricRating"
          ],
          "type": "object"
        },
        "TPDM_SurveyResponsePersonTargetAssociation": {
          "description": "The association provides information about the survey being taken and who the survey is about.",
          "properties": {
            "personReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            },
            "surveyResponseReference": {
              "$ref": "#/components/schemas/EdFi_SurveyResponse_Reference"
            }
          },
          "required": [
            "surveyResponseReference",
            "personReference"
          ],
          "type": "object"
        },
        "TPDM_SurveyResponsePersonTargetAssociation_Reference": {
          "properties": {
            "namespace": {
              "description": "Namespace for the survey.",
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "personId": {
              "description": "A unique alphanumeric code assigned to a person.",
              "maxLength": 32,
              "type": "string"
            },
            "sourceSystemDescriptor": {
              "description": "This descriptor defines the originating record source system for the person.",
              "type": "string"
            },
            "surveyIdentifier": {
              "description": "The unique survey identifier from the survey tool.",
              "maxLength": 60,
              "type": "string"
            },
            "surveyResponseIdentifier": {
              "description": "The identifier of the survey typically from the survey application.",
              "maxLength": 60,
              "type": "string"
            }
          },
          "required": [
            "personId",
            "sourceSystemDescriptor",
            "namespace",
            "surveyIdentifier",
            "surveyResponseIdentifier"
          ],
          "type": "object"
        },
        "TPDM_SurveySectionResponsePersonTargetAssociation": {
          "description": "This association provides information about the survey section and the person the survey section is about.",
          "properties": {
            "personReference": {
              "$ref": "#/components/schemas/EdFi_Person_Reference"
            },
            "surveySectionResponseReference": {
              "$ref": "#/components/schemas/EdFi_SurveySectionResponse_Reference"
            }
          },
          "required": [
            "surveySectionResponseReference",
            "personReference"
          ],
          "type": "object"
        },
        "TPDM_SurveySectionResponsePersonTargetAssociation_Reference": {
          "properties": {
            "namespace": {
              "description": "Namespace for the survey.",
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "personId": {
              "description": "A unique alphanumeric code assigned to a person.",
              "maxLength": 32,
              "type": "string"
            },
            "sourceSystemDescriptor": {
              "description": "This descriptor defines the originating record source system for the person.",
              "type": "string"
            },
            "surveyIdentifier": {
              "description": "The unique survey identifier from the survey tool.",
              "maxLength": 60,
              "type": "string"
            },
            "surveyResponseIdentifier": {
              "description": "The identifier of the survey typically from the survey application.",
              "maxLength": 60,
              "type": "string"
            },
            "surveySectionTitle": {
              "description": "The title or label for the survey section.",
              "maxLength": 255,
              "type": "string"
            }
          },
          "required": [
            "personId",
            "sourceSystemDescriptor",
            "surveyResponseIdentifier",
            "namespace",
            "surveyIdentifier",
            "surveySectionTitle"
          ],
          "type": "object"
        }
      },
      "newTags": [
        {
          "description": "Information about the association between the Teacher Candidate and the EducatorPreparationProgram",
          "name": "candidateEducatorPreparationProgramAssociations"
        },
        {
          "description": "A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.",
          "name": "candidates"
        },
        {
          "description": "The Educator Preparation Program is designed to prepare students to become licensed educators.",
          "name": "educatorPreparationPrograms"
        },
        {
          "description": "The lowest-level rating for an Evaluation Element for an individual educator.",
          "name": "evaluationElementRatings"
        },
        {
          "description": "The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.",
          "name": "evaluationElements"
        },
        {
          "description": "The rating for the component Evaluation Objective for an individual educator.",
          "name": "evaluationObjectiveRatings"
        },
        {
          "description": "A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.",
          "name": "evaluationObjectives"
        },
        {
          "description": "The summary weighting for the Evaluation instrument for an individual educator.",
          "name": "evaluationRatings"
        },
        {
          "description": "An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.",
          "name": "evaluations"
        },
        {
          "description": "This entity represents the financial aid a person is awarded.",
          "name": "financialAids"
        },
        {
          "description": "The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.",
          "name": "performanceEvaluationRatings"
        },
        {
          "description": "A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.",
          "name": "performanceEvaluations"
        },
        {
          "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.",
          "name": "rubricDimensions"
        },
        {
          "description": "The association provides information about the survey being taken and who the survey is about.",
          "name": "surveyResponsePersonTargetAssociations"
        },
        {
          "description": "This association provides information about the survey section and the person the survey section is about.",
          "name": "surveySectionResponsePersonTargetAssociations"
        }
      ]
    },
    "projectEndpointName": "tpdm",
    "projectName": "TPDM",
    "projectVersion": "1.1.0",
    "resourceNameMapping": {
      "AccreditationStatusDescriptor": "accreditationStatusDescriptors",
      "AidTypeDescriptor": "aidTypeDescriptors",
      "Candidate": "candidates",
      "CandidateEducatorPreparationProgramAssociation": "candidateEducatorPreparationProgramAssociations",
      "CertificationRouteDescriptor": "certificationRouteDescriptors",
      "CoteachingStyleObservedDescriptor": "coteachingStyleObservedDescriptors",
      "CredentialStatusDescriptor": "credentialStatusDescriptors",
      "EPPProgramPathwayDescriptor": "eppProgramPathwayDescriptors",
      "EducatorPreparationProgram": "educatorPreparationPrograms",
      "EducatorRoleDescriptor": "educatorRoleDescriptors",
      "EnglishLanguageExamDescriptor": "englishLanguageExamDescriptors",
      "Evaluation": "evaluations",
      "EvaluationElement": "evaluationElements",
      "EvaluationElementRating": "evaluationElementRatings",
      "EvaluationElementRatingLevelDescriptor": "evaluationElementRatingLevelDescriptors",
      "EvaluationObjective": "evaluationObjectives",
      "EvaluationObjectiveRating": "evaluationObjectiveRatings",
      "EvaluationPeriodDescriptor": "evaluationPeriodDescriptors",
      "EvaluationRating": "evaluationRatings",
      "EvaluationRatingLevelDescriptor": "evaluationRatingLevelDescriptors",
      "EvaluationRatingStatusDescriptor": "evaluationRatingStatusDescriptors",
      "EvaluationTypeDescriptor": "evaluationTypeDescriptors",
      "FinancialAid": "financialAids",
      "GenderDescriptor": "genderDescriptors",
      "ObjectiveRatingLevelDescriptor": "objectiveRatingLevelDescriptors",
      "PerformanceEvaluation": "performanceEvaluations",
      "PerformanceEvaluationRating": "performanceEvaluationRatings",
      "PerformanceEvaluationRatingLevelDescriptor": "performanceEvaluationRatingLevelDescriptors",
      "PerformanceEvaluationTypeDescriptor": "performanceEvaluationTypeDescriptors",
      "RubricDimension": "rubricDimensions",
      "RubricRatingLevelDescriptor": "rubricRatingLevelDescriptors",
      "SurveyResponsePersonTargetAssociation": "surveyResponsePersonTargetAssociations",
      "SurveySectionResponsePersonTargetAssociation": "surveySectionResponsePersonTargetAssociations"
    },
    "resourceSchemas": {
      "accreditationStatusDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "AccreditationStatusDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "aidTypeDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "AidTypeDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "candidateEducatorPreparationProgramAssociations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.cohortYears[*].cohortYearTypeDescriptor",
              "$.cohortYears[*].schoolYearTypeReference.schoolYear"
            ]
          },
          {
            "paths": [
              "$.degreeSpecializations[*].beginDate",
              "$.degreeSpecializations[*].majorSpecialization"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.beginDate",
            "type": "date"
          },
          "Candidate": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.candidateIdentifier",
                "referenceJsonPath": "$.candidateReference.candidateIdentifier",
                "type": "string"
              }
            ],
            "resourceName": "Candidate"
          },
          "CohortYear.CohortYearTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.cohortYears[*].cohortYearTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CohortYearTypeDescriptor",
            "type": "string"
          },
          "CohortYear.SchoolYear": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolYear",
                "referenceJsonPath": "$.cohortYears[*].schoolYearTypeReference.schoolYear",
                "type": "string"
              }
            ],
            "resourceName": "SchoolYearType"
          },
          "CohortYear.TermDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.cohortYears[*].termDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "TermDescriptor",
            "type": "string"
          },
          "DegreeSpecialization.BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.degreeSpecializations[*].beginDate",
            "type": "date"
          },
          "DegreeSpecialization.EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.degreeSpecializations[*].endDate",
            "type": "date"
          },
          "DegreeSpecialization.MajorSpecialization": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.degreeSpecializations[*].majorSpecialization",
            "type": "string"
          },
          "DegreeSpecialization.MinorSpecialization": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.degreeSpecializations[*].minorSpecialization",
            "type": "string"
          },
          "EPPProgramPathwayDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.eppProgramPathwayDescriptor",
            "projectName": "TPDM",
            "resourceName": "EPPProgramPathwayDescriptor",
            "type": "string"
          },
          "EducatorPreparationProgram": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.educatorPreparationProgramReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.programName",
                "referenceJsonPath": "$.educatorPreparationProgramReference.programName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.programTypeDescriptor",
                "referenceJsonPath": "$.educatorPreparationProgramReference.programTypeDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EducatorPreparationProgram"
          },
          "EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.endDate",
            "type": "date"
          },
          "ReasonExitedDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.reasonExitedDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ReasonExitedDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$.beginDate",
            "targetJsonPath": "$.degreeSpecializations[*].beginDate"
          }
        ],
        "identityJsonPaths": [
          "$.beginDate",
          "$.candidateReference.candidateIdentifier",
          "$.educatorPreparationProgramReference.educationOrganizationId",
          "$.educatorPreparationProgramReference.programName",
          "$.educatorPreparationProgramReference.programTypeDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "Information about the association between the Teacher Candidate and the EducatorPreparationProgram",
          "properties": {
            "beginDate": {
              "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "candidateReference": {
              "additionalProperties": false,
              "properties": {
                "candidateIdentifier": {
                  "description": "A unique alphanumeric code assigned to a candidate.",
                  "maxLength": 32,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "candidateIdentifier"
              ],
              "type": "object"
            },
            "cohortYears": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "cohortYearTypeDescriptor": {
                    "description": "The type of cohort year (9th grade, graduation).",
                    "type": "string"
                  },
                  "schoolYearTypeReference": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": false,
                    "description": "A school year enumeration",
                    "properties": {
                      "schoolYear": {
                        "description": "A school year between 1900 and 2100",
                        "maximum": 2100,
                        "minimum": 1900,
                        "type": "integer"
                      }
                    },
                    "title": "EdFi.SchoolYearType",
                    "type": "object"
                  },
                  "termDescriptor": {
                    "description": "The term associated with the cohort year; for example, the intended term of graduation.",
                    "type": "string"
                  }
                },
                "required": [
                  "schoolYearTypeReference",
                  "cohortYearTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "degreeSpecializations": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "beginDate": {
                    "description": "The month, day, and year on which the Teacher Candidate first declared specialization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                    "format": "date",
                    "type": "string"
                  },
                  "endDate": {
                    "description": "The month, day, and year on which the Teacher Candidate exited the declared specialization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                    "format": "date",
                    "type": "string"
                  },
                  "majorSpecialization": {
                    "description": "The major area for a degree or area of specialization for a certificate.",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "minorSpecialization": {
                    "description": "The minor area for a degree or area of specialization for a certificate.",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "majorSpecialization",
                  "beginDate"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "educatorPreparationProgramReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "programName": {
                  "description": "The name of the Educator Preparation Program.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "programTypeDescriptor": {
                  "description": "The type of program.",
                  "type": "string"
                }
              },
              "required": [
                "educationOrganizationId",
                "programName",
                "programTypeDescriptor"
              ],
              "type": "object"
            },
            "endDate": {
              "description": "The end date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "eppProgramPathwayDescriptor": {
              "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
              "type": "string"
            },
            "reasonExitedDescriptor": {
              "description": "Reason exited for the association.",
              "type": "string"
            }
          },
          "required": [
            "candidateReference",
            "educatorPreparationProgramReference",
            "beginDate"
          ],
          "title": "TPDM.CandidateEducatorPreparationProgramAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.cohortYears[*].schoolYearTypeReference.schoolYear",
          "$.educatorPreparationProgramReference.educationOrganizationId"
        ],
        "queryFieldMapping": {
          "beginDate": [
            {
              "path": "$.beginDate",
              "type": "date"
            }
          ],
          "candidateIdentifier": [
            {
              "path": "$.candidateReference.candidateIdentifier",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.educatorPreparationProgramReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "endDate": [
            {
              "path": "$.endDate",
              "type": "date"
            }
          ],
          "eppProgramPathwayDescriptor": [
            {
              "path": "$.eppProgramPathwayDescriptor",
              "type": "string"
            }
          ],
          "programName": [
            {
              "path": "$.educatorPreparationProgramReference.programName",
              "type": "string"
            }
          ],
          "programTypeDescriptor": [
            {
              "path": "$.educatorPreparationProgramReference.programTypeDescriptor",
              "type": "string"
            }
          ],
          "reasonExitedDescriptor": [
            {
              "path": "$.reasonExitedDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "CandidateEducatorPreparationProgramAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.educatorPreparationProgramReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "candidates": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "nestedConstraints": [
              {
                "basePath": "$.addresses[*]",
                "paths": [
                  "$.periods[*].beginDate"
                ]
              }
            ],
            "paths": [
              "$.addresses[*].addressTypeDescriptor",
              "$.addresses[*].city",
              "$.addresses[*].postalCode",
              "$.addresses[*].stateAbbreviationDescriptor",
              "$.addresses[*].streetNumberName"
            ]
          },
          {
            "nestedConstraints": [
              {
                "basePath": "$.disabilities[*]",
                "paths": [
                  "$.designations[*].disabilityDesignationDescriptor"
                ]
              }
            ],
            "paths": [
              "$.disabilities[*].disabilityDescriptor"
            ]
          },
          {
            "paths": [
              "$.electronicMails[*].electronicMailAddress",
              "$.electronicMails[*].electronicMailTypeDescriptor"
            ]
          },
          {
            "nestedConstraints": [
              {
                "basePath": "$.languages[*]",
                "paths": [
                  "$.uses[*].languageUseDescriptor"
                ]
              }
            ],
            "paths": [
              "$.languages[*].languageDescriptor"
            ]
          },
          {
            "paths": [
              "$.personalIdentificationDocuments[*].identificationDocumentUseDescriptor",
              "$.personalIdentificationDocuments[*].personalInformationVerificationDescriptor"
            ]
          },
          {
            "paths": [
              "$.otherNames[*].otherNameTypeDescriptor"
            ]
          },
          {
            "paths": [
              "$.races[*].raceDescriptor"
            ]
          },
          {
            "paths": [
              "$.telephones[*].telephoneNumber",
              "$.telephones[*].telephoneNumberTypeDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$.addresses[*].doNotPublishIndicator",
          "$.economicDisadvantaged",
          "$.electronicMails[*].doNotPublishIndicator",
          "$.electronicMails[*].primaryEmailAddressIndicator",
          "$.firstGenerationStudent",
          "$.hispanicLatinoEthnicity",
          "$.multipleBirthStatus",
          "$.telephones[*].doNotPublishIndicator",
          "$.telephones[*].textMessageCapabilityIndicator"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Address.AddressTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.addresses[*].addressTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "AddressTypeDescriptor",
            "type": "string"
          },
          "Address.ApartmentRoomSuiteNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].apartmentRoomSuiteNumber",
            "type": "string"
          },
          "Address.BuildingSiteNumber": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].buildingSiteNumber",
            "type": "string"
          },
          "Address.City": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.addresses[*].city",
            "type": "string"
          },
          "Address.CongressionalDistrict": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].congressionalDistrict",
            "type": "string"
          },
          "Address.CountyFIPSCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].countyFIPSCode",
            "type": "string"
          },
          "Address.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].doNotPublishIndicator",
            "type": "boolean"
          },
          "Address.Latitude": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].latitude",
            "type": "string"
          },
          "Address.LocaleDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.addresses[*].localeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "LocaleDescriptor",
            "type": "string"
          },
          "Address.Longitude": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].longitude",
            "type": "string"
          },
          "Address.NameOfCounty": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].nameOfCounty",
            "type": "string"
          },
          "Address.Period.BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.addresses[*].periods[*].beginDate",
            "type": "date"
          },
          "Address.Period.EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.addresses[*].periods[*].endDate",
            "type": "date"
          },
          "Address.PostalCode": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.addresses[*].postalCode",
            "type": "string"
          },
          "Address.StateAbbreviationDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.addresses[*].stateAbbreviationDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "StateAbbreviationDescriptor",
            "type": "string"
          },
          "Address.StreetNumberName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.addresses[*].streetNumberName",
            "type": "string"
          },
          "BirthData.BirthCity": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.birthCity",
            "type": "string"
          },
          "BirthData.BirthCountryDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.birthCountryDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CountryDescriptor",
            "type": "string"
          },
          "BirthData.BirthDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.birthDate",
            "type": "date"
          },
          "BirthData.BirthInternationalProvince": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.birthInternationalProvince",
            "type": "string"
          },
          "BirthData.BirthSexDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.birthSexDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "SexDescriptor",
            "type": "string"
          },
          "BirthData.BirthStateAbbreviationDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.birthStateAbbreviationDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "StateAbbreviationDescriptor",
            "type": "string"
          },
          "BirthData.DateEnteredUS": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.dateEnteredUS",
            "type": "date"
          },
          "BirthData.MultipleBirthStatus": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.multipleBirthStatus",
            "type": "boolean"
          },
          "CandidateIdentifier": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.candidateIdentifier",
            "type": "string"
          },
          "Disability.DisabilityDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.disabilities[*].disabilityDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "DisabilityDescriptor",
            "type": "string"
          },
          "Disability.DisabilityDesignationDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.disabilities[*].designations[*].disabilityDesignationDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "DisabilityDesignationDescriptor",
            "type": "string"
          },
          "Disability.DisabilityDeterminationSourceTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.disabilities[*].disabilityDeterminationSourceTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "DisabilityDeterminationSourceTypeDescriptor",
            "type": "string"
          },
          "Disability.DisabilityDiagnosis": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.disabilities[*].disabilityDiagnosis",
            "type": "string"
          },
          "Disability.OrderOfDisability": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.disabilities[*].orderOfDisability",
            "type": "number"
          },
          "DisplacementStatus": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.displacementStatus",
            "type": "string"
          },
          "EconomicDisadvantaged": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.economicDisadvantaged",
            "type": "boolean"
          },
          "ElectronicMail.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.electronicMails[*].doNotPublishIndicator",
            "type": "boolean"
          },
          "ElectronicMail.ElectronicMailAddress": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.electronicMails[*].electronicMailAddress",
            "type": "string"
          },
          "ElectronicMail.ElectronicMailTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.electronicMails[*].electronicMailTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ElectronicMailTypeDescriptor",
            "type": "string"
          },
          "ElectronicMail.PrimaryEmailAddressIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.electronicMails[*].primaryEmailAddressIndicator",
            "type": "boolean"
          },
          "EnglishLanguageExamDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.englishLanguageExamDescriptor",
            "projectName": "TPDM",
            "resourceName": "EnglishLanguageExamDescriptor",
            "type": "string"
          },
          "FirstGenerationStudent": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.firstGenerationStudent",
            "type": "boolean"
          },
          "GenderDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.genderDescriptor",
            "projectName": "TPDM",
            "resourceName": "GenderDescriptor",
            "type": "string"
          },
          "HispanicLatinoEthnicity": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.hispanicLatinoEthnicity",
            "type": "boolean"
          },
          "Language.LanguageDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.languages[*].languageDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "LanguageDescriptor",
            "type": "string"
          },
          "Language.LanguageUseDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.languages[*].uses[*].languageUseDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "LanguageUseDescriptor",
            "type": "string"
          },
          "LimitedEnglishProficiencyDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.limitedEnglishProficiencyDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "LimitedEnglishProficiencyDescriptor",
            "type": "string"
          },
          "Name.FirstName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.firstName",
            "type": "string"
          },
          "Name.GenerationCodeSuffix": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.generationCodeSuffix",
            "type": "string"
          },
          "Name.LastSurname": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.lastSurname",
            "type": "string"
          },
          "Name.MaidenName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.maidenName",
            "type": "string"
          },
          "Name.MiddleName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.middleName",
            "type": "string"
          },
          "Name.PersonalIdentificationDocument.DocumentExpirationDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.personalIdentificationDocuments[*].documentExpirationDate",
            "type": "date"
          },
          "Name.PersonalIdentificationDocument.DocumentTitle": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.personalIdentificationDocuments[*].documentTitle",
            "type": "string"
          },
          "Name.PersonalIdentificationDocument.IdentificationDocumentUseDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.personalIdentificationDocuments[*].identificationDocumentUseDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "IdentificationDocumentUseDescriptor",
            "type": "string"
          },
          "Name.PersonalIdentificationDocument.IssuerCountryDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.personalIdentificationDocuments[*].issuerCountryDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "CountryDescriptor",
            "type": "string"
          },
          "Name.PersonalIdentificationDocument.IssuerDocumentIdentificationCode": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.personalIdentificationDocuments[*].issuerDocumentIdentificationCode",
            "type": "string"
          },
          "Name.PersonalIdentificationDocument.IssuerName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.personalIdentificationDocuments[*].issuerName",
            "type": "string"
          },
          "Name.PersonalIdentificationDocument.PersonalInformationVerificationDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.personalIdentificationDocuments[*].personalInformationVerificationDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "PersonalInformationVerificationDescriptor",
            "type": "string"
          },
          "Name.PersonalTitlePrefix": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.personalTitlePrefix",
            "type": "string"
          },
          "Name.PreferredFirstName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.preferredFirstName",
            "type": "string"
          },
          "Name.PreferredLastSurname": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.preferredLastSurname",
            "type": "string"
          },
          "OtherName.FirstName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.otherNames[*].firstName",
            "type": "string"
          },
          "OtherName.GenerationCodeSuffix": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.otherNames[*].generationCodeSuffix",
            "type": "string"
          },
          "OtherName.LastSurname": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.otherNames[*].lastSurname",
            "type": "string"
          },
          "OtherName.MiddleName": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.otherNames[*].middleName",
            "type": "string"
          },
          "OtherName.OtherNameTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.otherNames[*].otherNameTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "OtherNameTypeDescriptor",
            "type": "string"
          },
          "OtherName.PersonalTitlePrefix": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.otherNames[*].personalTitlePrefix",
            "type": "string"
          },
          "Person": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$.personReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$.personReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "RaceDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.races[*].raceDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "RaceDescriptor",
            "type": "string"
          },
          "SexDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.sexDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "SexDescriptor",
            "type": "string"
          },
          "Telephone.DoNotPublishIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.telephones[*].doNotPublishIndicator",
            "type": "boolean"
          },
          "Telephone.OrderOfPriority": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.telephones[*].orderOfPriority",
            "type": "number"
          },
          "Telephone.TelephoneNumber": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.telephones[*].telephoneNumber",
            "type": "string"
          },
          "Telephone.TelephoneNumberTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.telephones[*].telephoneNumberTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "TelephoneNumberTypeDescriptor",
            "type": "string"
          },
          "Telephone.TextMessageCapabilityIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.telephones[*].textMessageCapabilityIndicator",
            "type": "boolean"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.candidateIdentifier"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.",
          "properties": {
            "addresses": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "addressTypeDescriptor": {
                    "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
                    "type": "string"
                  },
                  "apartmentRoomSuiteNumber": {
                    "description": "The apartment, room, or suite number of an address.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "buildingSiteNumber": {
                    "description": "The number of the building on the site, if more than one building shares the same address.",
                    "maxLength": 20,
                    "type": "string"
                  },
                  "city": {
                    "description": "The name of the city in which an address is located.",
                    "maxLength": 30,
                    "minLength": 2,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "congressionalDistrict": {
                    "description": "The congressional district in which an address is located.",
                    "maxLength": 30,
                    "type": "string"
                  },
                  "countyFIPSCode": {
                    "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
                    "maxLength": 5,
                    "minLength": 3,
                    "type": "string"
                  },
                  "doNotPublishIndicator": {
                    "description": "An indication that the address should not be published.",
                    "type": "boolean"
                  },
                  "latitude": {
                    "description": "The geographic latitude of the physical address.",
                    "maxLength": 20,
                    "type": "string"
                  },
                  "localeDescriptor": {
                    "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "The geographic longitude of the physical address.",
                    "maxLength": 20,
                    "type": "string"
                  },
                  "nameOfCounty": {
                    "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
                    "maxLength": 30,
                    "type": "string"
                  },
                  "periods": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "beginDate": {
                          "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                          "format": "date",
                          "type": "string"
                        },
                        "endDate": {
                          "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
                          "format": "date",
                          "type": "string"
                        }
                      },
                      "required": [
                        "beginDate"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": false
                  },
                  "postalCode": {
                    "description": "The five or nine digit zip code or overseas postal code portion of an address.",
                    "maxLength": 17,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "stateAbbreviationDescriptor": {
                    "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
                    "type": "string"
                  },
                  "streetNumberName": {
                    "description": "The street number and street name or post office box number of an address.",
                    "maxLength": 150,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  }
                },
                "required": [
                  "streetNumberName",
                  "city",
                  "stateAbbreviationDescriptor",
                  "postalCode",
                  "addressTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "birthCity": {
              "description": "The city the student was born in.",
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            },
            "birthCountryDescriptor": {
              "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
              "type": "string"
            },
            "birthDate": {
              "description": "The month, day, and year on which an individual was born.",
              "format": "date",
              "type": "string"
            },
            "birthInternationalProvince": {
              "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
              "maxLength": 150,
              "type": "string"
            },
            "birthSexDescriptor": {
              "description": "A person's sex at birth.",
              "type": "string"
            },
            "birthStateAbbreviationDescriptor": {
              "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
              "type": "string"
            },
            "candidateIdentifier": {
              "description": "A unique alphanumeric code assigned to a candidate.",
              "maxLength": 32,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "dateEnteredUS": {
              "description": "For students born outside of the U.S., the date the student entered the U.S.",
              "format": "date",
              "type": "string"
            },
            "disabilities": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "designations": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "disabilityDesignationDescriptor": {
                          "description": "An Ed-Fi Descriptor",
                          "type": "string"
                        }
                      },
                      "required": [
                        "disabilityDesignationDescriptor"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": false
                  },
                  "disabilityDescriptor": {
                    "description": "A disability category that describes a individual's impairment.",
                    "type": "string"
                  },
                  "disabilityDeterminationSourceTypeDescriptor": {
                    "description": "The source that provided the disability determination.",
                    "type": "string"
                  },
                  "disabilityDiagnosis": {
                    "description": "A description of the disability diagnosis.",
                    "maxLength": 80,
                    "type": "string"
                  },
                  "orderOfDisability": {
                    "description": "The order by severity of individual's disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
                    "type": "integer"
                  }
                },
                "required": [
                  "disabilityDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "displacementStatus": {
              "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
              "maxLength": 30,
              "minLength": 1,
              "type": "string"
            },
            "economicDisadvantaged": {
              "description": "An indication of inadequate financial condition of an individual's family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
              "type": "boolean"
            },
            "electronicMails": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "doNotPublishIndicator": {
                    "description": "An indication that the electronic email address should not be published.",
                    "type": "boolean"
                  },
                  "electronicMailAddress": {
                    "description": "The electronic mail (e-mail) address listed for an individual or organization.",
                    "maxLength": 128,
                    "minLength": 7,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "electronicMailTypeDescriptor": {
                    "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
                    "type": "string"
                  },
                  "primaryEmailAddressIndicator": {
                    "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "electronicMailAddress",
                  "electronicMailTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "englishLanguageExamDescriptor": {
              "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
              "type": "string"
            },
            "firstGenerationStudent": {
              "description": "Indicator of whether individual is a first generation college student.",
              "type": "boolean"
            },
            "firstName": {
              "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
              "maxLength": 75,
              "pattern": "^(?!\\s*$).+",
              "type": "string"
            },
            "genderDescriptor": {
              "description": "The gender of the candidate.",
              "type": "string"
            },
            "generationCodeSuffix": {
              "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
              "maxLength": 10,
              "type": "string"
            },
            "hispanicLatinoEthnicity": {
              "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
              "type": "boolean"
            },
            "languages": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "languageDescriptor": {
                    "description": "A specification of which written or spoken communication is being used.",
                    "type": "string"
                  },
                  "uses": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "languageUseDescriptor": {
                          "description": "An Ed-Fi Descriptor",
                          "type": "string"
                        }
                      },
                      "required": [
                        "languageUseDescriptor"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": false
                  }
                },
                "required": [
                  "languageDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "lastSurname": {
              "description": "The name borne in common by members of a family.",
              "maxLength": 75,
              "pattern": "^(?!\\s*$).+",
              "type": "string"
            },
            "limitedEnglishProficiencyDescriptor": {
              "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
              "type": "string"
            },
            "maidenName": {
              "description": "The individual's maiden name.",
              "maxLength": 75,
              "type": "string"
            },
            "middleName": {
              "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
              "maxLength": 75,
              "type": "string"
            },
            "multipleBirthStatus": {
              "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
              "type": "boolean"
            },
            "otherNames": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "firstName": {
                    "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                    "maxLength": 75,
                    "pattern": "^(?!\\s*$).+",
                    "type": "string"
                  },
                  "generationCodeSuffix": {
                    "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "lastSurname": {
                    "description": "The name borne in common by members of a family.",
                    "maxLength": 75,
                    "pattern": "^(?!\\s*$).+",
                    "type": "string"
                  },
                  "middleName": {
                    "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
                    "maxLength": 75,
                    "type": "string"
                  },
                  "otherNameTypeDescriptor": {
                    "description": "The types of alternate names for an individual.",
                    "type": "string"
                  },
                  "personalTitlePrefix": {
                    "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
                    "maxLength": 30,
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastSurname",
                  "otherNameTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "personReference": {
              "additionalProperties": false,
              "properties": {
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                }
              },
              "required": [
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "personalIdentificationDocuments": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "documentExpirationDate": {
                    "description": "The day when the document  expires, if null then never expires.",
                    "format": "date",
                    "type": "string"
                  },
                  "documentTitle": {
                    "description": "The title of the document given by the issuer.",
                    "maxLength": 60,
                    "type": "string"
                  },
                  "identificationDocumentUseDescriptor": {
                    "description": "The primary function of the document used for establishing identity.",
                    "type": "string"
                  },
                  "issuerCountryDescriptor": {
                    "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
                    "type": "string"
                  },
                  "issuerDocumentIdentificationCode": {
                    "description": "The unique identifier on the issuer's identification system.",
                    "maxLength": 60,
                    "type": "string"
                  },
                  "issuerName": {
                    "description": "Name of the entity or institution that issued the document.",
                    "maxLength": 150,
                    "type": "string"
                  },
                  "personalInformationVerificationDescriptor": {
                    "description": "The category of the document relative to its purpose.",
                    "type": "string"
                  }
                },
                "required": [
                  "personalInformationVerificationDescriptor",
                  "identificationDocumentUseDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "personalTitlePrefix": {
              "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
              "maxLength": 30,
              "type": "string"
            },
            "preferredFirstName": {
              "description": "The first name the individual prefers, if different from their legal first name",
              "maxLength": 75,
              "type": "string"
            },
            "preferredLastSurname": {
              "description": "The last name the individual prefers, if different from their legal last name",
              "maxLength": 75,
              "type": "string"
            },
            "races": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "raceDescriptor": {
                    "description": "An Ed-Fi Descriptor",
                    "type": "string"
                  }
                },
                "required": [
                  "raceDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sexDescriptor": {
              "description": "The sex of the candidate.",
              "type": "string"
            },
            "telephones": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "doNotPublishIndicator": {
                    "description": "An indication that the telephone number should not be published.",
                    "type": "boolean"
                  },
                  "orderOfPriority": {
                    "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "telephoneNumber": {
                    "description": "The telephone number including the area code, and extension, if applicable.",
                    "maxLength": 24,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "telephoneNumberTypeDescriptor": {
                    "description": "The type of communication number listed for an individual or organization.",
                    "type": "string"
                  },
                  "textMessageCapabilityIndicator": {
                    "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "telephoneNumber",
                  "telephoneNumberTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "candidateIdentifier",
            "firstName",
            "lastSurname",
            "birthDate"
          ],
          "title": "TPDM.Candidate",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.disabilities[*].orderOfDisability",
          "$.telephones[*].orderOfPriority"
        ],
        "queryFieldMapping": {
          "birthCity": [
            {
              "path": "$.birthCity",
              "type": "string"
            }
          ],
          "birthCountryDescriptor": [
            {
              "path": "$.birthCountryDescriptor",
              "type": "string"
            }
          ],
          "birthDate": [
            {
              "path": "$.birthDate",
              "type": "date"
            }
          ],
          "birthInternationalProvince": [
            {
              "path": "$.birthInternationalProvince",
              "type": "string"
            }
          ],
          "birthSexDescriptor": [
            {
              "path": "$.birthSexDescriptor",
              "type": "string"
            }
          ],
          "birthStateAbbreviationDescriptor": [
            {
              "path": "$.birthStateAbbreviationDescriptor",
              "type": "string"
            }
          ],
          "candidateIdentifier": [
            {
              "path": "$.candidateIdentifier",
              "type": "string"
            }
          ],
          "dateEnteredUS": [
            {
              "path": "$.dateEnteredUS",
              "type": "date"
            }
          ],
          "displacementStatus": [
            {
              "path": "$.displacementStatus",
              "type": "string"
            }
          ],
          "economicDisadvantaged": [
            {
              "path": "$.economicDisadvantaged",
              "type": "boolean"
            }
          ],
          "englishLanguageExamDescriptor": [
            {
              "path": "$.englishLanguageExamDescriptor",
              "type": "string"
            }
          ],
          "firstGenerationStudent": [
            {
              "path": "$.firstGenerationStudent",
              "type": "boolean"
            }
          ],
          "firstName": [
            {
              "path": "$.firstName",
              "type": "string"
            }
          ],
          "genderDescriptor": [
            {
              "path": "$.genderDescriptor",
              "type": "string"
            }
          ],
          "generationCodeSuffix": [
            {
              "path": "$.generationCodeSuffix",
              "type": "string"
            }
          ],
          "hispanicLatinoEthnicity": [
            {
              "path": "$.hispanicLatinoEthnicity",
              "type": "boolean"
            }
          ],
          "lastSurname": [
            {
              "path": "$.lastSurname",
              "type": "string"
            }
          ],
          "limitedEnglishProficiencyDescriptor": [
            {
              "path": "$.limitedEnglishProficiencyDescriptor",
              "type": "string"
            }
          ],
          "maidenName": [
            {
              "path": "$.maidenName",
              "type": "string"
            }
          ],
          "middleName": [
            {
              "path": "$.middleName",
              "type": "string"
            }
          ],
          "multipleBirthStatus": [
            {
              "path": "$.multipleBirthStatus",
              "type": "boolean"
            }
          ],
          "personId": [
            {
              "path": "$.personReference.personId",
              "type": "string"
            }
          ],
          "personalTitlePrefix": [
            {
              "path": "$.personalTitlePrefix",
              "type": "string"
            }
          ],
          "preferredFirstName": [
            {
              "path": "$.preferredFirstName",
              "type": "string"
            }
          ],
          "preferredLastSurname": [
            {
              "path": "$.preferredLastSurname",
              "type": "string"
            }
          ],
          "sexDescriptor": [
            {
              "path": "$.sexDescriptor",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.personReference.sourceSystemDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "Candidate",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "certificationRouteDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "CertificationRouteDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "coteachingStyleObservedDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "CoteachingStyleObservedDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "credentialStatusDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "CredentialStatusDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "credentials": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$._ext.tpdm.boardCertificationIndicator"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "BoardCertificationIndicator": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.tpdm.boardCertificationIndicator",
            "type": "boolean"
          },
          "CertificationRouteDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.tpdm.certificationRouteDescriptor",
            "projectName": "TPDM",
            "resourceName": "CertificationRouteDescriptor",
            "type": "string"
          },
          "CertificationTitle": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.tpdm.certificationTitle",
            "type": "string"
          },
          "CredentialStatusDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$._ext.tpdm.credentialStatusDate",
            "type": "date"
          },
          "CredentialStatusDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.tpdm.credentialStatusDescriptor",
            "projectName": "TPDM",
            "resourceName": "CredentialStatusDescriptor",
            "type": "string"
          },
          "EducatorRoleDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$._ext.tpdm.educatorRoleDescriptor",
            "projectName": "TPDM",
            "resourceName": "EducatorRoleDescriptor",
            "type": "string"
          },
          "Person": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$._ext.tpdm.personReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$._ext.tpdm.personReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "StudentAcademicRecord": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$._ext.tpdm.studentAcademicRecords[*].studentAcademicRecordReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.schoolYearTypeReference.schoolYear",
                "referenceJsonPath": "$._ext.tpdm.studentAcademicRecords[*].studentAcademicRecordReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.studentReference.studentUniqueId",
                "referenceJsonPath": "$._ext.tpdm.studentAcademicRecords[*].studentAcademicRecordReference.studentUniqueId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.termDescriptor",
                "referenceJsonPath": "$._ext.tpdm.studentAcademicRecords[*].studentAcademicRecordReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "StudentAcademicRecord"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "tpdm": {
                  "additionalProperties": true,
                  "description": "tpdm extension properties collection",
                  "properties": {
                    "boardCertificationIndicator": {
                      "description": "Indicator that the credential was granted under the authority of a national Board Certification.",
                      "type": "boolean"
                    },
                    "certificationRouteDescriptor": {
                      "description": "The process, program, or pathway used to obtain certification.",
                      "type": "string"
                    },
                    "certificationTitle": {
                      "description": "The title of the certification obtained by the educator.",
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    "credentialStatusDate": {
                      "description": "The month, day, and year on which the credential status was effective.",
                      "format": "date",
                      "type": "string"
                    },
                    "credentialStatusDescriptor": {
                      "description": "The current status of the credential (e.g., active, suspended, etc.).",
                      "type": "string"
                    },
                    "educatorRoleDescriptor": {
                      "description": "The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.",
                      "type": "string"
                    },
                    "personReference": {
                      "additionalProperties": false,
                      "properties": {
                        "personId": {
                          "description": "A unique alphanumeric code assigned to a person.",
                          "maxLength": 32,
                          "pattern": "^(?!\\s)(.*\\S)$",
                          "type": "string"
                        },
                        "sourceSystemDescriptor": {
                          "description": "This descriptor defines the originating record source system for the person.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "personId",
                        "sourceSystemDescriptor"
                      ],
                      "type": "object"
                    },
                    "studentAcademicRecords": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "studentAcademicRecordReference": {
                            "additionalProperties": false,
                            "properties": {
                              "educationOrganizationId": {
                                "description": "The identifier assigned to an education organization.",
                                "type": "integer"
                              },
                              "schoolYear": {
                                "description": "A school year between 1900 and 2100",
                                "maximum": 2100,
                                "minimum": 1900,
                                "type": "integer"
                              },
                              "studentUniqueId": {
                                "description": "A unique alphanumeric code assigned to a student.",
                                "maxLength": 32,
                                "pattern": "^(?!\\s)(.*\\S)$",
                                "type": "string"
                              },
                              "termDescriptor": {
                                "description": "The term for the session during the school year.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "educationOrganizationId",
                              "schoolYear",
                              "studentUniqueId",
                              "termDescriptor"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "studentAcademicRecordReference"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "TPDM.Credential",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.tpdm.studentAcademicRecords[*].studentAcademicRecordReference.educationOrganizationId",
          "$._ext.tpdm.studentAcademicRecords[*].studentAcademicRecordReference.schoolYear"
        ],
        "resourceName": "Credential",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "educatorPreparationPrograms": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.gradeLevels[*].gradeLevelDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "AccreditationStatusDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.accreditationStatusDescriptor",
            "projectName": "TPDM",
            "resourceName": "AccreditationStatusDescriptor",
            "type": "string"
          },
          "EducationOrganization": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationId",
                "referenceJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "type": "number"
              }
            ],
            "resourceName": "EducationOrganization"
          },
          "GradeLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.gradeLevels[*].gradeLevelDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "GradeLevelDescriptor",
            "type": "string"
          },
          "ProgramId": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.programId",
            "type": "string"
          },
          "ProgramName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.programName",
            "type": "string"
          },
          "ProgramTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.programTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ProgramTypeDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.educationOrganizationReference.educationOrganizationId",
          "$.programName",
          "$.programTypeDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The Educator Preparation Program is designed to prepare students to become licensed educators.",
          "properties": {
            "accreditationStatusDescriptor": {
              "description": "The current accreditation status of the Educator Preparation Program.",
              "type": "string"
            },
            "educationOrganizationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                }
              },
              "required": [
                "educationOrganizationId"
              ],
              "type": "object"
            },
            "gradeLevels": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "gradeLevelDescriptor": {
                    "description": "An Ed-Fi Descriptor",
                    "type": "string"
                  }
                },
                "required": [
                  "gradeLevelDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "programId": {
              "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
              "maxLength": 20,
              "type": "string"
            },
            "programName": {
              "description": "The name of the Educator Preparation Program.",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "programTypeDescriptor": {
              "description": "The type of program.",
              "type": "string"
            }
          },
          "required": [
            "educationOrganizationReference",
            "programName",
            "programTypeDescriptor"
          ],
          "title": "TPDM.EducatorPreparationProgram",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.educationOrganizationReference.educationOrganizationId"
        ],
        "queryFieldMapping": {
          "accreditationStatusDescriptor": [
            {
              "path": "$.accreditationStatusDescriptor",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.educationOrganizationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "programId": [
            {
              "path": "$.programId",
              "type": "string"
            }
          ],
          "programName": [
            {
              "path": "$.programName",
              "type": "string"
            }
          ],
          "programTypeDescriptor": [
            {
              "path": "$.programTypeDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "EducatorPreparationProgram",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.educationOrganizationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "educatorRoleDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EducatorRoleDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "englishLanguageExamDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EnglishLanguageExamDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "eppProgramPathwayDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EPPProgramPathwayDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationElementRatingLevelDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationElementRatingLevelDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationElementRatings": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.elementRatingResults[*].rating",
              "$.elementRatingResults[*].ratingResultTitle"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
          "$.evaluationObjectiveRatingReference.evaluationDate"
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.elementRatingResults[*].rating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "AreaOfRefinement": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.areaOfRefinement",
            "type": "string"
          },
          "AreaOfReinforcement": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.areaOfReinforcement",
            "type": "string"
          },
          "Comments": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.comments",
            "type": "string"
          },
          "ElementRatingResult.Rating": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.elementRatingResults[*].rating",
            "type": "number"
          },
          "ElementRatingResult.RatingResultTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.elementRatingResults[*].ratingResultTitle",
            "type": "string"
          },
          "ElementRatingResult.ResultDatatypeTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": true,
            "path": "$.elementRatingResults[*].resultDatatypeTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ResultDatatypeTypeDescriptor",
            "type": "string"
          },
          "EvaluationElement": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationElementTitle",
                "referenceJsonPath": "$.evaluationElementReference.evaluationElementTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationElementReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
                "referenceJsonPath": "$.evaluationElementReference.evaluationObjectiveTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationElementReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationElementReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationElementReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationElementReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.schoolYear",
                "referenceJsonPath": "$.evaluationElementReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.termDescriptor",
                "referenceJsonPath": "$.evaluationElementReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EvaluationElement"
          },
          "EvaluationElementRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.evaluationElementRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationElementRatingLevelDescriptor",
            "type": "string"
          },
          "EvaluationObjectiveRating": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.evaluationObjectiveTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.schoolYear",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.termDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.termDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.evaluationDate",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.evaluationDate",
                "type": "date-time"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.personId",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.schoolYear",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.sourceSystemDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.sourceSystemDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationRatingReference.termDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveRatingReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EvaluationObjectiveRating"
          },
          "Feedback": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.feedback",
            "type": "string"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.evaluationTitle",
            "targetJsonPath": "$.evaluationElementReference.evaluationTitle"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.educationOrganizationId",
            "targetJsonPath": "$.evaluationElementReference.educationOrganizationId"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.evaluationObjectiveTitle",
            "targetJsonPath": "$.evaluationElementReference.evaluationObjectiveTitle"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.evaluationPeriodDescriptor",
            "targetJsonPath": "$.evaluationElementReference.evaluationPeriodDescriptor"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.performanceEvaluationTitle",
            "targetJsonPath": "$.evaluationElementReference.performanceEvaluationTitle"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.performanceEvaluationTypeDescriptor",
            "targetJsonPath": "$.evaluationElementReference.performanceEvaluationTypeDescriptor"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.schoolYear",
            "targetJsonPath": "$.evaluationElementReference.schoolYear"
          },
          {
            "sourceJsonPath": "$.evaluationObjectiveRatingReference.termDescriptor",
            "targetJsonPath": "$.evaluationElementReference.termDescriptor"
          }
        ],
        "identityJsonPaths": [
          "$.evaluationElementReference.educationOrganizationId",
          "$.evaluationElementReference.evaluationElementTitle",
          "$.evaluationElementReference.evaluationObjectiveTitle",
          "$.evaluationElementReference.evaluationPeriodDescriptor",
          "$.evaluationElementReference.evaluationTitle",
          "$.evaluationElementReference.performanceEvaluationTitle",
          "$.evaluationElementReference.performanceEvaluationTypeDescriptor",
          "$.evaluationElementReference.schoolYear",
          "$.evaluationElementReference.termDescriptor",
          "$.evaluationObjectiveRatingReference.educationOrganizationId",
          "$.evaluationObjectiveRatingReference.evaluationDate",
          "$.evaluationObjectiveRatingReference.evaluationObjectiveTitle",
          "$.evaluationObjectiveRatingReference.evaluationPeriodDescriptor",
          "$.evaluationObjectiveRatingReference.evaluationTitle",
          "$.evaluationObjectiveRatingReference.performanceEvaluationTitle",
          "$.evaluationObjectiveRatingReference.performanceEvaluationTypeDescriptor",
          "$.evaluationObjectiveRatingReference.personId",
          "$.evaluationObjectiveRatingReference.schoolYear",
          "$.evaluationObjectiveRatingReference.sourceSystemDescriptor",
          "$.evaluationObjectiveRatingReference.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The lowest-level rating for an Evaluation Element for an individual educator.",
          "properties": {
            "areaOfRefinement": {
              "description": "Area identified for person to refine or improve as part of the evaluation.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "areaOfReinforcement": {
              "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "comments": {
              "description": "Any comments about the performance evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "elementRatingResults": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "rating": {
                    "description": "The numerical summary rating or score for the evaluation.",
                    "type": "number"
                  },
                  "ratingResultTitle": {
                    "description": "The title of Rating Result.",
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "resultDatatypeTypeDescriptor": {
                    "description": "The datatype of the result.",
                    "type": "string"
                  }
                },
                "required": [
                  "ratingResultTitle",
                  "rating",
                  "resultDatatypeTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "evaluationElementRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "evaluationElementReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationElementTitle": {
                  "description": "The name or title of the evaluation element.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationObjectiveTitle": {
                  "description": "The name or title of the evaluation Objective.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationElementTitle",
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "evaluationObjectiveTitle"
              ],
              "type": "object"
            },
            "evaluationObjectiveRatingReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationDate": {
                  "description": "The date for the person's evaluation.",
                  "format": "date-time",
                  "type": "string"
                },
                "evaluationObjectiveTitle": {
                  "description": "The name or title of the evaluation Objective.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "evaluationObjectiveTitle",
                "evaluationDate",
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "feedback": {
              "description": "Feedback provided to the evaluated person.",
              "maxLength": 2048,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "evaluationObjectiveRatingReference",
            "evaluationElementReference"
          ],
          "title": "TPDM.EvaluationElementRating",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.elementRatingResults[*].rating",
          "$.evaluationElementReference.educationOrganizationId",
          "$.evaluationElementReference.schoolYear",
          "$.evaluationObjectiveRatingReference.educationOrganizationId",
          "$.evaluationObjectiveRatingReference.schoolYear"
        ],
        "queryFieldMapping": {
          "areaOfRefinement": [
            {
              "path": "$.areaOfRefinement",
              "type": "string"
            }
          ],
          "areaOfReinforcement": [
            {
              "path": "$.areaOfReinforcement",
              "type": "string"
            }
          ],
          "comments": [
            {
              "path": "$.comments",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.evaluationElementReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationDate": [
            {
              "path": "$.evaluationObjectiveRatingReference.evaluationDate",
              "type": "date-time"
            }
          ],
          "evaluationElementRatingLevelDescriptor": [
            {
              "path": "$.evaluationElementRatingLevelDescriptor",
              "type": "string"
            }
          ],
          "evaluationElementTitle": [
            {
              "path": "$.evaluationElementReference.evaluationElementTitle",
              "type": "string"
            }
          ],
          "evaluationObjectiveTitle": [
            {
              "path": "$.evaluationElementReference.evaluationObjectiveTitle",
              "type": "string"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationElementReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationElementReference.evaluationTitle",
              "type": "string"
            }
          ],
          "feedback": [
            {
              "path": "$.feedback",
              "type": "string"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.evaluationElementReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.evaluationElementReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "personId": [
            {
              "path": "$.evaluationObjectiveRatingReference.personId",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.evaluationElementReference.schoolYear",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.evaluationObjectiveRatingReference.sourceSystemDescriptor",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.evaluationElementReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationElementRating",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.evaluationObjectiveRatingReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            },
            {
              "jsonPath": "$.evaluationElementReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationElements": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.ratingLevels[*].evaluationRatingLevelDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.maxRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].maxRating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "ElementRatingLevel.EvaluationRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.ratingLevels[*].evaluationRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationRatingLevelDescriptor",
            "type": "string"
          },
          "ElementRatingLevel.MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].maxRating",
            "type": "number"
          },
          "ElementRatingLevel.MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].minRating",
            "type": "number"
          },
          "EvaluationElementTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.evaluationElementTitle",
            "type": "string"
          },
          "EvaluationObjective": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationObjectiveTitle",
                "referenceJsonPath": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.schoolYear",
                "referenceJsonPath": "$.evaluationObjectiveReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.termDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EvaluationObjective"
          },
          "EvaluationTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.evaluationTypeDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationTypeDescriptor",
            "type": "string"
          },
          "MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.maxRating",
            "type": "number"
          },
          "MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.minRating",
            "type": "number"
          },
          "SortOrder": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.sortOrder",
            "type": "number"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.evaluationElementTitle",
          "$.evaluationObjectiveReference.educationOrganizationId",
          "$.evaluationObjectiveReference.evaluationObjectiveTitle",
          "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
          "$.evaluationObjectiveReference.evaluationTitle",
          "$.evaluationObjectiveReference.performanceEvaluationTitle",
          "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
          "$.evaluationObjectiveReference.schoolYear",
          "$.evaluationObjectiveReference.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.",
          "properties": {
            "evaluationElementTitle": {
              "description": "The name or title of the evaluation element.",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "evaluationObjectiveReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationObjectiveTitle": {
                  "description": "The name or title of the evaluation Objective.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "evaluationObjectiveTitle"
              ],
              "type": "object"
            },
            "evaluationTypeDescriptor": {
              "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum summary numerical rating or score for the evaluation element.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
              "type": "number"
            },
            "ratingLevels": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "evaluationRatingLevelDescriptor": {
                    "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
                    "type": "string"
                  },
                  "maxRating": {
                    "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  },
                  "minRating": {
                    "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  }
                },
                "required": [
                  "evaluationRatingLevelDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sortOrder": {
              "description": "The sort order of this Evaluation Element.",
              "type": "integer"
            }
          },
          "required": [
            "evaluationObjectiveReference",
            "evaluationElementTitle"
          ],
          "title": "TPDM.EvaluationElement",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.evaluationObjectiveReference.educationOrganizationId",
          "$.evaluationObjectiveReference.schoolYear",
          "$.maxRating",
          "$.minRating",
          "$.ratingLevels[*].maxRating",
          "$.ratingLevels[*].minRating",
          "$.sortOrder"
        ],
        "queryFieldMapping": {
          "educationOrganizationId": [
            {
              "path": "$.evaluationObjectiveReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationElementTitle": [
            {
              "path": "$.evaluationElementTitle",
              "type": "string"
            }
          ],
          "evaluationObjectiveTitle": [
            {
              "path": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
              "type": "string"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationObjectiveReference.evaluationTitle",
              "type": "string"
            }
          ],
          "evaluationTypeDescriptor": [
            {
              "path": "$.evaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "maxRating": [
            {
              "path": "$.maxRating",
              "type": "number"
            }
          ],
          "minRating": [
            {
              "path": "$.minRating",
              "type": "number"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.evaluationObjectiveReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.evaluationObjectiveReference.schoolYear",
              "type": "string"
            }
          ],
          "sortOrder": [
            {
              "path": "$.sortOrder",
              "type": "number"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.evaluationObjectiveReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationElement",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationObjectiveRatings": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.objectiveRatingResults[*].rating",
              "$.objectiveRatingResults[*].ratingResultTitle"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
          "$.evaluationRatingReference.evaluationDate"
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.objectiveRatingResults[*].rating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "Comments": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.comments",
            "type": "string"
          },
          "EvaluationObjective": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationObjectiveTitle",
                "referenceJsonPath": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.schoolYear",
                "referenceJsonPath": "$.evaluationObjectiveReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.termDescriptor",
                "referenceJsonPath": "$.evaluationObjectiveReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EvaluationObjective"
          },
          "EvaluationRating": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationDate",
                "referenceJsonPath": "$.evaluationRatingReference.evaluationDate",
                "type": "date-time"
              },
              {
                "identityJsonPath": "$.evaluationReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationRatingReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationRatingReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationRatingReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.schoolYear",
                "referenceJsonPath": "$.evaluationRatingReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationReference.termDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.termDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationRatingReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationRatingReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.personId",
                "referenceJsonPath": "$.evaluationRatingReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.schoolYear",
                "referenceJsonPath": "$.evaluationRatingReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.sourceSystemDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.sourceSystemDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationRatingReference.termDescriptor",
                "referenceJsonPath": "$.evaluationRatingReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EvaluationRating"
          },
          "ObjectiveRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.objectiveRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "ObjectiveRatingLevelDescriptor",
            "type": "string"
          },
          "ObjectiveRatingResult.Rating": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.objectiveRatingResults[*].rating",
            "type": "number"
          },
          "ObjectiveRatingResult.RatingResultTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.objectiveRatingResults[*].ratingResultTitle",
            "type": "string"
          },
          "ObjectiveRatingResult.ResultDatatypeTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": true,
            "path": "$.objectiveRatingResults[*].resultDatatypeTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ResultDatatypeTypeDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$.evaluationRatingReference.evaluationTitle",
            "targetJsonPath": "$.evaluationObjectiveReference.evaluationTitle"
          },
          {
            "sourceJsonPath": "$.evaluationRatingReference.educationOrganizationId",
            "targetJsonPath": "$.evaluationObjectiveReference.educationOrganizationId"
          },
          {
            "sourceJsonPath": "$.evaluationRatingReference.evaluationPeriodDescriptor",
            "targetJsonPath": "$.evaluationObjectiveReference.evaluationPeriodDescriptor"
          },
          {
            "sourceJsonPath": "$.evaluationRatingReference.performanceEvaluationTitle",
            "targetJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTitle"
          },
          {
            "sourceJsonPath": "$.evaluationRatingReference.performanceEvaluationTypeDescriptor",
            "targetJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor"
          },
          {
            "sourceJsonPath": "$.evaluationRatingReference.schoolYear",
            "targetJsonPath": "$.evaluationObjectiveReference.schoolYear"
          },
          {
            "sourceJsonPath": "$.evaluationRatingReference.termDescriptor",
            "targetJsonPath": "$.evaluationObjectiveReference.termDescriptor"
          }
        ],
        "identityJsonPaths": [
          "$.evaluationObjectiveReference.educationOrganizationId",
          "$.evaluationObjectiveReference.evaluationObjectiveTitle",
          "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
          "$.evaluationObjectiveReference.evaluationTitle",
          "$.evaluationObjectiveReference.performanceEvaluationTitle",
          "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
          "$.evaluationObjectiveReference.schoolYear",
          "$.evaluationObjectiveReference.termDescriptor",
          "$.evaluationRatingReference.educationOrganizationId",
          "$.evaluationRatingReference.evaluationDate",
          "$.evaluationRatingReference.evaluationPeriodDescriptor",
          "$.evaluationRatingReference.evaluationTitle",
          "$.evaluationRatingReference.performanceEvaluationTitle",
          "$.evaluationRatingReference.performanceEvaluationTypeDescriptor",
          "$.evaluationRatingReference.personId",
          "$.evaluationRatingReference.schoolYear",
          "$.evaluationRatingReference.sourceSystemDescriptor",
          "$.evaluationRatingReference.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The rating for the component Evaluation Objective for an individual educator.",
          "properties": {
            "comments": {
              "description": "Any comments about the performance evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "evaluationObjectiveReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationObjectiveTitle": {
                  "description": "The name or title of the evaluation Objective.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "evaluationObjectiveTitle"
              ],
              "type": "object"
            },
            "evaluationRatingReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationDate": {
                  "description": "The date for the person's evaluation.",
                  "format": "date-time",
                  "type": "string"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "evaluationDate",
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "objectiveRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "objectiveRatingResults": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "rating": {
                    "description": "The numerical summary rating or score for the evaluation.",
                    "type": "number"
                  },
                  "ratingResultTitle": {
                    "description": "The title of Rating Result.",
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "resultDatatypeTypeDescriptor": {
                    "description": "The datatype of the result.",
                    "type": "string"
                  }
                },
                "required": [
                  "ratingResultTitle",
                  "rating",
                  "resultDatatypeTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "evaluationRatingReference",
            "evaluationObjectiveReference"
          ],
          "title": "TPDM.EvaluationObjectiveRating",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.evaluationObjectiveReference.educationOrganizationId",
          "$.evaluationObjectiveReference.schoolYear",
          "$.evaluationRatingReference.educationOrganizationId",
          "$.evaluationRatingReference.schoolYear",
          "$.objectiveRatingResults[*].rating"
        ],
        "queryFieldMapping": {
          "comments": [
            {
              "path": "$.comments",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.evaluationObjectiveReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationDate": [
            {
              "path": "$.evaluationRatingReference.evaluationDate",
              "type": "date-time"
            }
          ],
          "evaluationObjectiveTitle": [
            {
              "path": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
              "type": "string"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationObjectiveReference.evaluationTitle",
              "type": "string"
            }
          ],
          "objectiveRatingLevelDescriptor": [
            {
              "path": "$.objectiveRatingLevelDescriptor",
              "type": "string"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.evaluationObjectiveReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "personId": [
            {
              "path": "$.evaluationRatingReference.personId",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.evaluationObjectiveReference.schoolYear",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.evaluationRatingReference.sourceSystemDescriptor",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.evaluationObjectiveReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationObjectiveRating",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.evaluationRatingReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            },
            {
              "jsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationObjectives": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.ratingLevels[*].evaluationRatingLevelDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.maxRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].maxRating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "Evaluation": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationTitle",
                "referenceJsonPath": "$.evaluationReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.schoolYear",
                "referenceJsonPath": "$.evaluationReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.termDescriptor",
                "referenceJsonPath": "$.evaluationReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Evaluation"
          },
          "EvaluationObjectiveDescription": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.evaluationObjectiveDescription",
            "type": "string"
          },
          "EvaluationObjectiveTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.evaluationObjectiveTitle",
            "type": "string"
          },
          "EvaluationTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.evaluationTypeDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationTypeDescriptor",
            "type": "string"
          },
          "MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.maxRating",
            "type": "number"
          },
          "MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.minRating",
            "type": "number"
          },
          "ObjectiveRatingLevel.EvaluationRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.ratingLevels[*].evaluationRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationRatingLevelDescriptor",
            "type": "string"
          },
          "ObjectiveRatingLevel.MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].maxRating",
            "type": "number"
          },
          "ObjectiveRatingLevel.MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].minRating",
            "type": "number"
          },
          "SortOrder": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.sortOrder",
            "type": "number"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.evaluationObjectiveTitle",
          "$.evaluationReference.educationOrganizationId",
          "$.evaluationReference.evaluationPeriodDescriptor",
          "$.evaluationReference.evaluationTitle",
          "$.evaluationReference.performanceEvaluationTitle",
          "$.evaluationReference.performanceEvaluationTypeDescriptor",
          "$.evaluationReference.schoolYear",
          "$.evaluationReference.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.",
          "properties": {
            "evaluationObjectiveDescription": {
              "description": "The long description of the Evaluation Objective.",
              "maxLength": 255,
              "type": "string"
            },
            "evaluationObjectiveTitle": {
              "description": "The name or title of the evaluation Objective.",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "evaluationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor"
              ],
              "type": "object"
            },
            "evaluationTypeDescriptor": {
              "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
              "type": "string"
            },
            "maxRating": {
              "description": "The maximum summary numerical rating or score for the evaluation Objective.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
              "type": "number"
            },
            "ratingLevels": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "evaluationRatingLevelDescriptor": {
                    "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
                    "type": "string"
                  },
                  "maxRating": {
                    "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  },
                  "minRating": {
                    "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  }
                },
                "required": [
                  "evaluationRatingLevelDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sortOrder": {
              "description": "The sort order of this Evaluation Objective.",
              "type": "integer"
            }
          },
          "required": [
            "evaluationReference",
            "evaluationObjectiveTitle"
          ],
          "title": "TPDM.EvaluationObjective",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.evaluationReference.educationOrganizationId",
          "$.evaluationReference.schoolYear",
          "$.maxRating",
          "$.minRating",
          "$.ratingLevels[*].maxRating",
          "$.ratingLevels[*].minRating",
          "$.sortOrder"
        ],
        "queryFieldMapping": {
          "educationOrganizationId": [
            {
              "path": "$.evaluationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationObjectiveDescription": [
            {
              "path": "$.evaluationObjectiveDescription",
              "type": "string"
            }
          ],
          "evaluationObjectiveTitle": [
            {
              "path": "$.evaluationObjectiveTitle",
              "type": "string"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationReference.evaluationTitle",
              "type": "string"
            }
          ],
          "evaluationTypeDescriptor": [
            {
              "path": "$.evaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "maxRating": [
            {
              "path": "$.maxRating",
              "type": "number"
            }
          ],
          "minRating": [
            {
              "path": "$.minRating",
              "type": "number"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.evaluationReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.evaluationReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.evaluationReference.schoolYear",
              "type": "string"
            }
          ],
          "sortOrder": [
            {
              "path": "$.sortOrder",
              "type": "number"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.evaluationReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationObjective",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.evaluationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationPeriodDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationPeriodDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationRatingLevelDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationRatingLevelDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationRatingStatusDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationRatingStatusDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationRatings": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.results[*].rating",
              "$.results[*].ratingResultTitle"
            ]
          },
          {
            "paths": [
              "$.reviewers[*].firstName",
              "$.reviewers[*].lastSurname"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
          "$.evaluationDate"
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.results[*].rating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "ActualDuration": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.actualDuration",
            "type": "number"
          },
          "Comments": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.comments",
            "type": "string"
          },
          "Evaluation": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationTitle",
                "referenceJsonPath": "$.evaluationReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.schoolYear",
                "referenceJsonPath": "$.evaluationReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.termDescriptor",
                "referenceJsonPath": "$.evaluationReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Evaluation"
          },
          "EvaluationDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.evaluationDate",
            "type": "date-time"
          },
          "EvaluationRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.evaluationRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationRatingLevelDescriptor",
            "type": "string"
          },
          "EvaluationRatingResult.Rating": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.results[*].rating",
            "type": "number"
          },
          "EvaluationRatingResult.RatingResultTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.results[*].ratingResultTitle",
            "type": "string"
          },
          "EvaluationRatingResult.ResultDatatypeTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": true,
            "path": "$.results[*].resultDatatypeTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ResultDatatypeTypeDescriptor",
            "type": "string"
          },
          "EvaluationRatingStatusDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.evaluationRatingStatusDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationRatingStatusDescriptor",
            "type": "string"
          },
          "PerformanceEvaluationRating": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.performanceEvaluationReference.educationOrganizationId",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.schoolYear",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationReference.termDescriptor",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.termDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.personReference.personId",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.personReference.sourceSystemDescriptor",
                "referenceJsonPath": "$.performanceEvaluationRatingReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "PerformanceEvaluationRating"
          },
          "Reviewer.FirstName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.reviewers[*].firstName",
            "type": "string"
          },
          "Reviewer.LastSurname": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.reviewers[*].lastSurname",
            "type": "string"
          },
          "Reviewer.ReceivedTraining.InterRaterReliabilityScore": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.reviewers[*].receivedTraining.interRaterReliabilityScore",
            "type": "number"
          },
          "Reviewer.ReceivedTraining.ReceivedTrainingDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.reviewers[*].receivedTraining.receivedTrainingDate",
            "type": "date"
          },
          "Reviewer.ReviewerPerson": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$.reviewers[*].reviewerPersonReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$.reviewers[*].reviewerPersonReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "Section": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.courseOfferingReference.localCourseCode",
                "referenceJsonPath": "$.sectionReference.localCourseCode",
                "type": "string"
              },
              {
                "identityJsonPath": "$.courseOfferingReference.schoolId",
                "referenceJsonPath": "$.sectionReference.schoolId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.courseOfferingReference.schoolYear",
                "referenceJsonPath": "$.sectionReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.courseOfferingReference.sessionName",
                "referenceJsonPath": "$.sectionReference.sessionName",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sectionIdentifier",
                "referenceJsonPath": "$.sectionReference.sectionIdentifier",
                "type": "string"
              }
            ],
            "resourceName": "Section"
          }
        },
        "equalityConstraints": [
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.performanceEvaluationTypeDescriptor",
            "targetJsonPath": "$.evaluationReference.performanceEvaluationTypeDescriptor"
          },
          {
            "sourceJsonPath": "$.sectionReference.schoolYear",
            "targetJsonPath": "$.evaluationReference.schoolYear"
          },
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.educationOrganizationId",
            "targetJsonPath": "$.evaluationReference.educationOrganizationId"
          },
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.evaluationPeriodDescriptor",
            "targetJsonPath": "$.evaluationReference.evaluationPeriodDescriptor"
          },
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.performanceEvaluationTitle",
            "targetJsonPath": "$.evaluationReference.performanceEvaluationTitle"
          },
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.schoolYear",
            "targetJsonPath": "$.evaluationReference.schoolYear"
          },
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.termDescriptor",
            "targetJsonPath": "$.evaluationReference.termDescriptor"
          },
          {
            "sourceJsonPath": "$.performanceEvaluationRatingReference.schoolYear",
            "targetJsonPath": "$.sectionReference.schoolYear"
          }
        ],
        "identityJsonPaths": [
          "$.evaluationDate",
          "$.evaluationReference.educationOrganizationId",
          "$.evaluationReference.evaluationPeriodDescriptor",
          "$.evaluationReference.evaluationTitle",
          "$.evaluationReference.performanceEvaluationTitle",
          "$.evaluationReference.performanceEvaluationTypeDescriptor",
          "$.evaluationReference.schoolYear",
          "$.evaluationReference.termDescriptor",
          "$.performanceEvaluationRatingReference.educationOrganizationId",
          "$.performanceEvaluationRatingReference.evaluationPeriodDescriptor",
          "$.performanceEvaluationRatingReference.performanceEvaluationTitle",
          "$.performanceEvaluationRatingReference.performanceEvaluationTypeDescriptor",
          "$.performanceEvaluationRatingReference.personId",
          "$.performanceEvaluationRatingReference.schoolYear",
          "$.performanceEvaluationRatingReference.sourceSystemDescriptor",
          "$.performanceEvaluationRatingReference.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The summary weighting for the Evaluation instrument for an individual educator.",
          "properties": {
            "actualDuration": {
              "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
              "minimum": 1,
              "type": "integer"
            },
            "comments": {
              "description": "Any comments about the evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "evaluationDate": {
              "description": "The date for the person's evaluation.",
              "format": "date-time",
              "type": "string"
            },
            "evaluationRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "evaluationRatingStatusDescriptor": {
              "description": "The Status of the poerformance evaluation.",
              "type": "string"
            },
            "evaluationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor"
              ],
              "type": "object"
            },
            "performanceEvaluationRatingReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "results": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "rating": {
                    "description": "The numerical summary rating or score for the evaluation.",
                    "type": "number"
                  },
                  "ratingResultTitle": {
                    "description": "The title of Rating Result.",
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "resultDatatypeTypeDescriptor": {
                    "description": "The datatype of the result.",
                    "type": "string"
                  }
                },
                "required": [
                  "ratingResultTitle",
                  "rating",
                  "resultDatatypeTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "reviewers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "firstName": {
                    "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                    "maxLength": 75,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "lastSurname": {
                    "description": "The name borne in common by members of a family.",
                    "maxLength": 75,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "receivedTraining": {
                    "additionalProperties": false,
                    "properties": {
                      "interRaterReliabilityScore": {
                        "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
                        "type": "integer"
                      },
                      "receivedTrainingDate": {
                        "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
                        "format": "date",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "reviewerPersonReference": {
                    "additionalProperties": false,
                    "properties": {
                      "personId": {
                        "description": "A unique alphanumeric code assigned to a person.",
                        "maxLength": 32,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "sourceSystemDescriptor": {
                        "description": "This descriptor defines the originating record source system for the person.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "personId",
                      "sourceSystemDescriptor"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "firstName",
                  "lastSurname"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "sectionReference": {
              "additionalProperties": false,
              "properties": {
                "localCourseCode": {
                  "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "schoolId": {
                  "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
                  "type": "integer"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "sectionIdentifier": {
                  "description": "The local identifier assigned to a section.",
                  "maxLength": 255,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "sessionName": {
                  "description": "The identifier for the calendar for the academic session.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "localCourseCode",
                "schoolId",
                "schoolYear",
                "sessionName",
                "sectionIdentifier"
              ],
              "type": "object"
            }
          },
          "required": [
            "performanceEvaluationRatingReference",
            "evaluationReference",
            "evaluationDate"
          ],
          "title": "TPDM.EvaluationRating",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.actualDuration",
          "$.evaluationReference.educationOrganizationId",
          "$.evaluationReference.schoolYear",
          "$.performanceEvaluationRatingReference.educationOrganizationId",
          "$.performanceEvaluationRatingReference.schoolYear",
          "$.results[*].rating",
          "$.reviewers[*].receivedTraining.interRaterReliabilityScore",
          "$.sectionReference.schoolId",
          "$.sectionReference.schoolYear"
        ],
        "queryFieldMapping": {
          "actualDuration": [
            {
              "path": "$.actualDuration",
              "type": "number"
            }
          ],
          "comments": [
            {
              "path": "$.comments",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.evaluationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationDate": [
            {
              "path": "$.evaluationDate",
              "type": "date-time"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationRatingLevelDescriptor": [
            {
              "path": "$.evaluationRatingLevelDescriptor",
              "type": "string"
            }
          ],
          "evaluationRatingStatusDescriptor": [
            {
              "path": "$.evaluationRatingStatusDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationReference.evaluationTitle",
              "type": "string"
            }
          ],
          "localCourseCode": [
            {
              "path": "$.sectionReference.localCourseCode",
              "type": "string"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.evaluationReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.evaluationReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "personId": [
            {
              "path": "$.performanceEvaluationRatingReference.personId",
              "type": "string"
            }
          ],
          "schoolId": [
            {
              "path": "$.sectionReference.schoolId",
              "type": "number"
            }
          ],
          "schoolYear": [
            {
              "path": "$.sectionReference.schoolYear",
              "type": "string"
            }
          ],
          "sectionIdentifier": [
            {
              "path": "$.sectionReference.sectionIdentifier",
              "type": "string"
            }
          ],
          "sessionName": [
            {
              "path": "$.sectionReference.sessionName",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.performanceEvaluationRatingReference.sourceSystemDescriptor",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.evaluationReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationRating",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.performanceEvaluationRatingReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            },
            {
              "jsonPath": "$.evaluationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluationTypeDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "EvaluationTypeDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "evaluations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.ratingLevels[*].evaluationRatingLevelDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.maxRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].maxRating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "EvaluationDescription": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.evaluationDescription",
            "type": "string"
          },
          "EvaluationRatingLevel.EvaluationRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.ratingLevels[*].evaluationRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationRatingLevelDescriptor",
            "type": "string"
          },
          "EvaluationRatingLevel.MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].maxRating",
            "type": "number"
          },
          "EvaluationRatingLevel.MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].minRating",
            "type": "number"
          },
          "EvaluationTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.evaluationTitle",
            "type": "string"
          },
          "EvaluationTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.evaluationTypeDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationTypeDescriptor",
            "type": "string"
          },
          "InterRaterReliabilityScore": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.interRaterReliabilityScore",
            "type": "number"
          },
          "MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.maxRating",
            "type": "number"
          },
          "MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.minRating",
            "type": "number"
          },
          "PerformanceEvaluation": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.performanceEvaluationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationTitle",
                "referenceJsonPath": "$.performanceEvaluationReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.schoolYearTypeReference.schoolYear",
                "referenceJsonPath": "$.performanceEvaluationReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.termDescriptor",
                "referenceJsonPath": "$.performanceEvaluationReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "PerformanceEvaluation"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.evaluationTitle",
          "$.performanceEvaluationReference.educationOrganizationId",
          "$.performanceEvaluationReference.evaluationPeriodDescriptor",
          "$.performanceEvaluationReference.performanceEvaluationTitle",
          "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
          "$.performanceEvaluationReference.schoolYear",
          "$.performanceEvaluationReference.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.",
          "properties": {
            "evaluationDescription": {
              "description": "The long description of the Evaluation.",
              "maxLength": 255,
              "type": "string"
            },
            "evaluationTitle": {
              "description": "The name or title of the evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "evaluationTypeDescriptor": {
              "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
              "type": "string"
            },
            "interRaterReliabilityScore": {
              "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
              "type": "integer"
            },
            "maxRating": {
              "description": "The maximum summary numerical rating or score for the evaluation.",
              "type": "number"
            },
            "minRating": {
              "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
              "type": "number"
            },
            "performanceEvaluationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor"
              ],
              "type": "object"
            },
            "ratingLevels": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "evaluationRatingLevelDescriptor": {
                    "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
                    "type": "string"
                  },
                  "maxRating": {
                    "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  },
                  "minRating": {
                    "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  }
                },
                "required": [
                  "evaluationRatingLevelDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            }
          },
          "required": [
            "performanceEvaluationReference",
            "evaluationTitle"
          ],
          "title": "TPDM.Evaluation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.interRaterReliabilityScore",
          "$.maxRating",
          "$.minRating",
          "$.performanceEvaluationReference.educationOrganizationId",
          "$.performanceEvaluationReference.schoolYear",
          "$.ratingLevels[*].maxRating",
          "$.ratingLevels[*].minRating"
        ],
        "queryFieldMapping": {
          "educationOrganizationId": [
            {
              "path": "$.performanceEvaluationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationDescription": [
            {
              "path": "$.evaluationDescription",
              "type": "string"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationTitle",
              "type": "string"
            }
          ],
          "evaluationTypeDescriptor": [
            {
              "path": "$.evaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "interRaterReliabilityScore": [
            {
              "path": "$.interRaterReliabilityScore",
              "type": "number"
            }
          ],
          "maxRating": [
            {
              "path": "$.maxRating",
              "type": "number"
            }
          ],
          "minRating": [
            {
              "path": "$.minRating",
              "type": "number"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.performanceEvaluationReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.performanceEvaluationReference.schoolYear",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.performanceEvaluationReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "Evaluation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.performanceEvaluationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "financialAids": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$.pellGrantRecipient"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 4,
            "path": "$.aidAmount",
            "totalDigits": 19
          }
        ],
        "documentPathsMapping": {
          "AidAmount": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.aidAmount",
            "type": "number"
          },
          "AidConditionDescription": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.aidConditionDescription",
            "type": "string"
          },
          "AidTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.aidTypeDescriptor",
            "projectName": "TPDM",
            "resourceName": "AidTypeDescriptor",
            "type": "string"
          },
          "BeginDate": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.beginDate",
            "type": "date"
          },
          "EndDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.endDate",
            "type": "date"
          },
          "PellGrantRecipient": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.pellGrantRecipient",
            "type": "boolean"
          },
          "Student": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.studentUniqueId",
                "referenceJsonPath": "$.studentReference.studentUniqueId",
                "type": "string"
              }
            ],
            "resourceName": "Student"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.aidTypeDescriptor",
          "$.beginDate",
          "$.studentReference.studentUniqueId"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This entity represents the financial aid a person is awarded.",
          "properties": {
            "aidAmount": {
              "description": "The amount of financial aid awarded to a person for the term/year.",
              "type": "number"
            },
            "aidConditionDescription": {
              "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
              "maxLength": 1024,
              "type": "string"
            },
            "aidTypeDescriptor": {
              "description": "The classification of financial aid awarded to a person for the academic term/year.",
              "type": "string"
            },
            "beginDate": {
              "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "endDate": {
              "description": "The date the award was removed.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
              "format": "date",
              "type": "string"
            },
            "pellGrantRecipient": {
              "description": "Indicates a person who receives Pell Grant aid.",
              "type": "boolean"
            },
            "studentReference": {
              "additionalProperties": false,
              "properties": {
                "studentUniqueId": {
                  "description": "A unique alphanumeric code assigned to a student.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "studentUniqueId"
              ],
              "type": "object"
            }
          },
          "required": [
            "studentReference",
            "beginDate",
            "aidTypeDescriptor"
          ],
          "title": "TPDM.FinancialAid",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.aidAmount"
        ],
        "queryFieldMapping": {
          "aidAmount": [
            {
              "path": "$.aidAmount",
              "type": "number"
            }
          ],
          "aidConditionDescription": [
            {
              "path": "$.aidConditionDescription",
              "type": "string"
            }
          ],
          "aidTypeDescriptor": [
            {
              "path": "$.aidTypeDescriptor",
              "type": "string"
            }
          ],
          "beginDate": [
            {
              "path": "$.beginDate",
              "type": "date"
            }
          ],
          "endDate": [
            {
              "path": "$.endDate",
              "type": "date"
            }
          ],
          "pellGrantRecipient": [
            {
              "path": "$.pellGrantRecipient",
              "type": "boolean"
            }
          ],
          "studentUniqueId": [
            {
              "path": "$.studentReference.studentUniqueId",
              "type": "string"
            }
          ]
        },
        "resourceName": "FinancialAid",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
            "$.studentReference.studentUniqueId"
          ]
        }
      },
      "genderDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "GenderDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "objectiveRatingLevelDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "ObjectiveRatingLevelDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "performanceEvaluationRatingLevelDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "PerformanceEvaluationRatingLevelDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "performanceEvaluationRatings": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.results[*].rating",
              "$.results[*].ratingResultTitle"
            ]
          },
          {
            "paths": [
              "$.reviewers[*].firstName",
              "$.reviewers[*].lastSurname"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
          "$.announced"
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.results[*].rating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "ActualDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.actualDate",
            "type": "date"
          },
          "ActualDuration": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.actualDuration",
            "type": "number"
          },
          "ActualTime": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.actualTime",
            "type": "time"
          },
          "Announced": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.announced",
            "type": "boolean"
          },
          "Comments": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.comments",
            "type": "string"
          },
          "CoteachingStyleObservedDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.coteachingStyleObservedDescriptor",
            "projectName": "TPDM",
            "resourceName": "CoteachingStyleObservedDescriptor",
            "type": "string"
          },
          "PerformanceEvaluation": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "referenceJsonPath": "$.performanceEvaluationReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationTitle",
                "referenceJsonPath": "$.performanceEvaluationReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.schoolYearTypeReference.schoolYear",
                "referenceJsonPath": "$.performanceEvaluationReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.termDescriptor",
                "referenceJsonPath": "$.performanceEvaluationReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "PerformanceEvaluation"
          },
          "PerformanceEvaluationRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.performanceEvaluationRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "PerformanceEvaluationRatingLevelDescriptor",
            "type": "string"
          },
          "PerformanceEvaluationRatingResult.Rating": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.results[*].rating",
            "type": "number"
          },
          "PerformanceEvaluationRatingResult.RatingResultTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.results[*].ratingResultTitle",
            "type": "string"
          },
          "PerformanceEvaluationRatingResult.ResultDatatypeTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": true,
            "path": "$.results[*].resultDatatypeTypeDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "ResultDatatypeTypeDescriptor",
            "type": "string"
          },
          "Person": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$.personReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$.personReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "Reviewer.FirstName": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.reviewers[*].firstName",
            "type": "string"
          },
          "Reviewer.LastSurname": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.reviewers[*].lastSurname",
            "type": "string"
          },
          "Reviewer.ReceivedTraining.InterRaterReliabilityScore": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.reviewers[*].receivedTraining.interRaterReliabilityScore",
            "type": "number"
          },
          "Reviewer.ReceivedTraining.ReceivedTrainingDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.reviewers[*].receivedTraining.receivedTrainingDate",
            "type": "date"
          },
          "Reviewer.ReviewerPerson": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$.reviewers[*].reviewerPersonReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$.reviewers[*].reviewerPersonReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "ScheduleDate": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.scheduleDate",
            "type": "date"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.performanceEvaluationReference.educationOrganizationId",
          "$.performanceEvaluationReference.evaluationPeriodDescriptor",
          "$.performanceEvaluationReference.performanceEvaluationTitle",
          "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
          "$.performanceEvaluationReference.schoolYear",
          "$.performanceEvaluationReference.termDescriptor",
          "$.personReference.personId",
          "$.personReference.sourceSystemDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.",
          "properties": {
            "actualDate": {
              "description": "The month, day, and year on which the performance evaluation was conducted.",
              "format": "date",
              "type": "string"
            },
            "actualDuration": {
              "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
              "minimum": 1,
              "type": "integer"
            },
            "actualTime": {
              "description": "An indication of the the time at which the performance evaluation was conducted.",
              "format": "time",
              "type": "string"
            },
            "announced": {
              "description": "An indicator of whether the performance evaluation was announced or not.",
              "type": "boolean"
            },
            "comments": {
              "description": "Any comments about the performance evaluation to be captured.",
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            },
            "coteachingStyleObservedDescriptor": {
              "description": "A type of co-teaching observed as part of the performance evaluation.",
              "type": "string"
            },
            "performanceEvaluationRatingLevelDescriptor": {
              "description": "The rating level achieved based upon the rating or score.",
              "type": "string"
            },
            "performanceEvaluationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor"
              ],
              "type": "object"
            },
            "personReference": {
              "additionalProperties": false,
              "properties": {
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                }
              },
              "required": [
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "results": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "rating": {
                    "description": "The numerical summary rating or score for the evaluation.",
                    "type": "number"
                  },
                  "ratingResultTitle": {
                    "description": "The title of Rating Result.",
                    "maxLength": 50,
                    "minLength": 1,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "resultDatatypeTypeDescriptor": {
                    "description": "The datatype of the result.",
                    "type": "string"
                  }
                },
                "required": [
                  "ratingResultTitle",
                  "rating",
                  "resultDatatypeTypeDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "reviewers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "firstName": {
                    "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
                    "maxLength": 75,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "lastSurname": {
                    "description": "The name borne in common by members of a family.",
                    "maxLength": 75,
                    "pattern": "^(?!\\s)(.*\\S)$",
                    "type": "string"
                  },
                  "receivedTraining": {
                    "additionalProperties": false,
                    "properties": {
                      "interRaterReliabilityScore": {
                        "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
                        "type": "integer"
                      },
                      "receivedTrainingDate": {
                        "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
                        "format": "date",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "reviewerPersonReference": {
                    "additionalProperties": false,
                    "properties": {
                      "personId": {
                        "description": "A unique alphanumeric code assigned to a person.",
                        "maxLength": 32,
                        "pattern": "^(?!\\s)(.*\\S)$",
                        "type": "string"
                      },
                      "sourceSystemDescriptor": {
                        "description": "This descriptor defines the originating record source system for the person.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "personId",
                      "sourceSystemDescriptor"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "firstName",
                  "lastSurname"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "scheduleDate": {
              "description": "The month, day, and year on which the performance evaluation was scheduled.",
              "format": "date",
              "type": "string"
            }
          },
          "required": [
            "personReference",
            "performanceEvaluationReference",
            "actualDate"
          ],
          "title": "TPDM.PerformanceEvaluationRating",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.actualDuration",
          "$.performanceEvaluationReference.educationOrganizationId",
          "$.performanceEvaluationReference.schoolYear",
          "$.results[*].rating",
          "$.reviewers[*].receivedTraining.interRaterReliabilityScore"
        ],
        "queryFieldMapping": {
          "actualDate": [
            {
              "path": "$.actualDate",
              "type": "date"
            }
          ],
          "actualDuration": [
            {
              "path": "$.actualDuration",
              "type": "number"
            }
          ],
          "actualTime": [
            {
              "path": "$.actualTime",
              "type": "time"
            }
          ],
          "announced": [
            {
              "path": "$.announced",
              "type": "boolean"
            }
          ],
          "comments": [
            {
              "path": "$.comments",
              "type": "string"
            }
          ],
          "coteachingStyleObservedDescriptor": [
            {
              "path": "$.coteachingStyleObservedDescriptor",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.performanceEvaluationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.performanceEvaluationReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "performanceEvaluationRatingLevelDescriptor": [
            {
              "path": "$.performanceEvaluationRatingLevelDescriptor",
              "type": "string"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.performanceEvaluationReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.performanceEvaluationReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "personId": [
            {
              "path": "$.personReference.personId",
              "type": "string"
            }
          ],
          "scheduleDate": [
            {
              "path": "$.scheduleDate",
              "type": "date"
            }
          ],
          "schoolYear": [
            {
              "path": "$.performanceEvaluationReference.schoolYear",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.personReference.sourceSystemDescriptor",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.performanceEvaluationReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "PerformanceEvaluationRating",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.performanceEvaluationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "performanceEvaluationTypeDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "PerformanceEvaluationTypeDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "performanceEvaluations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
          {
            "paths": [
              "$.gradeLevels[*].gradeLevelDescriptor"
            ]
          },
          {
            "paths": [
              "$.ratingLevels[*].evaluationRatingLevelDescriptor"
            ]
          }
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].minRating",
            "totalDigits": 6
          },
          {
            "decimalPlaces": 3,
            "path": "$.ratingLevels[*].maxRating",
            "totalDigits": 6
          }
        ],
        "documentPathsMapping": {
          "AcademicSubjectDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.academicSubjectDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "AcademicSubjectDescriptor",
            "type": "string"
          },
          "EducationOrganization": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.educationOrganizationId",
                "referenceJsonPath": "$.educationOrganizationReference.educationOrganizationId",
                "type": "number"
              }
            ],
            "resourceName": "EducationOrganization"
          },
          "EvaluationPeriodDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.evaluationPeriodDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationPeriodDescriptor",
            "type": "string"
          },
          "GradeLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.gradeLevels[*].gradeLevelDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "GradeLevelDescriptor",
            "type": "string"
          },
          "PerformanceEvaluationDescription": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.performanceEvaluationDescription",
            "type": "string"
          },
          "PerformanceEvaluationRatingLevel.EvaluationRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.ratingLevels[*].evaluationRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "EvaluationRatingLevelDescriptor",
            "type": "string"
          },
          "PerformanceEvaluationRatingLevel.MaxRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].maxRating",
            "type": "number"
          },
          "PerformanceEvaluationRatingLevel.MinRating": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.ratingLevels[*].minRating",
            "type": "number"
          },
          "PerformanceEvaluationTitle": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.performanceEvaluationTitle",
            "type": "string"
          },
          "PerformanceEvaluationTypeDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.performanceEvaluationTypeDescriptor",
            "projectName": "TPDM",
            "resourceName": "PerformanceEvaluationTypeDescriptor",
            "type": "string"
          },
          "SchoolYear": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.schoolYear",
                "referenceJsonPath": "$.schoolYearTypeReference.schoolYear",
                "type": "string"
              }
            ],
            "resourceName": "SchoolYearType"
          },
          "TermDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "path": "$.termDescriptor",
            "projectName": "Ed-Fi",
            "resourceName": "TermDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.educationOrganizationReference.educationOrganizationId",
          "$.evaluationPeriodDescriptor",
          "$.performanceEvaluationTitle",
          "$.performanceEvaluationTypeDescriptor",
          "$.schoolYearTypeReference.schoolYear",
          "$.termDescriptor"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.",
          "properties": {
            "academicSubjectDescriptor": {
              "description": "The description of the content or subject area of a performance evaluation.",
              "type": "string"
            },
            "educationOrganizationReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                }
              },
              "required": [
                "educationOrganizationId"
              ],
              "type": "object"
            },
            "evaluationPeriodDescriptor": {
              "description": "The period for the evaluation.",
              "type": "string"
            },
            "gradeLevels": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "gradeLevelDescriptor": {
                    "description": "An Ed-Fi Descriptor",
                    "type": "string"
                  }
                },
                "required": [
                  "gradeLevelDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "performanceEvaluationDescription": {
              "description": "The long description of the Performance Evaluation.",
              "maxLength": 255,
              "type": "string"
            },
            "performanceEvaluationTitle": {
              "description": "An assigned unique identifier for the performance evaluation.",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s)(.*\\S)$",
              "type": "string"
            },
            "performanceEvaluationTypeDescriptor": {
              "description": "The type of performance evaluation conducted.",
              "type": "string"
            },
            "ratingLevels": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "evaluationRatingLevelDescriptor": {
                    "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
                    "type": "string"
                  },
                  "maxRating": {
                    "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  },
                  "minRating": {
                    "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
                    "type": "number"
                  }
                },
                "required": [
                  "evaluationRatingLevelDescriptor"
                ],
                "type": "object"
              },
              "minItems": 0,
              "type": "array",
              "uniqueItems": false
            },
            "schoolYearTypeReference": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "additionalProperties": false,
              "description": "A school year enumeration",
              "properties": {
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                }
              },
              "title": "EdFi.SchoolYearType",
              "type": "object"
            },
            "termDescriptor": {
              "description": "The term for the session during the school year.",
              "type": "string"
            }
          },
          "required": [
            "performanceEvaluationTitle",
            "termDescriptor",
            "performanceEvaluationTypeDescriptor",
            "schoolYearTypeReference",
            "evaluationPeriodDescriptor",
            "educationOrganizationReference"
          ],
          "title": "TPDM.PerformanceEvaluation",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.educationOrganizationReference.educationOrganizationId",
          "$.ratingLevels[*].maxRating",
          "$.ratingLevels[*].minRating",
          "$.schoolYearTypeReference.schoolYear"
        ],
        "queryFieldMapping": {
          "academicSubjectDescriptor": [
            {
              "path": "$.academicSubjectDescriptor",
              "type": "string"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.educationOrganizationReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "performanceEvaluationDescription": [
            {
              "path": "$.performanceEvaluationDescription",
              "type": "string"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.schoolYearTypeReference.schoolYear",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "PerformanceEvaluation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.educationOrganizationReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "rubricDimensions": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "CriterionDescription": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": true,
            "path": "$.criterionDescription",
            "type": "string"
          },
          "DimensionOrder": {
            "isPartOfIdentity": false,
            "isReference": false,
            "isRequired": false,
            "path": "$.dimensionOrder",
            "type": "number"
          },
          "EvaluationElement": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "TPDM",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.evaluationElementTitle",
                "referenceJsonPath": "$.evaluationElementReference.evaluationElementTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.educationOrganizationId",
                "referenceJsonPath": "$.evaluationElementReference.educationOrganizationId",
                "type": "number"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationObjectiveTitle",
                "referenceJsonPath": "$.evaluationElementReference.evaluationObjectiveTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationPeriodDescriptor",
                "referenceJsonPath": "$.evaluationElementReference.evaluationPeriodDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.evaluationTitle",
                "referenceJsonPath": "$.evaluationElementReference.evaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTitle",
                "referenceJsonPath": "$.evaluationElementReference.performanceEvaluationTitle",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.performanceEvaluationTypeDescriptor",
                "referenceJsonPath": "$.evaluationElementReference.performanceEvaluationTypeDescriptor",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.schoolYear",
                "referenceJsonPath": "$.evaluationElementReference.schoolYear",
                "type": "string"
              },
              {
                "identityJsonPath": "$.evaluationObjectiveReference.termDescriptor",
                "referenceJsonPath": "$.evaluationElementReference.termDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "EvaluationElement"
          },
          "RubricRating": {
            "isPartOfIdentity": true,
            "isReference": false,
            "isRequired": true,
            "path": "$.rubricRating",
            "type": "number"
          },
          "RubricRatingLevelDescriptor": {
            "isDescriptor": true,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "path": "$.rubricRatingLevelDescriptor",
            "projectName": "TPDM",
            "resourceName": "RubricRatingLevelDescriptor",
            "type": "string"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.evaluationElementReference.educationOrganizationId",
          "$.evaluationElementReference.evaluationElementTitle",
          "$.evaluationElementReference.evaluationObjectiveTitle",
          "$.evaluationElementReference.evaluationPeriodDescriptor",
          "$.evaluationElementReference.evaluationTitle",
          "$.evaluationElementReference.performanceEvaluationTitle",
          "$.evaluationElementReference.performanceEvaluationTypeDescriptor",
          "$.evaluationElementReference.schoolYear",
          "$.evaluationElementReference.termDescriptor",
          "$.rubricRating"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.",
          "properties": {
            "criterionDescription": {
              "description": "The criterion description for the rubric dimension.",
              "maxLength": 1024,
              "pattern": "^(?!\\s*$).+",
              "type": "string"
            },
            "dimensionOrder": {
              "description": "The order for the rubric dimension.",
              "type": "integer"
            },
            "evaluationElementReference": {
              "additionalProperties": false,
              "properties": {
                "educationOrganizationId": {
                  "description": "The identifier assigned to an education organization.",
                  "type": "integer"
                },
                "evaluationElementTitle": {
                  "description": "The name or title of the evaluation element.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationObjectiveTitle": {
                  "description": "The name or title of the evaluation Objective.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "evaluationPeriodDescriptor": {
                  "description": "The period for the evaluation.",
                  "type": "string"
                },
                "evaluationTitle": {
                  "description": "The name or title of the evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTitle": {
                  "description": "An assigned unique identifier for the performance evaluation.",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "performanceEvaluationTypeDescriptor": {
                  "description": "The type of performance evaluation conducted.",
                  "type": "string"
                },
                "schoolYear": {
                  "description": "A school year between 1900 and 2100",
                  "maximum": 2100,
                  "minimum": 1900,
                  "type": "integer"
                },
                "termDescriptor": {
                  "description": "The term for the session during the school year.",
                  "type": "string"
                }
              },
              "required": [
                "evaluationElementTitle",
                "evaluationTitle",
                "educationOrganizationId",
                "evaluationPeriodDescriptor",
                "performanceEvaluationTitle",
                "performanceEvaluationTypeDescriptor",
                "schoolYear",
                "termDescriptor",
                "evaluationObjectiveTitle"
              ],
              "type": "object"
            },
            "rubricRating": {
              "description": "The rating achieved for the rubric dimension.",
              "type": "integer"
            },
            "rubricRatingLevelDescriptor": {
              "description": "The rating level achieved for the rubric dimension.",
              "type": "string"
            }
          },
          "required": [
            "evaluationElementReference",
            "rubricRating",
            "criterionDescription"
          ],
          "title": "TPDM.RubricDimension",
          "type": "object"
        },
        "numericJsonPaths": [
          "$.dimensionOrder",
          "$.evaluationElementReference.educationOrganizationId",
          "$.evaluationElementReference.schoolYear",
          "$.rubricRating"
        ],
        "queryFieldMapping": {
          "criterionDescription": [
            {
              "path": "$.criterionDescription",
              "type": "string"
            }
          ],
          "dimensionOrder": [
            {
              "path": "$.dimensionOrder",
              "type": "number"
            }
          ],
          "educationOrganizationId": [
            {
              "path": "$.evaluationElementReference.educationOrganizationId",
              "type": "number"
            }
          ],
          "evaluationElementTitle": [
            {
              "path": "$.evaluationElementReference.evaluationElementTitle",
              "type": "string"
            }
          ],
          "evaluationObjectiveTitle": [
            {
              "path": "$.evaluationElementReference.evaluationObjectiveTitle",
              "type": "string"
            }
          ],
          "evaluationPeriodDescriptor": [
            {
              "path": "$.evaluationElementReference.evaluationPeriodDescriptor",
              "type": "string"
            }
          ],
          "evaluationTitle": [
            {
              "path": "$.evaluationElementReference.evaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTitle": [
            {
              "path": "$.evaluationElementReference.performanceEvaluationTitle",
              "type": "string"
            }
          ],
          "performanceEvaluationTypeDescriptor": [
            {
              "path": "$.evaluationElementReference.performanceEvaluationTypeDescriptor",
              "type": "string"
            }
          ],
          "rubricRating": [
            {
              "path": "$.rubricRating",
              "type": "number"
            }
          ],
          "rubricRatingLevelDescriptor": [
            {
              "path": "$.rubricRatingLevelDescriptor",
              "type": "string"
            }
          ],
          "schoolYear": [
            {
              "path": "$.evaluationElementReference.schoolYear",
              "type": "string"
            }
          ],
          "termDescriptor": [
            {
              "path": "$.evaluationElementReference.termDescriptor",
              "type": "string"
            }
          ]
        },
        "resourceName": "RubricDimension",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
            {
              "jsonPath": "$.evaluationElementReference.educationOrganizationId",
              "metaEdName": "EducationOrganizationId"
            }
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "rubricRatingLevelDescriptors": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
        ],
        "isDescriptor": true,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "An Ed-Fi Descriptor",
          "properties": {
            "codeValue": {
              "description": "The descriptor code value",
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "description": {
              "description": "The descriptor description",
              "maxLength": 1024,
              "type": "string"
            },
            "effectiveBeginDate": {
              "description": "The descriptor effective begin date",
              "format": "date",
              "type": "string"
            },
            "effectiveEndDate": {
              "description": "The descriptor effective end date",
              "format": "date",
              "type": "string"
            },
            "namespace": {
              "description": "The descriptor namespace as a URI",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            },
            "shortDescription": {
              "description": "The descriptor short description",
              "maxLength": 75,
              "minLength": 1,
              "pattern": "^(?!\\s).*(?<!\\s)$",
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "codeValue",
            "shortDescription"
          ],
          "title": "EdFi.Descriptor",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "codeValue": [
            {
              "path": "$.codeValue",
              "type": "string"
            }
          ],
          "description": [
            {
              "path": "$.description",
              "type": "string"
            }
          ],
          "namespace": [
            {
              "path": "$.namespace",
              "type": "string"
            }
          ],
          "shortDescription": [
            {
              "path": "$.shortDescription",
              "type": "string"
            }
          ]
        },
        "resourceName": "RubricRatingLevelDescriptor",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "schools": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "PostSecondaryInstitution": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.postSecondaryInstitutionId",
                "referenceJsonPath": "$._ext.tpdm.postSecondaryInstitutionReference.postSecondaryInstitutionId",
                "type": "number"
              }
            ],
            "resourceName": "PostSecondaryInstitution"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "tpdm": {
                  "additionalProperties": true,
                  "description": "tpdm extension properties collection",
                  "properties": {
                    "postSecondaryInstitutionReference": {
                      "additionalProperties": false,
                      "properties": {
                        "postSecondaryInstitutionId": {
                          "description": "The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "postSecondaryInstitutionId"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "TPDM.School",
          "type": "object"
        },
        "numericJsonPaths": [
          "$._ext.tpdm.postSecondaryInstitutionReference.postSecondaryInstitutionId"
        ],
        "resourceName": "School",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "surveyResponsePersonTargetAssociations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Person": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$.personReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$.personReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "SurveyResponse": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.surveyReference.namespace",
                "referenceJsonPath": "$.surveyResponseReference.namespace",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveyReference.surveyIdentifier",
                "referenceJsonPath": "$.surveyResponseReference.surveyIdentifier",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveyResponseIdentifier",
                "referenceJsonPath": "$.surveyResponseReference.surveyResponseIdentifier",
                "type": "string"
              }
            ],
            "resourceName": "SurveyResponse"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.personReference.personId",
          "$.personReference.sourceSystemDescriptor",
          "$.surveyResponseReference.namespace",
          "$.surveyResponseReference.surveyIdentifier",
          "$.surveyResponseReference.surveyResponseIdentifier"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "The association provides information about the survey being taken and who the survey is about.",
          "properties": {
            "personReference": {
              "additionalProperties": false,
              "properties": {
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                }
              },
              "required": [
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "surveyResponseReference": {
              "additionalProperties": false,
              "properties": {
                "namespace": {
                  "description": "Namespace for the survey.",
                  "maxLength": 255,
                  "minLength": 5,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "surveyIdentifier": {
                  "description": "The unique survey identifier from the survey tool.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "surveyResponseIdentifier": {
                  "description": "The identifier of the survey typically from the survey application.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "namespace",
                "surveyIdentifier",
                "surveyResponseIdentifier"
              ],
              "type": "object"
            }
          },
          "required": [
            "surveyResponseReference",
            "personReference"
          ],
          "title": "TPDM.SurveyResponsePersonTargetAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "namespace": [
            {
              "path": "$.surveyResponseReference.namespace",
              "type": "string"
            }
          ],
          "personId": [
            {
              "path": "$.personReference.personId",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.personReference.sourceSystemDescriptor",
              "type": "string"
            }
          ],
          "surveyIdentifier": [
            {
              "path": "$.surveyResponseReference.surveyIdentifier",
              "type": "string"
            }
          ],
          "surveyResponseIdentifier": [
            {
              "path": "$.surveyResponseReference.surveyResponseIdentifier",
              "type": "string"
            }
          ]
        },
        "resourceName": "SurveyResponsePersonTargetAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.surveyResponseReference.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "surveyResponses": {
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Person": {
            "isDescriptor": false,
            "isPartOfIdentity": false,
            "isReference": true,
            "isRequired": false,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$._ext.tpdm.personReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$._ext.tpdm.personReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          }
        },
        "equalityConstraints": [
        ],
        "isResourceExtension": true,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "_ext": {
              "additionalProperties": true,
              "description": "optional extension collection",
              "properties": {
                "tpdm": {
                  "additionalProperties": true,
                  "description": "tpdm extension properties collection",
                  "properties": {
                    "personReference": {
                      "additionalProperties": false,
                      "properties": {
                        "personId": {
                          "description": "A unique alphanumeric code assigned to a person.",
                          "maxLength": 32,
                          "pattern": "^(?!\\s)(.*\\S)$",
                          "type": "string"
                        },
                        "sourceSystemDescriptor": {
                          "description": "This descriptor defines the originating record source system for the person.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "personId",
                        "sourceSystemDescriptor"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "title": "TPDM.SurveyResponse",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "resourceName": "SurveyResponse",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      },
      "surveySectionResponsePersonTargetAssociations": {
        "allowIdentityUpdates": false,
        "arrayUniquenessConstraints": [
        ],
        "authorizationPathways": [
        ],
        "booleanJsonPaths": [
        ],
        "dateTimeJsonPaths": [
        ],
        "decimalPropertyValidationInfos": [
        ],
        "documentPathsMapping": {
          "Person": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.personId",
                "referenceJsonPath": "$.personReference.personId",
                "type": "string"
              },
              {
                "identityJsonPath": "$.sourceSystemDescriptor",
                "referenceJsonPath": "$.personReference.sourceSystemDescriptor",
                "type": "string"
              }
            ],
            "resourceName": "Person"
          },
          "SurveySectionResponse": {
            "isDescriptor": false,
            "isPartOfIdentity": true,
            "isReference": true,
            "isRequired": true,
            "projectName": "Ed-Fi",
            "referenceJsonPaths": [
              {
                "identityJsonPath": "$.surveyResponseReference.namespace",
                "referenceJsonPath": "$.surveySectionResponseReference.namespace",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveyResponseReference.surveyIdentifier",
                "referenceJsonPath": "$.surveySectionResponseReference.surveyIdentifier",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveyResponseReference.surveyResponseIdentifier",
                "referenceJsonPath": "$.surveySectionResponseReference.surveyResponseIdentifier",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveySectionReference.namespace",
                "referenceJsonPath": "$.surveySectionResponseReference.namespace",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveySectionReference.surveyIdentifier",
                "referenceJsonPath": "$.surveySectionResponseReference.surveyIdentifier",
                "type": "string"
              },
              {
                "identityJsonPath": "$.surveySectionReference.surveySectionTitle",
                "referenceJsonPath": "$.surveySectionResponseReference.surveySectionTitle",
                "type": "string"
              }
            ],
            "resourceName": "SurveySectionResponse"
          }
        },
        "equalityConstraints": [
        ],
        "identityJsonPaths": [
          "$.personReference.personId",
          "$.personReference.sourceSystemDescriptor",
          "$.surveySectionResponseReference.namespace",
          "$.surveySectionResponseReference.surveyIdentifier",
          "$.surveySectionResponseReference.surveyResponseIdentifier",
          "$.surveySectionResponseReference.surveySectionTitle"
        ],
        "isDescriptor": false,
        "isResourceExtension": false,
        "isSchoolYearEnumeration": false,
        "isSubclass": false,
        "jsonSchemaForInsert": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "description": "This association provides information about the survey section and the person the survey section is about.",
          "properties": {
            "personReference": {
              "additionalProperties": false,
              "properties": {
                "personId": {
                  "description": "A unique alphanumeric code assigned to a person.",
                  "maxLength": 32,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "sourceSystemDescriptor": {
                  "description": "This descriptor defines the originating record source system for the person.",
                  "type": "string"
                }
              },
              "required": [
                "personId",
                "sourceSystemDescriptor"
              ],
              "type": "object"
            },
            "surveySectionResponseReference": {
              "additionalProperties": false,
              "properties": {
                "namespace": {
                  "description": "Namespace for the survey.",
                  "maxLength": 255,
                  "minLength": 5,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "surveyIdentifier": {
                  "description": "The unique survey identifier from the survey tool.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "surveyResponseIdentifier": {
                  "description": "The identifier of the survey typically from the survey application.",
                  "maxLength": 60,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                },
                "surveySectionTitle": {
                  "description": "The title or label for the survey section.",
                  "maxLength": 255,
                  "pattern": "^(?!\\s)(.*\\S)$",
                  "type": "string"
                }
              },
              "required": [
                "surveyResponseIdentifier",
                "namespace",
                "surveyIdentifier",
                "surveySectionTitle"
              ],
              "type": "object"
            }
          },
          "required": [
            "surveySectionResponseReference",
            "personReference"
          ],
          "title": "TPDM.SurveySectionResponsePersonTargetAssociation",
          "type": "object"
        },
        "numericJsonPaths": [
        ],
        "queryFieldMapping": {
          "namespace": [
            {
              "path": "$.surveySectionResponseReference.namespace",
              "type": "string"
            }
          ],
          "personId": [
            {
              "path": "$.personReference.personId",
              "type": "string"
            }
          ],
          "sourceSystemDescriptor": [
            {
              "path": "$.personReference.sourceSystemDescriptor",
              "type": "string"
            }
          ],
          "surveyIdentifier": [
            {
              "path": "$.surveySectionResponseReference.surveyIdentifier",
              "type": "string"
            }
          ],
          "surveyResponseIdentifier": [
            {
              "path": "$.surveySectionResponseReference.surveyResponseIdentifier",
              "type": "string"
            }
          ],
          "surveySectionTitle": [
            {
              "path": "$.surveySectionResponseReference.surveySectionTitle",
              "type": "string"
            }
          ]
        },
        "resourceName": "SurveySectionResponsePersonTargetAssociation",
        "securableElements": {
          "Contact": [
          ],
          "EducationOrganization": [
          ],
          "Namespace": [
            "$.surveySectionResponseReference.namespace"
          ],
          "Staff": [
          ],
          "Student": [
          ]
        }
      }
    }
  }
}