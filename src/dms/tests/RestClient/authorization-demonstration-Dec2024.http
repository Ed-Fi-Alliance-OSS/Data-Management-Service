# Usage:
# 1. in `eng/docker-compose`, copy `.env.example` to `.env`
# 2. start up all services: `./start-local-dms.ps1 -EnableSearchEngineUI -EnableConfig -EnforceAuthorization -r`
# 3. Setup keycloak: `.\setup-keycloak.ps1`
# 4. Run everything here from top to bottom.

@dmsPort=8080
@configPort=8081

@sysAdminId=sys-admin
@sysAdminSecret=SdfH)98&Jk
@encodedSysAdminSecret=SdfH%2998%26Jk


#
# Create a new system administrator and create a token
#

### Create the system administrator credentials
POST http://localhost:{{configPort}}/connect/register
Content-Type: application/x-www-form-urlencoded

ClientId={{sysAdminId}}
&ClientSecret={{encodedSysAdminSecret}}
&DisplayName=System Administrator


### Create a token
# @name configTokenRequest
POST http://localhost:{{configPort}}/connect/token
Content-Type: application/x-www-form-urlencoded

client_id={{sysAdminId}}
&client_secret={{encodedSysAdminSecret}}
&grant_type=client_credentials
&scope=edfi_admin_api/full_access

###
@configToken={{configTokenRequest.response.body.access_token}}

#
# Create vendor, application, and new DMS client credentials
#

### Create a new vendor
# @name createVendor
POST http://localhost:{{configPort}}/v2/vendors
Content-Type: application/json
Authorization: bearer {{configToken}}

{
    "company": "Demo Vendor",
    "contactName": "George Washington",
    "contactEmailAddress": "george@example.com",
    "namespacePrefixes": "uri://ed-fi.org"
}

###
@vendorLocation={{createVendor.response.headers.location}}

### Retrieve the vendor so that we can extract the Id
# @name getVendor
GET {{vendorLocation}}
Authorization: bearer {{configToken}}

###
@vendorId={{getVendor.response.body.id}}

### Create a new application
# @name createApplication
POST http://localhost:{{configPort}}/v2/applications
Content-Type: application/json
Authorization: bearer {{configToken}}

{
    "vendorId": {{vendorId}},
    "applicationName": "Demo application",
    "claimSetName": "SIS-Vendor"
}

###
@clientKey={{createApplication.response.body.key}}
@clientSecret={{createApplication.response.body.secret}}
@applicationLocation={{createApplication.response.headers.location}}

### Reset the credentials
# @name reset
PUT {{applicationLocation}}/reset-credential
Content-Type: application/json
Authorization: bearer {{configToken}}

{}

###
@clientKey={{reset.response.body.key}}
@clientSecret={{reset.response.body.secret}}

### Create another application, just to demonstrate deletion
# @name createApplication2
POST http://localhost:{{configPort}}/v2/applications
Content-Type: application/json
Authorization: bearer {{configToken}}

{
    "vendorId": {{vendorId}},
    "applicationName": "Delete me",
    "claimSetName": "Delete-me"
}

###
DELETE {{createApplication2.response.headers.location}}
Authorization: bearer {{configToken}}

###
GET {{createApplication2.response.headers.location}}
Authorization: bearer {{configToken}}



#
# DMS demonstration
#

### Read the Token URL from the Discovery API
# @name discovery
GET http://localhost:{{dmsPort}}

###
@tokenUrl={{discovery.response.body.urls.oauth}}
@dataApi={{discovery.response.body.urls.dataManagementApi}}

### Create a DMS token
# @name dmsTokenRequest
POST {{tokenUrl}}
Authorization: basic {{clientKey}}:{{clientSecret}}
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials

###
@dmsToken={{dmsTokenRequest.response.body.access_token}}

### Create a new descriptor
# @name createDescriptor
POST {{dataApi}}/ed-fi/educationOrganizationCategoryDescriptors
Authorization: bearer {{dmsToken}}
Content-Type: application/json

{
    "namespace": "uri://ed-fi.org",
    "codeValue": "School",
    "shortDescription": "School"
}

###
@descriptorLocation={{createDescriptor.response.headers.location}}

### Retrieve just that descriptor
# @name getDescriptor
GET {{descriptorLocation}}
Authorization: bearer {{dmsToken}}

###
@descriptorId={{getDescriptor.response.body.id}}

### Retrieve all edorg category descriptors
GET {{dataApi}}/ed-fi/educationOrganizationCategoryDescriptors
Authorization: bearer {{dmsToken}}

### Update the descriptor
PUT {{descriptorLocation}}
Authorization: bearer {{dmsToken}}
Content-Type: application/json

{
    "id": "{{descriptorId}}",
    "namespace": "uri://ed-fi.org",
    "codeValue": "School",
    "shortDescription": "School description modified"
}

### Retrieve again
GET {{descriptorLocation}}
Authorization: bearer {{dmsToken}}

### Delete the descriptor
DELETE {{descriptorLocation}}
Authorization: bearer {{dmsToken}}

### Retrieve again
GET {{descriptorLocation}}
Authorization: bearer {{dmsToken}}

### Try to use an expired token
POST {{dataApi}}/ed-fi/educationOrganizationCategoryDescriptors
Authorization: bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI2U0NRSmwtZ05FZW9sWkhoZGxQemRKbDBJMXJQMXBJZTNiWFZKSG90UGxvIn0.eyJleHAiOjE3MzMzNjcxNzksImlhdCI6MTczMzM2NTM3OSwianRpIjoiNTA3ZDE0ZWYtYTk4OC00NmFhLTliOTItMzI2YTZiOTNiMDA5IiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDQ1L3JlYWxtcy9lZGZpIiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjZiOGNkYzcwLTM4Y2UtNDc4Yi05NTUzLTY1MGYzYjJkOGNlZSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImQyNTQ4ODg3LTYwMWYtNGI5Yi04MDk0LTcxNDk0ODlhNjNjMSIsInNjb3BlIjoic2NwOmVkZmlfZG1zX2NvbmZpZ3VyYXRpb25fc2VydmljZS9mdWxsX2FjY2VzcyIsImNsaWVudEhvc3QiOiIxNzIuMjAuMC4xIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1lZGZpIiwidW1hX2F1dGhvcml6YXRpb24iLCJjb25maWctc2VydmljZS1hcHAiXSwiY2xpZW50QWRkcmVzcyI6IjE3Mi4yMC4wLjEiLCJjbGllbnRfaWQiOiJkMjU0ODg4Ny02MDFmLTRiOWItODA5NC03MTQ5NDg5YTYzYzEifQ.VSKwXXKwi6HmxAu7e-YASYOHpqHZ-Q1LYMzAkR-LkWVUvWVwpFDxGi7WzCLlrd7Huia0JfrnLPihedbTUK-5UpbrGVz6yfZ8fDOJ7FIV-wN63W5oGxQ61LqITLNjHIB3M3x4bvP9O8Lmi_pGfE2ghmhnuJh1mOcV-0AfupNOLjdbY_4HFd0ayzW4Bq-KPben-KO5pBQKM322MVrJbuX67lVbPgSZz78k5VAcJBDmkP5pH5MxKOrT4HrDs-PC5Ans8EjUnXv5uRhCvzXplDLhpUxzll5k3ooPCdYa5TGS-aiPEORy7iSzjkEMx1Nmc5P9MjawN0kfcp6zvOzKiXmQMw
Content-Type: application/json

{
    "namespace": "uri://ed-fi.org",
    "codeValue": "School",
    "shortDescription": "School"
}
