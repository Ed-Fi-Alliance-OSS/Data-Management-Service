USE [iMartStage]
GO

/****** Object:  StoredProcedure [dbo].[sp_iMart_Transform_DIM_STUDENT_edfi]    Script Date: 3/3/2025 1:36:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[sp_iMart_Transform_DIM_STUDENT_edfi]
(
--declare
     @SAID varchar(30) = /*'DDOE-edfi3',--*/ NULL,
     @Batch_Period_List varchar(max) = /*'2025' */ NULL
)
as

-- ============================================================================
-- Script UTC date: 2019-03-29 10:38:20
-- Description: Generated by OtisEd iMart Wizard Tool
-- Copyright: Â©2019 Otis Educational Systems, Inc. All Rights Reserved
-- exec [dbo].[sp_iMart_Transform_DIM_STUDENT_edfi] @SAID='{said}', @Batch_Period_List='{bpl}'
-- ============================================================================
--Declare @SAID varchar(30)= 'All', @Batch_Period_List varchar(30)='2020'
-- Example:  exec [dbo].[sp_iMart_Transform_DIM_STUDENT_edfi] @SAID='DDOE-edfi3', @Batch_Period_List='2024'
 
 /*
<StatusList>
  <Status Code = "A">Assigned Waiting for mapping</Status>
  <Status Code = "I">Ignore for this implementation</Status>
  <Status Code = "M">Mapped and waiting for Review</Status>
  <Status Code = "U">Reviewed and deemed unacceptable.Needs Remapping</Status>
  <Status Code = "H">On Hold for this iteration, non-blocking</Status>
  <Status Code = "C"> Completed</Status>
</StatusList>
*/

/*
4/30/2020: changed source for range_cd, range_desc, WHITE_RACE_IND, BLACK_OR_AFRICAN_AMERICAN_RACE_IND, ASIAN_RACE_IND, AMERICAN_INDIAN_OR_ALASKAN_NATIVE_RACE_IND, HISPANIC_LATINO_ETHNIC_IND, MULTIPLE_RACE_IND, NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER_RACE_IND
10/23/2020: modified SP to include valid_school_ind
12/4/2020: replaced ES_Building_Conversion with join of cdl.building to cdl.school
12/7/2020: replaced cdl.school with cdl.building in the list CTE
1/27/2021: [SECTION_504_IND] - remove date dependency from where condition and added EnrollOrderDesc = 1; students were being missed (fogbugz 21822)
2/6/2021: added @tvf_Edfi_SR and table dbo.doe_temp_dim_student_transform_data
2/23/2021: added ETD_descriptorID cte to limit list cte to current students (no pre-registration); didn't directly join tables in ETD_descriptorID to list because the stored procedure took over an hour to run when I did that
3/28/2021:  Added schoolid to join on helper table
4/15/2021: removed reference to doe_temp_dim_student_transform_data; added variable tables and script to create and drop tables and changed some columns to point to these tables to help with run time
7/20/2021: changed [description] nvarchar(100) to [description] nvarchar(200) for @tempDescriptor and @tempStudentSpecialEducationProgramAssociationSpecialEducationProgramService variable tables
2/2/2022: kace 98433 - added calendar type; 21st_Ind was renamed to TwentyFirst_Ind due to Synergyz updates to be more ANSI compliant
4/19/2022: hard coded ssn to '--'
12/22/2022: changed @StudentCalendarType to pick up only the most recent enrollment
08/16/2023	removed the [PASSED_ENDOFPATHWAY_ASSESSMENT_IND] logic.  Runs in 33 minutes with 2024 batch period producing 14,345 rows in UAT.
*/

--parameter processing
declare @BPLxml xml = (select cast('<a>'+replace(@Batch_Period_List,',','</a><a>') + '</a>' as xml))
declare @BPLtable table(Batch_Period varchar(50), primary key (Batch_Period))
insert into @BPLtable(Batch_Period) 
select ltrim(rtrim(t.value('.','nvarchar(50)'))) as Batch_Period from @BPLxml.nodes('/a') as x(t) where len(@Batch_Period_List)>0

declare @SAIDxml xml = (select cast('<a>'+replace(@SAID,',','</a><a>') + '</a>' as xml))
declare @SAIDtable table(SAID nvarchar(30), Agency nvarchar(30), primary key (SAID))
insert into @SAIDtable(SAID) 
select ltrim(rtrim(t.value('.','nvarchar(30)'))) as SAID from @SAIDxml.nodes('/a') as x(t) where len(@SAID)>0
update @SAIDtable set Agency=case when patindex('%-%', said) > 1 then left(said, patindex('%-%', said)-1 ) else said end

--<MappingInfo Table="DIM_STUDENT"> 

--<MappingInfoCommon>

declare @studentCalendarType table (studentUSI int, schoolID int, schoolYear int, calendarcode varchar(10) ,calendarTypeDescriptorID int, calendarTypeValue varchar(1), studentuniqueid varchar(15),
	localeducationagencyid varchar(20), entrydate datetime, exitwithdrawdate datetime ,enrollorderdesc int)

insert into @studentCalendarType
	select 
	ssa.StudentUSI
	,ssa.SchoolId
	,ssa.SchoolYear
	,ssa.CalendarCode
	,cal.CalendarTypeDescriptorId
	,calTypeDesc.CodeValue
	,stu.StudentUniqueId, h.LocalEducationAgencyId, ssa.EntryDate, ssa.ExitWithdrawDate
	,EnrollOrderDesc=Row_Number() over (partition by ssa.SchoolYear, ssa.STUDENTUSI, ssa.SchoolId order by ssa.EntryDate desc)
	from [edfi].StudentSchoolAssociation ssa
	join edfi.Student stu
	on stu.StudentUSI = ssa.StudentUSI
	join edfi.School h
	on ssa.SchoolId = h.SchoolId
	join [edfi].calendar cal on ssa.CalendarCode = cal.CalendarCode 
			 and ssa.SchoolId = cal.SchoolId
			 and ssa.SchoolYear = cal.SchoolYear
	join [edfi].Descriptor calTypeDesc on cal.CalendarTypeDescriptorId = calTypeDesc.DescriptorId 
			 and caltypedesc.Namespace = 'uri://doe.k12.de.us/CalendarTypeDescriptor'

declare @tvf_Edfi_SRC table (educationOrganizationID int, studentUSI int, localStudentID int, raceCode int, raceDescription varchar(50))
insert into @tvf_Edfi_SRC
 select * from dbo.tvf_Edfi_StudentRaceCode(0)

declare @CalendarFirstLastDay table (SchoolYear smallint, SchoolId int, CalendarCode nvarchar(50), FirstDay date, LastDay date, primary key(SchoolYear, SchoolId, CalendarCode))
insert into @CalendarFirstLastDay (SchoolYear, SchoolId, CalendarCode, FirstDay, LastDay)
select ce.SchoolYear, ce.SchoolId, ce.CalendarCode, FirstDay=min(ce.Date), LastDay=max(ce.Date)
  from edfi.CalendarDateCalendarEvent ce
  join edfi.Descriptor d on d.DescriptorId=ce.CalendarEventDescriptorId
 where d.[Description]='Membership Day'
 group by ce.CalendarCode, ce.SchoolId, ce.SchoolYear


declare @TV_HomeLanguage table (StudentUSI int, LanguageDescriptorID int, EducationOrganizationId int, CodeValue varchar(10),LangDesc varchar (50))
insert into @TV_HomeLanguage (StudentUSI,LanguageDescriptorID, EducationOrganizationId, CodeValue, LangDesc)
select studentusi, x.LanguageDescriptorId, EducationOrganizationId, convert(varchar(10),dl.CodeValue), convert(varchar(50),dl.Description)
from [edfi].[StudentEducationOrganizationAssociationLanguageUse] x
join edfi.Descriptor d
on x.LanguageUseDescriptorId = d.DescriptorId and d.CodeValue = 'Home Language'
 join [edfi].[Descriptor] dl on dl.DescriptorId=x.LanguageDescriptorId

declare @TempValidSchool table (Student_Id varchar(15), Building varchar(15), Eschool_Building varchar(15), row_rank int
								Index STUDENT_ID_Index nonclustered ([Student_Id], [building]))

declare @tempStudentEducationOrganizationAssociationStudentIndicator table (educationOrganizationID int,indicatorName nvarchar(60), studentUSI int, indicatorGroup nvarchar(60), indicator nvarchar(35), unique nonclustered(educationOrganizationID, studentUSI, indicatorName))
insert into @tempStudentEducationOrganizationAssociationStudentIndicator (educationOrganizationID,indicatorName,studentUSI,indicatorGroup,indicator)
 select distinct educationOrganizationID,indicatorName,studentUSI,indicatorGroup,indicator from [edfi].[StudentEducationOrganizationAssociationStudentIndicator]

declare @tempStudentCTEProgramAssociationCTEProgram table (ProgramEducationOrganizationId int, StudentUSI int, CareerPathwayDescriptorID int, CodeValue nvarchar(50), [description] nvarchar(1024),unique nonclustered(ProgramEducationOrganizationId, studentUSI, CareerPathwayDescriptorID))
insert into @tempStudentCTEProgramAssociationCTEProgram (ProgramEducationOrganizationId,StudentUSI,CareerPathwayDescriptorID,CodeValue,[description])
 select distinct x.ProgramEducationOrganizationId,x.StudentUSI,x.CareerPathwayDescriptorID,d.CodeValue,d.Description
 from edfi.[StudentCTEProgramAssociationCTEProgram] x
  join [edfi].[Descriptor] d on d.DescriptorId=x.CareerPathwayDescriptorId 

declare @tempStudentEducationOrganizationAssociationStudentIdentificationCode table (EducationOrganizationId int, StudentUSI int, IdentificationCode nvarchar(60), unique nonclustered(EducationOrganizationId, studentUSI, IdentificationCode))
insert into @tempStudentEducationOrganizationAssociationStudentIdentificationCode (EducationOrganizationId,StudentUSI,IdentificationCode)
 select x.EducationOrganizationId,x.StudentUSI,x.IdentificationCode
 from edfi.[StudentEducationOrganizationAssociationStudentIdentificationCode] x
  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentIdentificationSystemDescriptorId 
   and d.CodeValue='Previous Id'

declare @tempStudentSectionAssociation table (StudentUSI int, SchoolYear int, LastSurname nvarchar(75), FirstName nvarchar(75), unique nonclustered(StudentUSI, SchoolYear, LastSurname, FirstName))
insert into @tempStudentSectionAssociation (StudentUSI,SchoolYear,LastSurname,FirstName)
 select distinct x.StudentUSI, x.SchoolYear, z.LastSurname, z.FirstName
 from [edfi].[StudentSectionAssociation] x
  join [edfi].[StaffSectionAssociation] y on y.SchoolId=x.SchoolId
   and y.SchoolYear=x.SchoolYear
   and y.SectionIdentifier=x.SectionIdentifier
  join [edfi].[Staff] z on z.StaffUSI=y.StaffUSI
 where HomeroomIndicator = 1

declare @tempStudent504ProgramAssociation table (EducationOrganizationId int, StudentUSI int, CodeValue nvarchar(50), [description] nvarchar(25), unique nonclustered(EducationOrganizationId,StudentUSI, CodeValue, [description]))
insert into @tempStudent504ProgramAssociation (EducationOrganizationId,StudentUSI,CodeValue,[description])
 select distinct x.EducationOrganizationId, x.StudentUSI, d.CodeValue, [description] = left(d.Description,25)
 from [edfi_de].[Student504ProgramAssociation] x
  --join [edfi].[Descriptor] d on d.DescriptorId=x.DisabilityDescriptorId
  join [edfi].[Descriptor] d on d.DescriptorId=x.Section504DisabilityDescriptorId
  join [edfi].[GeneralStudentProgramAssociation] gp on gp.EducationOrganizationId=x.EducationOrganizationId
   and gp.StudentUSI=x.StudentUSI 
   and gp.ProgramName='504 Plan'

declare @tempGeneralStudentProgramAssociation table (educationOrganizationID int, studentUSI int, beginDate date, endDate date, codeValue nvarchar(50), [description] nvarchar(100), unique nonclustered(educationOrganizationID,studentUSI,beginDate,codeValue))
insert into @tempGeneralStudentProgramAssociation (educationOrganizationID, studentUSI, beginDate, endDate, codeValue, [description])
 select distinct educationOrganizationID, studentUSI, beginDate, endDate, d.codeValue, d.[description]
 from [edfi].[GeneralStudentProgramAssociation] x
  join [edfi].[Descriptor] d on x.ReasonExitedDescriptorId = d.DescriptorId

declare @tempStudentSpecialEducationProgramAssociationSpecialEducationProgramService table (educationOrganizationID int, studentUSI int, beginDate date, SpecialEducationProgramServiceDescriptorId int, codeValue nvarchar(50), [description] nvarchar(200), unique nonclustered(educationOrganizationID,studentUSI,beginDate,codeValue))
insert into @tempStudentSpecialEducationProgramAssociationSpecialEducationProgramService (educationOrganizationID,studentUSI,beginDate,SpecialEducationProgramServiceDescriptorId,codeValue,[description])
 select x.EducationOrganizationId, x.studentUSI, x.BeginDate,x.SpecialEducationProgramServiceDescriptorId, d.CodeValue, d.Description
 from [edfi].[StudentSpecialEducationProgramAssociationSpecialEducationProgramService] x
  join [edfi].[Descriptor] d on x.SpecialEducationProgramServiceDescriptorId = d.DescriptorId

declare @tempDescriptor table (descriptorID int, [namespace] nvarchar(100),codeValue nvarchar(100),shortDescription nvarchar(100),[description] nvarchar(200), unique nonclustered(descriptorID,[description]) )
insert into @tempDescriptor (descriptorID, [namespace],codeValue,shortDescription,[description])
 select descriptorID, [namespace],codeValue,shortDescription,[description] from edfi.[Descriptor]

if OBJECT_ID('tempStudentLanguageInstructionProgramAssociationLanguageImmersion_trnsfrmDimStudent') is not null drop table tempStudentLanguageInstructionProgramAssociationLanguageImmersion_trnsfrmDimStudent
 select distinct ProgramEducationOrganizationId, StudentUSI
 into dbo.tempStudentLanguageInstructionProgramAssociationLanguageImmersion_trnsfrmDimStudent
 from [edfi_de].[StudentLanguageInstructionProgramAssociationLanguageImmersion] 

CREATE nonclustered INDEX iOne ON dbo.tempStudentLanguageInstructionProgramAssociationLanguageImmersion_trnsfrmDimStudent (ProgramEducationOrganizationId, StudentUSI)

if OBJECT_ID('tempGeneralStudentProgramAssociation_ExitDate_trnsfrmDimStudent') is not null drop table tempGeneralStudentProgramAssociation_ExitDate_trnsfrmDimStudent

select distinct
 x.EducationOrganizationId
 ,x.StudentUSI
 ,x.EndDate
into dbo.tempGeneralStudentProgramAssociation_ExitDate_trnsfrmDimStudent
from [edfi].[GeneralStudentProgramAssociation] x
where x.ProgramName = '504 Plan'
 and EndDate is not null

CREATE nonclustered INDEX iOne ON dbo.tempGeneralStudentProgramAssociation_ExitDate_trnsfrmDimStudent (EducationOrganizationId, StudentUSI)

;with ETD_descriptorID as (
select distinct DescriptorID
from edfi.Descriptor
where DescriptorId in (select distinct EnrollmentTypeDescriptorId from edfi_de.StudentSchoolAssociationExtension)
 and CodeValue = 'C'  -- Only current enrolled students
)
,list as ( -- added 10/23/2020 begin

select 
  rowNum = ROW_NUMBER() over (partition by convert(int,studentUSI) order by calendar_flag, serviceSchool,withdrawal_flag,entrydate desc,LastModifiedDate desc)
 ,*
from (
	select 
	  a.StudentUSI
	 ,e.StudentUniqueId
	 ,a.SchoolId
	 ,calendar_flag = case when a.CalendarCode = 'R' then 0 else 1 end  
	 ,a.CalendarCode
	 ,serviceschool = case when d.SchoolCode is not null then 1 else 0 end
	 ,d.SchoolCode
	 ,withdrawal_flag = case when a.ExitWithdrawTypeDescriptorId is null then 0 else 1 end
	 ,a.ExitWithdrawTypeDescriptorId
	 ,b.CodeValue
	 ,a.EntryDate
	 ,a.LastModifiedDate
	 --,a.*
	from edfi.studentSchoolAssociation a
	 join edfi.Student e on a.StudentUSI = e.StudentUSI
	 join [edfi_de].[StudentSchoolAssociationExtension] ssae
	  on ssae.SchoolId=a.SchoolId and ssae.StudentUSI=a.StudentUSI  and ssae.EntryDate = a.EntryDate
	 join ETD_descriptorID on ssae.EnrollmentTypeDescriptorId = ETD_descriptorID.DescriptorId
	 left outer join cdl.building c on a.SchoolId = c.EschoolBuilding
	  and c.SchoolYear = (select distinct SchoolYear from edfi.calendar)
	 left outer join cdl.serviceSchool d on c.SchoolCode = d.SchoolCode
	 left outer join edfi.descriptor b on a.ExitWithdrawTypeDescriptorId = b.descriptorID 
	  and b.Namespace = 'uri://doe.k12.de.us/ExitWithdrawTypeDescriptor'
   ) a
)


-- added 10/23/2020 end
select distinct
     [DISTRICT_ID]=convert(VarChar(15),
    [StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
    )
    ,[ESCHOOL_BUILDING]=convert(VarChar(15),
    [StudentSchoolAssociation_MostRecent].SchoolId
    )
    ,[SCHOOL_ID]=convert(VarChar(30),
	convert(int, right(Isnull(bc.RealbuildingCode, [StudentSchoolAssociation_MostRecent].SchoolId),4))
    )
    ,[SCHOOL_YEAR]=convert(SmallInt,
    [StudentSchoolAssociation_MostRecent].SchoolYear
    )

    ,[LOCAL_STUDENT_ID]=convert(VarChar(25),
    ltrim(rtrim([edfi].[Student].StudentUniqueId))
    )
    ,[CURRENT_ENROLLED_IND]=convert(Char(1),
    case 
	when [StudentSchoolAssociation_MostRecent].ExitWithdrawDate is null 
	  or [StudentSchoolAssociation_MostRecent].ExitWithdrawDate >= (
				select top 1 LastDay from @CalendarFirstLastDay ld 
				 where ld.SchoolYear=[StudentSchoolAssociation_MostRecent].SchoolYear
				   and ld.SchoolId=[StudentSchoolAssociation_MostRecent].SchoolId
				   and ld.CalendarCode=[StudentSchoolAssociation_MostRecent].CalendarCode)
	then 'Y' 
	else 'N' end
    )

    ,[ENTRY_DATE_VALUE]=convert(Date,
    [StudentSchoolAssociation_MostRecent].EntryDate
    )

    ,[UNIQUE_ID]=convert(VarChar(25),
    [edfi].[Student].StudentUniqueId
    )

    ,[LEA_STUDENT_ID]=convert(VarChar(25),
    [edfi].[Student].StudentUniqueId
    )

    ,[STATE_ID_NBR]=convert(VarChar(25),
    [edfi].[Student].StudentUniqueId
    )

    ,[SSN]=convert(VarChar(15),
 --   IsNull((
	--select top (1) IdentificationCode
 --     from edfi.[StudentEducationOrganizationAssociationStudentIdentificationCode] x 
 --     join edFi.Descriptor d on d.DescriptorId=x.StudentIdentificationSystemDescriptorId 
 --    where x.StudentUSI=[edfi].[Student].StudentUSI and d.CodeValue='SSN' and d.[Namespace]='uri://ed-fi.org/StudentIdentificationSystemDescriptor'
	--),'--') 
	'--'
    )

    ,[EXCLUDE_FROM_REPORTING_IND]=convert(Char(1),
    '-'  -- Not mapped in original system
    )

    ,[FIRST_NAME]=convert(VarChar(35),
    [edfi].[Student].FirstName
    )

    ,[MIDDLE_NAME]=convert(VarChar(15),
    IsNull([edfi].[Student].MiddleName,'')
    )

    ,[LAST_NAME]=convert(VarChar(35),
    [edfi].[Student].LastSurname
    )

    ,[NAME_PREFIX]=convert(VarChar(10),
    IsNull([edfi].[Student].PersonalTitlePrefix,'')
    )

    ,[NAME_SUFFIX]=convert(VarChar(10),
    IsNull([edfi].[Student].GenerationCodeSuffix,'')
    )

    ,[FULL_NAME]=convert(VarChar(80),
    IsNull([edfi].[Student].FirstName+' ','') + 
	IsNull([edfi].[Student].MiddleName+' ','') + 
	IsNull([edfi].[Student].LastSurname,'') + 
	IsNull(' '+[edfi].[Student].GenerationCodeSuffix,'')
    )

    ,[PREFERRED_NAME]=convert(VarChar(50),
    IsNull((select FirstName 
			  from [edfi].[StudentOtherName] x 
			  join [edFi].[Descriptor] d on d.DescriptorId=x.OtherNameTypeDescriptorId 
			 where x.StudentUSI=[edfi].[Student].StudentUSI and d.CodeValue='Nickname'),'')
    )

    ,[SORT_NAME]=convert(VarChar(80),
	IsNull([edfi].[Student].LastSurname,'') + 
	IsNull(' '+[edfi].[Student].GenerationCodeSuffix,'')+','+
    IsNull(' '+[edfi].[Student].FirstName,'') + 
	IsNull(' '+[edfi].[Student].MiddleName,'')
    )

    ,[HOMEROOM_NBR]=convert(VarChar(25),
	IsNull((
		select top (1) x.SectionIdentifier
		  from [edfi].[StudentSectionAssociation] x
		  join [edfi].[StaffSectionAssociation] y on y.SchoolId=x.SchoolId and y.SchoolYear=x.SchoolYear and y.SectionIdentifier=x.SectionIdentifier
		  join [edfi].[Staff] z on z.StaffUSI=y.StaffUSI
		 where HomeroomIndicator=1 and x.StudentUSI=[edfi].[Student].StudentUSI and x.SchoolYear=[StudentSchoolAssociation_MostRecent].SchoolYear
	),'--')
    )

    ,[YEAR_ENTERED_9TH_GRADE]=convert(SmallInt,
    0  -- Marked for omission
    )

    ,[CLASS_OF]=convert(VarChar(20),
    [StudentSchoolAssociation_MostRecent].GraduationSchoolYear
    )

    ,[DIPLOMA_TYPE_CD]=convert(VarChar(30),
	IsNull((
	select top (1) dt.CodeValue
	  from [edfi].[StudentAcademicRecordDiploma] x
	  join [edfi].[Descriptor] dt on dt.DescriptorId=x.DiplomaTypeDescriptorId 
	  where StudentSchoolAssociation_MostRecent.StudentUSI = x.StudentUSI
		and StudentSchoolAssociation_MostRecent.LocalEducationAgencyId = x.EducationOrganizationId
	 	),'--')
    )

    ,[DIPLOMA_TYPE_DESC]=convert(VarChar(254),
	IsNull((
	select top (1) dt.[Description]
	  from [edfi].[StudentAcademicRecordDiploma] x
	  join [edfi].[Descriptor] dt on dt.DescriptorId=x.DiplomaTypeDescriptorId 
	  where StudentSchoolAssociation_MostRecent.StudentUSI = x.StudentUSI
		and StudentSchoolAssociation_MostRecent.LocalEducationAgencyId = x.EducationOrganizationId
	),'--')    --</MappingInfoStatus>
    )

    ,[GRAD_PROGRAM_CD]=convert(VarChar(30),
    '--' -- Marked for Omission 
    )

    ,[GRAD_PROGRAM_DESC]=convert(VarChar(254),
    '--' -- not mapped (omitted) 
    )

    ,[GIFTED_REF_CD]=convert(VarChar(30),
    '--'
    )

    ,[GIFTED_REF_DESC]=convert(VarChar(254),
    '--'
    )

    ,[GIFTED_ELIG_CD]=convert(VarChar(30),
    '--'
    )

    ,[GIFTED_ELIG_DESC]=convert(VarChar(254),
    '--'
    )

    ,[GIFTED_CONTENT_AREA_CD]=convert(VarChar(30),
    '--'
    )

    ,[GIFTED_CONTENT_AREA_DESC]=convert(VarChar(254),
    '--'
    )

    ,[GIFTED_DELIVERY_CD]=convert(VarChar(30),
    '--'
    )

    ,[GIFTED_DELIVERY_DESC]=convert(VarChar(254),
    '--'
    )

    ,[GRADE_LEVEL_CD]=convert(VarChar(30),
	IsNull((
	select top (1) [CodeValue] from @tempDescriptor d where [StudentSchoolAssociation_MostRecent].EntryGradeLevelDescriptorId = d.DescriptorId
    ),'--')
    )

    ,[GRADE_LEVEL_DESC]=convert(VarChar(254),
 	IsNull((
	select top (1) [Description] from @tempDescriptor d where [StudentSchoolAssociation_MostRecent].EntryGradeLevelDescriptorId = d.DescriptorId
    ),'--')
    )

    ,[GRADE_LEVEL_CD_SORT_ORDER]=convert(SmallInt,
    isnull([StudentSchoolAssociation_MostRecent].EntryGradeLevelDescriptorId,0) -- Order by the descriptor id for now
    )

    ,[GENDER_CD]=convert(VarChar(30),
    IsNull((
	select top (1) d.CodeValue from @tempDescriptor d where d.DescriptorId=[edfi].[StudentEducationOrganizationAssociation].SexDescriptorId 
	),'--')
    )

    ,[GENDER_DESC]=convert(VarChar(254),
    IsNull((
	select top (1) d.[Description] from @tempDescriptor d where d.DescriptorId=[edfi].[StudentEducationOrganizationAssociation].SexDescriptorId 
	),'--')
    )

    ,[GENDER_CD_SORT_ORDER]=convert(SmallInt,
    0
    )

    ,[RACE_CD]=convert(VarChar(30),
	isNull(convert(varchar(1),src.RaceCode),'--') -- added 4/30/2020
    )

    ,[RACE_DESC]=convert(VarChar(254),
	isNull(src.RaceDescription,'--') -- added 4/30/2020
    )

    ,[RACE_CD_SORT_ORDER]=convert(SmallInt,
 	0 --data governance confirmed field isnt needed (4/13/2020)
     )

    ,[COUNTY_OF_RESIDENCE_CD]=convert(VarChar(30),
    '--'  -- marked for omission
    )

    ,[BIRTH_DATE]=convert(Date,
    [edfi].[Student].BirthDate
    )

    ,[PLACE_OF_BIRTH]=convert(VarChar(80),
    IsNull([edfi].[Student].BirthCity,'--')
    )

    ,[STATE_OF_BIRTH]=convert(VarChar(80),
    IsNull((
	select top (1) d.[Description] from @tempDescriptor d where d.DescriptorId=[edfi].[Student].BirthStateAbbreviationDescriptorId 
	),'--')
    )

    ,[COUNTRY_OF_BIRTH]=convert(VarChar(80),
    IsNull((
	select top (1) d.[Description] from @tempDescriptor d where d.DescriptorId=[edfi].[Student].BirthCountryDescriptorId
	),'--')
    )

    ,[COUNTRY_OF_CITIZENSHIP]=convert(VarChar(80),
    '--'  -- Marked for Omission
    )

    ,[IMMIGRATION_STATUS]=convert(VarChar(45),
    isnull(helper.LEP_ELL_Immigrant,'--')
    )

    ,[US_DATE_OF_ENTRY]=convert(Date,
    isnull(helper.LEP_ELL_ImmigrantDate,'1753-01-01') -- Should be the student's immigration date. 
    )

    ,[MIGRANT_CD]=convert(VarChar(30),
	IsNull((
		select 'M'          
		from edfi.StudentEducationOrganizationAssociationStudentCharacteristic sc
		join edfi.descriptor d on d.DescriptorId=sc.[StudentCharacteristicDescriptorId]
	   where sc.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and sc.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	     and d.CodeValue='migrant')
	   ,'--')
    )

    ,[MIGRANT_DESC]=convert(VarChar(254),
    '--'  -- Omitted in Original DW
    )

    ,[MIGRANT_CD_SORT_ORDER]=convert(SmallInt,
    0  -- Omitted in Original DW
    )

    ,[PRIMARY_LANGUAGE_CD]=convert(VarChar(30),
    IsNull((
	hl.CodeValue
	),'--')
    )

    ,[PRIMARY_LANGUAGE_DESC]=convert(VarChar(254),
    IsNull((
	hl.LangDesc
	),'--')
    )

    ,[PRIMARY_LANGUAGE_CD_SORT_ORDER]=convert(SmallInt,
    0  -- Omitted in Original DW
    )

    ,[ENGLISH_PROFICIENCY_CD]=convert(VarChar(30),
    isnull(helper.LEP_ELL_LEPStatus,'-')
    )

    ,[ENGLISH_PROFICIENCY_DESC]=convert(VarChar(254),
    isnull(helper.LEP_ELL_LEPStatusDescription,'--')
    )

    ,[ENGLISH_PROFICIENCY_CD_SORT_ORDER]=convert(SmallInt,
    0 -- Omitted in Original DW
    )

    ,[FREE_REDUCED_MEAL_CD]=convert(VarChar(30),
    IsNull((
	select top (1) st.CodeValue
	  from [edfi].[StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService] x
	  join [edfi].[Descriptor] pt 
		on pt.DescriptorId=x.ProgramTypeDescriptorId and pt.CodeValue='' -- Insert Free-Reduced Meal Program Code Value here
	  join [edfi].[Descriptor] st on st.DescriptorId=x.SchoolFoodServiceProgramServiceDescriptorId
	 where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	   and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].EducationOrganizationId
	),'--') -- EdFi Source identified but no data for testing
    )

    ,[FREE_REDUCED_MEAL_DESC]=convert(VarChar(254),
    IsNull((
	select top (1) st.[Description]
	  from [edfi].[StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService] x
	  join [edfi].[Descriptor] pt 
		on pt.DescriptorId=x.ProgramTypeDescriptorId and pt.CodeValue='' -- Insert Free-Reduced Meal Program Code Value here
	  join [edfi].[Descriptor] st on st.DescriptorId=x.SchoolFoodServiceProgramServiceDescriptorId
	 where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	   and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].EducationOrganizationId
	),'--') -- EdFi Source identified but no data for testing
    )

    ,[FREE_REDUCED_MEAL_CD_SORT_ORDER]=convert(SmallInt,
    0 -- Omitted in Original DW
    )

    ,[PRIMARY_DISABILITY_CD]=convert(VarChar(30),
    IsNull((
	select top (1) dc.CodeValue
	  from [edfi].[StudentSpecialEducationProgramAssociationDisability] x 
	  join [edfi].[Descriptor] dc on dc.DescriptorId=x.DisabilityDescriptorId
	 where x.OrderofDisability=1 
	   and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--') 
    )

    ,[PRIMARY_DISABILITY_DESC]=convert(VarChar(254),
    IsNull((
	select top (1) dc.Description
	  from [edfi].[StudentSpecialEducationProgramAssociationDisability] x 
	  join [edfi].[Descriptor] dc on dc.DescriptorId=x.DisabilityDescriptorId
	 where x.OrderofDisability=1 
	   and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId 
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--') 
    )

    ,[PRIMARY_DISABILITY_CD_SORT_ORDER]=convert(SmallInt,
     0 -- Omitted in Original DW
     )

    ,[REMEDIAL_SERVICES_CD]=convert(VarChar(30),
     '--' -- Omitted in Original DW
     )

    ,[REMEDIAL_SERVICES_DESC]=convert(VarChar(254),
     '--' -- Omitted in Original DW
     )

    ,[REMEDIAL_SERVICES_CD_SORT_ORDER]=convert(SmallInt,
     0 -- Omitted in Original DW
     )

    ,[DISABILITY_IND]=convert(Char(1),
 	case when exists (
		select *
			from @tempStudentEducationOrganizationAssociationStudentIndicator si
			where si.StudentUSI = [StudentSchoolAssociation_MostRecent].StudentUSI
			  and si.EducationOrganizationId = [StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
			  and si.IndicatorName = 'Has IEP')
	   then 'Y' else 'N' end
    )

    ,[ECONOMICALLY_DISADVANTAGED_IND]=convert(Char(1),
    '-' -- 5/20/2020 data governance meeting - column is not needed
	--isnull(helper.DHSS_Programs_Disadvantaged,'-')
    )

    ,[ESOL_IND]=convert(Char(1),
    isnull(helper.LEP_ELL_ESOL,'-')
    )

    ,[GIFTED_IND]=convert(Char(1),
    '-' -- EdFi Source not yet found (either in Cohort or GeneralStudentProgramAssociation)
    )

    ,[LIMITED_ENGLISH_PROFICIENCY_IND]=convert(Char(1),
    isnull(helper.LEP_ELL_LEP_Flag,'-')
    )

    ,[MIGRANT_IND]=convert(Char(1),
	case when exists (
		select *          
		from edfi.StudentEducationOrganizationAssociationStudentCharacteristic sc
		join edfi.descriptor d on d.DescriptorId=sc.[StudentCharacteristicDescriptorId]
	   where sc.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and sc.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	     and d.CodeValue='migrant')
	   then 'Y' else 'N' end
    )

    ,[READING_INTERVENTION_IND]=convert(Char(1),
    '--' -- Omitted in Original DW
    )

    ,[TO_SCHOOL_BUS]=convert(VarChar(12),
    IsNull((
	select max(x.BusNumber)
	  from [edfi_de].[StudentTransportation] x
	  join edfi.descriptor d on d.DescriptorId=x.TravelDirectionDescriptorId
	 where d.CodeValue='T'
	   and x.LocalEducationAgencyId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--') 
     )

    ,[FROM_SCHOOL_BUS]=convert(VarChar(12),
     IsNull((
	select max(x.BusNumber) 
	  from [edfi_de].[StudentTransportation] x
	  join edfi.descriptor d on d.DescriptorId=x.TravelDirectionDescriptorId
	 where d.CodeValue='F'
	   and x.LocalEducationAgencyId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--') 
     )

    ,[REFUGE_IND]=convert(Char(1),
     '-' -- Omitted in Original DW
     )

    ,[SECTION_504_IND]=convert(Char(1),
     case when exists(
	select left(x.[Description],25)
	  from @tempStudent504ProgramAssociation x
	 where x.StudentUSI = StudentSchoolAssociation_MostRecent.StudentUSI and StudentSchoolAssociation_MostRecent.LocalEducationAgencyId = x.EducationOrganizationId
	   and EnrollOrderDesc = 1
	) then 'Y'
	else 'N' end
     )

    ,[TWENTYFIRST_IND]=convert(Char(1),
    --<MappingInfoStatus Status="A" Column="TWENTYFIRST_IND">
	   case when exists (
		select x.*
		  from edfi.StudentEducationOrganizationAssociationProgramParticipation x
		  join edfi.Descriptor d on d.DescriptorId=x.ProgramTypeDescriptorId and d.CodeValue='21st Century Participant'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId )
	   then 'Y' else 'N' end

 --   ,[21ST_IND]=convert(Char(1),
	--case when exists (
	--	select x.*
	--	  from edfi.StudentEducationOrganizationAssociationProgramParticipation x
	--	  join edfi.Descriptor d on d.DescriptorId=x.ProgramTypeDescriptorId and d.CodeValue='21st Century Participant'
	--   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	--     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId )
	--   then 'Y' else 'N' end
    )

    ,[ALT_ED_IND]=convert(Char(1),
    '-' -- Omitted in Original DW
    )

    ,[RECEIVED_GED_IND]=convert(Char(1),
    '-' -- Omitted in Original DW
    )

    ,[DISPLACED_HOMEMAKER_IND]=convert(Char(1),
	case when exists (
		select x.*
		  from [edfi].[StudentEducationOrganizationAssociationStudentCharacteristic] x
		  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentCharacteristicDescriptorId and d.CodeValue='Displaced Homemaker'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId )
	   then 'Y' else 'N' end
    )

    ,[STUDENT_WITH_CHILD_IND]=convert(Char(1),
	case when exists (
		select x.*
		  from [edfi].[StudentEducationOrganizationAssociationStudentCharacteristic] x
		  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentCharacteristicDescriptorId and d.CodeValue='Single Parent'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId)
	   then 'Y' else 'N' end
    )

    ,[TITLE1_IND]=convert(Char(1),
    '-' -- EdFi Source not yet found
    )

    ,[TOTAL_HS_UNITS]=convert(VarChar(10),
    '--' -- Omitted in Original DW
    )

    ,[HOMELESS_IND]=convert(Char(1),
	case when exists (
		select x.*
		  from [edfi].[StudentEducationOrganizationAssociationStudentCharacteristic] x
		  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentCharacteristicDescriptorId and d.CodeValue='Homeless'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId )
	   then 'Y' else 'N' end
    )

    ,[FED_ETHNICITY_RACE_CD]=convert(VarChar(30),
    	IsNull((select top (1) d.[CodeValue]
                   from [edfi_de].[StudentEducationOrganizationAssociationEthnicity] x 
                   join [edfi].[Descriptor] d on d.DescriptorId=x.FederalRaceDescriptorId
                  where x.StudentUSI=edfi.student.StudentUSI and d.Namespace='uri://doe.k12.de.us/RaceDescriptor/Federal'),'--')
     )

    ,[SEA_PRIMARY_RACE_CD]=convert(VarChar(30),
     '--' -- Omitted in Original DW
     )

    ,[TRUANCY_IND]=convert(Char(1),
    '-' -- Omitted in Original DW
    )

    ,[HOMELESS_CD]=convert(VarChar(30),
    '--' -- Omitted in Original DW
    )

    ,[HOMELESS_DESC]=convert(VarChar(254),
    '--' -- Omitted in Original DW
    )

    ,[UNACCOMPANIED_YOUTH_IND]=convert(Char(1),
	case when exists (
		select x.*
		  from [edfi].[StudentEducationOrganizationAssociationStudentCharacteristic] x
		  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentCharacteristicDescriptorId and d.CodeValue='Unaccompanied Youth'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId )
	   then 'Y' else 'N' end
     )

    ,[SERVICES_PROVIDED_IND]=convert(Char(1),
     '--' -- Omitted in Original DW
     )

    ,[HOMELESS_REASON_CD]=convert(VarChar(30),
     '--' -- Omitted in Original DW
     )

    ,[HOMELESS_REASON_DESC]=convert(VarChar(254),
     '--' -- Omitted in Original DW
     )

    ,[HISPANIC_LATINO_ETHNIC_IND]=convert(Char(1),
 	case when src.RaceCode = 0 then 'Y' else 'N' end -- updated 4/30/2020
     )

    ,[AMERICAN_INDIAN_OR_ALASKAN_NATIVE_RACE_IND]=convert(Char(1),
 	case when src.RaceCode = 1 then 'Y' else 'N' end -- updated 4/30/2020
     )

    ,[ASIAN_RACE_IND]=convert(Char(1),
	case when src.RaceCode = 6 then 'Y' else 'N' end -- updated 4/30/2020
    )

    ,[BLACK_OR_AFRICAN_AMERICAN_RACE_IND]=convert(Char(1),
	case when src.RaceCode = 2 then 'Y' else 'N' end -- updated 4/30/2020
    )

    ,[NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER_RACE_IND]=convert(Char(1),
	case when src.RaceCode = 7 then 'Y' else 'N' end -- updated 4/30/2020
    )

    ,[WHITE_RACE_IND]=convert(Char(1),
	case when src.RaceCode = 5 then 'Y' else 'N' end -- updated 4/30/2020
    )

    ,[MULTIPLE_RACE_IND]=convert(Char(1),
	case when src.RaceCode = 9 then 'Y' else 'N' end -- updated 4/30/2020
    )

    ,[PK_FUNDING_CD]=convert(VarChar(30),
    '--' -- Omitted in Original DW
    )

    ,[PK_FUNDING_DESC]=convert(VarChar(254),
    '--' -- Omitted in Original DW
    )

    ,[CALENDAR_CD]=convert(Char(3),
    --[StudentSchoolAssociation_MostRecent].CalendarCode
	  isnull(
 	 (--select top 1 a.calendarcode
	 select top 1 calendarTypeValue 
	  from @studentCalendarType a
	  where a.StudentUSI = [StudentSchoolAssociation_MostRecent].StudentUSI
	   and a.schoolID = [StudentSchoolAssociation_MostRecent].schoolID
	   and a.schoolYear = [StudentSchoolAssociation_MostRecent].schoolYear
	   and a.enrollorderdesc = 1
	  )
	 ,'-')

    )

    ,[LIMITED_ENGLISH_PROFICIENCY_FUNDING_CD]=convert(VarChar(30),
    '--' -- Omitted in Original DW
    )

    ,[LIMITED_ENGLISH_PROFICIENCY_FUNDING_DESC]=convert(VarChar(254),
    '--' -- Omitted in Original DW
    )

    ,[PREGED_LEVEL_CD]=convert(VarChar(30),
     '--' -- Omitted in Original DW
     )

    ,[PREGED_LEVEL_DESC]=convert(VarChar(254),
     '--' -- Omitted in Original DW
     )

    ,[DROP_REASON_CD]=convert(VarChar(30),
     IsNull((
	select top (1) d.CodeValue from @tempDescriptor d where d.DescriptorId=[StudentSchoolAssociation_MostRecent].ExitWithdrawTypeDescriptorId
	 and d.Description like '%dropout%'
	),'--') 
     )

    ,[DROP_REASON_DESC]=convert(VarChar(254),
     IsNull((
	select top (1) d.Description from @tempDescriptor d where d.DescriptorId=[StudentSchoolAssociation_MostRecent].ExitWithdrawTypeDescriptorId
	 and d.Description like '%dropout%'
	),'--') 
     )

    ,[GRADUATE_IND]=convert(Char(1),
 	case 
	when exists (
		select *
		  from [edfi].[StudentAcademicRecordDiploma] x
		  join [edfi].[Descriptor] dt on dt.DescriptorId=x.DiplomaTypeDescriptorId 
		 where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
		   and x.SchoolYear=[StudentSchoolAssociation_MostRecent].SchoolYear
		   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	) then 'Y' else 'N' end
    )

    ,[AT_RISK_IND]=convert(Char(1),
    IsNull((
	select top (1) case when Indicator = 'Yes' then 'Y' end
	  from @tempStudentEducationOrganizationAssociationStudentIndicator x
	 where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	   and x.IndicatorName='At_risk'
	),'N')
    )

    ,[IEP_REVIEW_DATE]=convert(Date,
    IsNull((
	select top (1) x.IEPReviewDate
	  from [edfi].[StudentSpecialEducationProgramAssociation] x
	 where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'9999-12-31')     
    )

    ,[LAST_EVALUATION_DATE]=convert(Date,
    IsNull((
	select top (1) x.LastEvaluationDate
	  from [edfi].[StudentSpecialEducationProgramAssociation] x
	 where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'9999-12-31') 
    )

    ,[GRADUATION_DATE]=convert(Date,
    IsNull((
	select top (1) x.DiplomaAwardDate
	  from [edfi].[StudentAcademicRecordDiploma] x
	  join [edfi].[Descriptor] dt on dt.DescriptorId=x.DiplomaTypeDescriptorId 
	 where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.SchoolYear=[StudentSchoolAssociation_MostRecent].SchoolYear
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'9999-12-31')  
    )

    ,[CAREER_OPTION_CD]=convert(VarChar(30),
    IsNull((
	select top (1) d.CodeValue 
	  from @tempStudentCTEProgramAssociationCTEProgram x
	  join [edfi].[Descriptor] d on d.DescriptorId=x.CareerPathwayDescriptorId
	 where x.ProgramEducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--')  
    )

    ,[CAREER_OPTION_DESC]=convert(VarChar(254),
    IsNull((
	select top (1) d.Description 
	  from @tempStudentCTEProgramAssociationCTEProgram x
	  join [edfi].[Descriptor] d on d.DescriptorId=x.CareerPathwayDescriptorId
	 where x.ProgramEducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--')  
    )

    ,[PASS_GEE_IND]=convert(Char(1),
    '-' -- Omitted in Original DW
    )

    ,[HISTORICAL_STATE_ID_NBR]=convert(Char(9),
    IsNull((
	select top (1) x.IdentificationCode
	from @tempStudentEducationOrganizationAssociationStudentIdentificationCode x
	where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	),'--')  
    )

    ,[BILINGUAL_IND]=convert(Char(1),
    isnull(helper.LEP_ELL_Bilingual_Ind,'-')
    )

    ,[HOMEROOM_TEACHER]=convert(VarChar(25),
	IsNull((
		select top (1) x.LastSurname+', '+x.FirstName
		from @tempStudentSectionAssociation x
		where x.StudentUSI=[edfi].[Student].StudentUSI and x.SchoolYear=[StudentSchoolAssociation_MostRecent].SchoolYear
	),'--')
    )

    ,[IMMIGRANT_IND]=convert(Char(1),
	isnull(helper.LEP_ELL_Immigrant,'-')
    )

    ,[REPEAT_FLAG]=convert(Char(1),
    case when helper.[REPEAT_FLAG]=1 then 'Y' else 'N' end
    )

    ,[SECTION_504_CD]=convert(VarChar(5),
    IsNull((
	select top (1) x.CodeValue
	  from @tempStudent504ProgramAssociation x
	  where x.StudentUSI = StudentSchoolAssociation_MostRecent.StudentUSI and x.EducationOrganizationId=StudentSchoolAssociation_MostRecent.LocalEducationAgencyId
	),'--')
    )

    ,[SECTION_504_DESC]=convert(VarChar(25),
    IsNull((
	select top (1) left(x.[Description],25)
	  from @tempStudent504ProgramAssociation x
	 where x.StudentUSI = StudentSchoolAssociation_MostRecent.StudentUSI and x.EducationOrganizationId=StudentSchoolAssociation_MostRecent.LocalEducationAgencyId
	),'--')
    )

    ,[SPECIAL_EDUCATION_EXIT_DATE]=convert(Date,
    IsNull((select top (1) x.enddate
		from @tempGeneralStudentProgramAssociation x
		where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	   ),'9999-12-31')
    )

    ,[SPECIAL_EDUCATION_EXIT_REASON_CD]=convert(Char(3),
        IsNull((select top (1) x.CodeValue
		from @tempGeneralStudentProgramAssociation x
		where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	   ),'--')
    )

    ,[SPECIAL_EDUCATION_EXIT_REASON_DESC]=convert(VarChar(80),
             IsNull((select top (1) x.Description
		from @tempGeneralStudentProgramAssociation x
		where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	   ),'--')
     )

    ,[SPECIAL_EDUCATION_HRS_PER_WEEK]=convert(Decimal(10,5),
     IsNull((
	select top (1) x.SchoolHoursPerWeek
		from [edfi].[StudentSpecialEducationProgramAssociation] x
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
		 and x.SpecialEducationSettingDescriptorId is not null
	),0.0)
     )

    ,[SPECIAL_EDUCATION_IND]=convert(Char(1),
	case when exists (
	   select x.*
		from [edfi].[StudentSpecialEducationProgramAssociation] x
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
		 and x.SpecialEducationSettingDescriptorId is not null )
	   then 'Y' else 'N' end
     )

    ,[SPECIAL_EDUCATION_PLACEMENT_3to5_CD]=convert(VarChar(5),
     helper.SPECIAL_EDUCATION_PLACEMENT_3to5_CD
     )

    ,[SPECIAL_EDUCATION_PLACEMENT_3to5_DESC]=convert(VarChar(50),
     helper.SPECIAL_EDUCATION_PLACEMENT_3to5_DESC
     )

    ,[SPECIAL_EDUCATION_PLACEMENT_6to21_CD]=convert(VarChar(5),
     helper.SPECIAL_EDUCATION_PLACEMENT_6to21_CD
     )

    ,[SPECIAL_EDUCATION_PLACEMENT_6to21_DESC]=convert(VarChar(50),
     helper.SPECIAL_EDUCATION_PLACEMENT_6to21_DESC
     )

    ,[SPECIAL_EDUCATION_SERVICES_CDS]=convert(VarChar(100),
     IsNull((
	select top (1) Stuff((
	select ','+x.CodeValue
	from @tempStudentSpecialEducationProgramAssociationSpecialEducationProgramService x
	 where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	 for xml path('')),1,1,'')
	),'--')
    )

    ,[SPECIAL_EDUCATION_SERVICES_DESC]=convert(VarChar(255),
    IsNull((
	select top (1) Stuff((
	select ','+x.Description
	from @tempStudentSpecialEducationProgramAssociationSpecialEducationProgramService x
	where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI 
	 for xml path('')),1,1,'')
	),'--')
    )

    ,[FOSTER_CARE_IND]=convert(Char(1),
	isnull(helper.FosterCare_Student_Ind,'-')
    )

    ,[HOME_LANGUAGE_CD]=convert(VarChar(10),
     IsNull((
	hl.CodeValue
	),'--')
    )

    ,[HOME_LANGUAGE_DESC]=convert(VarChar(30),
     IsNull((
	hl.LangDesc
	),'--')
     )

    ,[DEWS_ATT_IND]=convert(Char(1),
     helper.DEWS_ATT_IND
     )

    ,[DEWS_MATH_IND]=convert(Char(1),
     helper.DEWS_MATH_IND
     )

    ,[DEWS_ELA_IND]=convert(Char(1),
     helper.DEWS_ELA_IND
     )

    ,[DEWS_RETENTION_IND]=convert(Char(1),
     helper.DEWS_RETENTION_IND
     )

    ,[DIRECT_CERT_IND]=convert(Char(1),
    isnull(helper.DHSS_Programs_DirectCert,'-')
    )

    ,[STATE_GRADE_LEVEL_CD]=convert(VarChar(30),
    IsNull((
	select top (1) CodeValue from @tempDescriptor d where d.DescriptorId=[StudentSchoolAssociation_MostRecent].EntryGradeLevelDescriptorId
	),'--') 
    )

    ,[STATE_GRADE_LEVEL_DESC]=convert(VarChar(50),
    IsNull((
	select top 1 [Description] from @tempDescriptor d where d.DescriptorId=[StudentSchoolAssociation_MostRecent].EntryGradeLevelDescriptorId
	),'--') 
    )

    ,[DEWS_ATT_PCT]=convert(Decimal(9,5),
    helper.DEWS_ATT_PCT
    )

    ,[DEWS_MATH_VALUE]=convert(Decimal(9,5),
    helper.DEWS_MATH_VALUE
    )

    ,[DEWS_ELA_VALUE]=convert(Decimal(9,5),
    helper.DEWS_ELA_VALUE
    )

    ,[VALID_SCHOOL_IND]=convert(Char(1),
	case when list.SchoolId is null then 'N' else 'Y' end -- added 10/23/2020
    )

    ,[SOURCE_DELETED_IND]=convert(Char(1),
     'N'
     )

    ,[STATE_DROPOUT_IND]=convert(Char(1),
     case 
	when exists (
	select *
	  from @tempDescriptor d 
	 where d.DescriptorId=[StudentSchoolAssociation_MostRecent].ExitWithdrawTypeDescriptorId
	   and d.Description like '%dropout%'
	)
	then 'Y' else 'N' end
     )

    ,[STATE_DROPOUT_DESC]=convert(VarChar(30),
     IsNull((
	select top (1) d.Description
	  from @tempDescriptor d 
	 where d.DescriptorId=[StudentSchoolAssociation_MostRecent].ExitWithdrawTypeDescriptorId
	   and d.Description like '%dropout%'
	),'--')
     )

    ,[CAREER_PATHWAY_CONCENTRATOR_IND]=convert(VarChar(1),
     --'-' -- Marked for Extension
	isnull((select top (1) case when x.PrimaryCTEProgramIndicator = 1 and y.PathwayConcentrator = 1 then 'Y'
		when x.PrimaryCTEProgramIndicator = 1 and y.PathwayConcentrator = 0 then 'N'
		else '-' end
	  from [edfi].[StudentCTEProgramAssociationCTEProgram] x 
	  join [edfi_de].StudentCTEProgramAssociationCTEProgramExtension y
	  on y.StudentUSI = x.StudentUSI
	  and y.EducationOrganizationId = x.EducationOrganizationId
	  join [edfi].[Descriptor] d on d.DescriptorId=x.CareerPathwayDescriptorId
	   where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	 ),'-')
     )

    ,[CAREER_PATHWAY_COMPLETED_IND]=convert(VarChar(1),
     isnull((select top (1) case when x.PrimaryCTEProgramIndicator = 1 and x.CTEProgramCompletionIndicator = 1 then 'Y'
		when x.PrimaryCTEProgramIndicator = 1 and x.CTEProgramCompletionIndicator = 0 then 'N'
		else '-' end
	  from [edfi].[StudentCTEProgramAssociationCTEProgram] x 
	  join [edfi].[Descriptor] d on d.DescriptorId=x.CareerPathwayDescriptorId
	 where x.ProgramEducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
		)  ,'-')
    )

    ,[TECHPREP_PARTICIPANT_IND]=convert(VarChar(1),
    '-' -- Marked for Omission
    )

    ,[TECHPREP_COMPLETE_IND]=convert(VarChar(1),
    '-' -- Marked for Omission
    )

    ,[PASSED_ENDOFPATHWAY_ASSESSMENT_IND] =  '-'
	--convert(VarChar(1),
 --   isnull((select top (1) case when x.PrimaryCTEProgramIndicator = 1 and d.CodeValue = 'Passed EndofPathway Assessment' then 'Y'
	--	when x.PrimaryCTEProgramIndicator = 1 and d.CodeValue = 'Failed EndOfPathway Assessment' then 'N'
	--	else '-' end
	--  from [edfi].[StudentCTEProgramAssociationCTEProgram] x 
	--  join [edfi_de].StudentCTEProgramAssociationCTEProgramExtension y
	--  on y.StudentUSI = x.StudentUSI
	--  and y.EducationOrganizationId = x.EducationOrganizationId
	--  join [edfi].[Descriptor] d on d.DescriptorId = y.EndOfPathwayTechnicalSkillsAssessmentDescriptorId
	--  where x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	--   and x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	-- ),'-')
    --)
	 
    ,[PUBLIC_ASSISTANCE]=convert(Char(1),
     isnull(helper.DHSS_Programs_Public_Assistance,'-')
     )

    ,[MEDICAID]=convert(Char(1),
     helper.DHSS_Programs_Medicaid -- Non EdFi source
     )

    ,[FOOD_STAMPS]=convert(Char(1),
     isnull(helper.DHSS_Programs_Food_Stamps,'-')
     )

    ,[GENERAL_ASSISTANCE]=convert(Char(1),
     isnull(helper.DHSS_Programs_General_Assistance,'-')
     )

    ,[LOW_INCOME]=convert(Char(1),
     isnull(helper.DHSS_Programs_Low_Income,'-')
     )

    ,[NON_PUBLIC_CODE]=convert(Int,
 	  isnull( (select top (1) x.PrivateSchoolId 
		from [edfi_de].[StudentSpecialEducationProgramAssociationExtension] x
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId)
	    ,-1)
    )

    ,[IEP_INITIAL_DATE]=convert(Date,
    IsNull((
	select top (1) x.IEPBeginDate
		from [edfi].[StudentSpecialEducationProgramAssociation] x
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	),'1753-01-01')    
    )

    ,[IEP_END_DATE]=convert(Date,
     IsNull((
	select top (1) x.IEPEndDate
		from [edfi].[StudentSpecialEducationProgramAssociation] x
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	),'9999-12-31')    
     )

    ,[REGULAR_EDUCATION_HRS_PER_WEEK]=convert(Decimal(10,5),
	 0.0 -- fogbugz 22400 - Scott confirmed data not in EdFi by design
 --    IsNull((
	--select top (1) x.SchoolHoursPerWeek
	--	from [edfi].[StudentSpecialEducationProgramAssociation] x
	--   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	--     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	--),0.0)    
    )

    ,[DONOT_COUNT_FOR_DECEMBER_1]=convert(VarChar(1),
    case when exists (
		select *
			from [edfi_de].StudentSpecialEducationProgramAssociationExtension see
			where see.StudentUSI = [StudentSchoolAssociation_MostRecent].StudentUSI
			  and see.EducationOrganizationId = [StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
			  and see.SpecialEducationFundingCountException = 1 )
	then 'Y' else 'N' end
     )

    ,[MPI_Index]=convert(BigInt,
     [Student].MPI_Index
     )

    ,[PPT_IND]=convert(VarChar(1),
     '-' -- Totally deprecated in all environments.  Keeping for historical data.
     )

    ,[GENERAL_ED_IND]=convert(VarChar(1),
     '-'  
	/*Per data governance meeting 03-09-2020; dim_student_general_ed_ind isnât needed so thereâs no need to populate this field.*/
     )

    ,[FOSTER_CARE_EXIT_DATE]=convert(VarChar(10),
     helper.FosterCare_CUS_END
     )

    ,[FOSTER_CARE_CASEWORKER_FIRST_NAME]=convert(VarChar(35),
     isnull(helper.FosterCare_Caseworker_FirstName,'--')
     )

    ,[FOSTER_CARE_CASEWORKER_LAST_NAME]=convert(VarChar(35),
     isnull(helper.FosterCare_Caseworker_LastName,'--')
     )

    ,[FOSTER_CARE_CASEWORKER_PHONE]=convert(VarChar(50),
     isnull(helper.FosterCare_Phone,'--')
     )

    ,[ELL_INSTRUCTIONAL_TYPE_CD]=convert(VarChar(3),
     isnull(helper.LEP_ELL_TypeInstruction,'--')
     )

    ,[ELL_INSTRUCTIONAL_TYPE_DESC]=convert(VarChar(50),
     isnull(helper.LEP_ELL_TypeDesciption,'--')
     )

    ,[ACTIVE_FEDERAL]=convert(VarChar(1),
 	case when exists (
		select x.*
		  from [edfi].[StudentEducationOrganizationAssociationStudentCharacteristic] x
		  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentCharacteristicDescriptorId and d.CodeValue='Active Duty(Federal)'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId )
	   then 'Y' else 'N' end
     )

    ,[ACTIVE_RETIRED_RESERVES_FEDERAL_STATE]=convert(VarChar(1),
 	case when exists (
		select x.*
		  from [edfi].[StudentEducationOrganizationAssociationStudentCharacteristic] x
		  join [edfi].[Descriptor] d on d.DescriptorId=x.StudentCharacteristicDescriptorId and d.CodeValue='Active/Retired/Reserves(State)'
	   where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	     and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId)
	   then 'Y' else 'N' end
     )

    ,[STUDENT_COMMENTS]=convert(VarChar(255),
     null -- Reconsider ever bring any comments into a DW
     )

    ,[FERPA_OptOut_Value]=convert(VarChar(5),
 	IsNull((
	select top (1) d.CodeValue
	  from [edfi_de].StudentEducationOrganizationAssociationExtension x
	  join [edfi].[Descriptor] d on d.DescriptorId=x.FerpaOptOutDescriptorId 
	 where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	 and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	),'--')    
     )

    ,[FERPA_OptOut_Text]=convert(VarChar(100),
 	IsNull((
	select top (1) d.[Description]
	  from [edfi_de].StudentEducationOrganizationAssociationExtension x
	  join [edfi].[Descriptor] d on d.DescriptorId=x.FerpaOptOutDescriptorId 
	 where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	 and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	),'--') 
     )

    ,[FERPA_Address]=convert(VarChar(5),
 	case when [edfi_de].[StudentEducationOrganizationAssociationExtension].FerpaAddress = 1 then 'Y' else 'N' end
     )

    ,[FERPA_NAME]=convert(VarChar(5),
 	case when [edfi_de].[StudentEducationOrganizationAssociationExtension].FerpaName = 1 then 'Y' else 'N' end
     )

    ,[FERPA_PHONE]=convert(VarChar(5),
 	case when [edfi_de].[StudentEducationOrganizationAssociationExtension].FerpaPhone = 1 then 'Y' else 'N' end
     )

    ,[FERPA_PHOTO]=convert(VarChar(5),
     case when [edfi_de].[StudentEducationOrganizationAssociationExtension].FerpaPhoto = 1 then 'Y' else 'N' end
     )

    ,[FERPA_OptedOut]=convert(VarChar(5),
 	case when edfi_de.StudentEducationOrganizationAssociationExtension.FerpaAddress = 1
		   or edfi_de.StudentEducationOrganizationAssociationExtension.FerpaName = 1
		   or edfi_de.StudentEducationOrganizationAssociationExtension.FerpaPhone = 1
		   or edfi_de.StudentEducationOrganizationAssociationExtension.FerpaPhoto = 1
		   or edfi_de.StudentEducationOrganizationAssociationExtension.FerpaOptOutDescriptorId is not null
		   then 'Y' else 'N' end
     )

    ,[SECTION_504_EXIT_DT]=convert(Date,
     IsNull((
	select top (1) x.EndDate
	 from dbo.tempGeneralStudentProgramAssociation_ExitDate_trnsfrmDimStudent x
	 where x.StudentUSI=[StudentSchoolAssociation_MostRecent].StudentUSI
	 and x.EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
	),'9999-12-31')    
    )

    ,[MPI_UniqueID]=convert(VarChar(10),
    ''
    )

    ,[MERGED_PERSON_KEY]=convert(Int,
    0
    )

	,[LANGUAGE_IMMERSION_IND]=convert(char(1),
    case when exists (
		select li.*
		from dbo.tempStudentLanguageInstructionProgramAssociationLanguageImmersion_trnsfrmDimStudent li
		where li.StudentUSI = [StudentSchoolAssociation_MostRecent].StudentUSI
		  and li.ProgramEducationOrganizationId = [StudentSchoolAssociation_MostRecent].LocalEducationAgencyId
			   )
	then 'Y' else 'N' end
    )

    ,[CALENDAR_TYPE]=convert(Char(3),
    --<MappingInfoStatus Status="A" Column="CALENDAR_TYPE">
    isnull(
 	 (select top 1 a.calendarTypeValue
	  from @studentCalendarType a
	  where a.StudentUSI = [StudentSchoolAssociation_MostRecent].StudentUSI
	   and a.schoolID = [StudentSchoolAssociation_MostRecent].schoolID
	   and a.schoolYear = [StudentSchoolAssociation_MostRecent].schoolYear
	   and a.enrollorderdesc = 1
	  )
	 ,'-')

    --</MappingInfoStatus>
    )

    ,[Batch_Period]=convert(VarChar(50),
    [StudentSchoolAssociation_MostRecent].SchoolYear
    )

    ,[SAID]=convert(VarChar(30),
    [edfi].[Student].SAID
    )

    ,[Date_Stamp]=convert(DateTime2,
    convert(date,[StudentSchoolAssociation_MostRecent].LastModifiedDate)
    )
--into #tempStuff
  from [edfi].[Student]
  join (select EnrollOrderDesc=Row_Number() over (partition by ssa.SAID, ssa.SchoolYear, ssa.STUDENTUSI, ssa.SchoolId order by ssa.EntryDate desc), ssa.*, s.LocalEducationAgencyId
        from [edfi].[StudentSchoolAssociation] ssa
        join [edfi].[School] s on s.SchoolId=ssa.SchoolId
        join [edfi_de].[StudentSchoolAssociationExtension] ssae on ssae.SchoolId=ssa.SchoolId and ssae.StudentUSI=ssa.StudentUSI  and ssae.EntryDate = ssa.EntryDate
        join [edfi].[Descriptor] et on ssae.EnrollmentTypeDescriptorId = et.DescriptorId and et.CodeValue='C' -- Only current enrolled students
                   ) [StudentSchoolAssociation_MostRecent]
   on [StudentSchoolAssociation_MostRecent].EnrollOrderDesc=1 and [StudentSchoolAssociation_MostRecent].StudentUSI = [edfi].[Student].StudentUSI 
  join [edfi].[StudentEducationOrganizationAssociation] on [edfi].[StudentEducationOrganizationAssociation].StudentUSI=[edfi].[Student].StudentUSI
   and [edfi].[StudentEducationOrganizationAssociation].EducationOrganizationId=[StudentSchoolAssociation_MostRecent].LocalEducationAgencyId 
  join [dbo].[Dim_Student_Helper] helper on [helper].LOCAL_STUDENT_ID = [edfi].[Student].StudentUniqueId and helper.SCHOOLID = studentschoolAssociation_MostRecent.SchoolID
-- added 10/23/2020 begin
 left outer join list on [StudentSchoolAssociation_MostRecent].StudentUSI = list.StudentUSI
    and [StudentSchoolAssociation_MostRecent].SchoolId = list.SchoolId
	and list.rowNum = 1
-- added 10/23/2020 end
   left outer join @TV_HomeLanguage hl on hl.StudentUSI = edfi.Student.StudentUSI and hl.EducationOrganizationId = StudentSchoolAssociation_MostRecent.LocalEducationAgencyId

   left outer join (select realBuildingCode = b.EschoolBuilding
					 ,fakeBuildingCode = a.eschoolBuilding
					 ,a.schoolYear
			        from cdl.Building a
				     join cdl.school b on a.SchoolCode = b.SchoolCode
					  and a.SchoolYear = b.SchoolYear) bc on StudentSchoolAssociation_MostRecent.schoolID = bc.fakeBuildingCode
															and StudentSchoolAssociation_MostRecent.SchoolYear = bc.SchoolYear
   ---- added 12/16/2019 OES-PM FERPA COLUMNS ON HOLD
   left outer join [edfi_de].[StudentEducationOrganizationAssociationExtension] on [edfi_de].[StudentEducationOrganizationAssociationExtension].StudentUSI = [edfi].[StudentEducationOrganizationAssociation].StudentUSI
   and [edfi_de].[StudentEducationOrganizationAssociationExtension].EducationOrganizationId = [edfi].[StudentEducationOrganizationAssociation].EducationOrganizationId
   -- added 4/30/2020
    left outer join  @tvf_Edfi_SRC src on [StudentSchoolAssociation_MostRecent].StudentUSI = src.StudentUSI and [StudentSchoolAssociation_MostRecent].LocalEducationAgencyId = src.EducationOrganizationID

     WHERE (@Batch_Period_List='all' or [StudentSchoolAssociation_MostRecent].SchoolYear in (select Batch_Period from @BPLtable))
	and (IsNull(@SAID,'all') in ('all','any') or [edfi].[Student].SAID in (select SAID from @SAIDtable) )
 
--</MappingInfoCommon>
  --</MappingInfoFrom>
--</MappingInfo>
GO


