{
  "components": {
    "parameters": {
      "If-None-Match": {
        "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
        "in": "header",
        "name": "If-None-Match",
        "schema": {
          "type": "string"
        }
      },
      "MaxChangeVersion": {
        "description": "Used in synchronization to set sequence maximum ChangeVersion",
        "in": "query",
        "name": "maxChangeVersion",
        "schema": {
          "format": "int64",
          "type": "integer"
        }
      },
      "MinChangeVersion": {
        "description": "Used in synchronization to set sequence minimum ChangeVersion",
        "in": "query",
        "name": "minChangeVersion",
        "schema": {
          "format": "int64",
          "type": "integer"
        }
      },
      "fields": {
        "description": "Specifies a subset of properties that should be returned for each entity (e.g. \u0022property1,collection1(collProp1,collProp2)\u0022).",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "Indicates the maximum number of items that should be returned in the results.",
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 25,
          "format": "int32",
          "maximum": 500,
          "minimum": 0,
          "type": "integer"
        }
      },
      "numberOfPartitions": {
        "description": "The number of evenly distributed partitions to provide for client-side parallel processing. If unspecified, a reasonable set of partitions will be determined based on the total number of accessible items.",
        "in": "query",
        "name": "number",
        "schema": {
          "format": "int32",
          "maximum": 200,
          "minimum": 1,
          "type": "integer"
        }
      },
      "offset": {
        "description": "Indicates how many items should be skipped before returning results.",
        "in": "query",
        "name": "offset",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      },
      "pageSize": {
        "description": "The maximum number of items to retrieve in the page. For use with pageToken (cursor paging) only.",
        "in": "query",
        "name": "pageSize",
        "schema": {
          "default": 25,
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        }
      },
      "pageToken": {
        "description": "The token of the page to retrieve, obtained either from the \u0022Next-Page-Token\u0022 header of the previous request, or from the \u0022partitions\u0022 endpoint for the resource. Cannot be used with limit/offset paging.",
        "in": "query",
        "name": "pageToken",
        "schema": {
          "type": "string"
        }
      },
      "queryExpression": {
        "description": "Specifies a query filter expression for the request. Currently only supports range-based queries on dates and numbers (e.g. \u0022schoolId:[255901000...255901002]\u0022 and \u0022BeginDate:[2016-03-07...2016-03-10]\u0022).",
        "in": "query",
        "name": "q",
        "schema": {
          "type": "string"
        }
      },
      "totalCount": {
        "description": "Indicates if the total number of items available should be returned in the \u0027Total-Count\u0027 header of the response.  If set to false, \u0027Total-Count\u0027 header will not be provided. Must be false when using cursor paging (with pageToken).",
        "in": "query",
        "name": "totalCount",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {}
        },
        "description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or their values."
      },
      "Conflict": {
        "content": {
          "application/json": {}
        },
        "description": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
      },
      "Created": {
        "description": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
      },
      "Deleted": {
        "description": "The resource was successfully deleted."
      },
      "Error": {
        "content": {
          "application/json": {}
        },
        "description": "An unhandled error occurred on the server. See the response body for details."
      },
      "Forbidden": {
        "description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed."
      },
      "NotFound": {
        "description": "The resource could not be found."
      },
      "NotFoundUseSnapshot": {
        "description": "The resource could not be found. If Use-Snapshot header is set to true, this response can indicate the snapshot may have been removed."
      },
      "NotModified": {
        "description": "The resource\u0027s current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
      },
      "PreconditionFailed": {
        "description": "The resource\u0027s current server-side ETag value does not match the supplied If-Match header value in the request. This indicates the resource has been modified by another consumer."
      },
      "Unauthorized": {
        "description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed."
      },
      "Updated": {
        "description": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
      }
    },
    "schemas": {
      "EdFi_SchoolYearTypeReference": {
        "description": "A school year enumeration",
        "properties": {
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer"
          }
        },
        "required": [
          "schoolYear"
        ],
        "type": "object"
      },
      "EdFi_AcademicWeek": {
        "description": "This entity represents the academic weeks for a school year, optionally captured to support analyses.",
        "properties": {
          "beginDate": {
            "description": "The start date for the academic week.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The end date for the academic week.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "totalInstructionalDays": {
            "description": "The total instructional days during the academic week.",
            "minimum": 0,
            "type": "integer"
          },
          "weekIdentifier": {
            "description": "The school label for the week.",
            "maxLength": 80,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "schoolReference",
          "weekIdentifier",
          "beginDate",
          "endDate",
          "totalInstructionalDays"
        ],
        "type": "object"
      },
      "EdFi_AcademicWeek_Reference": {
        "properties": {
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "weekIdentifier": {
            "description": "The school label for the week.",
            "maxLength": 80,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "schoolId",
          "weekIdentifier"
        ],
        "type": "object"
      },
      "EdFi_AccountabilityRating": {
        "description": "An accountability rating for a school or district.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "rating": {
            "description": "An accountability rating level, designation, or assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "ratingDate": {
            "description": "The date the rating was awarded.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "ratingOrganization": {
            "description": "The organization that assessed the rating.",
            "maxLength": 35,
            "type": "string",
            "x-nullable": true
          },
          "ratingProgram": {
            "description": "The program associated with the accountability rating (e.g., NCLB, AEIS).",
            "maxLength": 30,
            "type": "string",
            "x-nullable": true
          },
          "ratingTitle": {
            "description": "The title of the rating.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationReference",
          "ratingTitle",
          "rating",
          "schoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_AccountabilityRating_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingTitle": {
            "description": "The title of the rating.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "ratingTitle",
          "schoolYear"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministrationParticipation": {
        "description": "Identifies the point of contact for the administration of an assessment under the purview of an education organization.",
        "properties": {
          "administrationPointOfContacts": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentAdministrationParticipation_AdministrationPointOfContact"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentAdministrationReference": {
            "$ref": "#/components/schemas/EdFi_AssessmentAdministration_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "participatingEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentAdministrationReference",
          "participatingEducationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministrationParticipation_AdministrationPointOfContact": {
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference"
          },
          "electronicMailAddress": {
            "description": "The email address for the contact.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string"
          },
          "firstName": {
            "description": "The contact\u0027s first name.",
            "maxLength": 75,
            "type": "string"
          },
          "lastSurname": {
            "description": "The contact\u0027s last name.",
            "maxLength": 75,
            "type": "string"
          },
          "loginId": {
            "description": "The login ID for the user; used for security access control interface.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "educationOrganizationReference",
          "electronicMailAddress",
          "firstName",
          "lastSurname"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministrationParticipation_Reference": {
        "properties": {
          "administrationIdentifier": {
            "description": "The title or name of the assessment in the context of its administration.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "participatingEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "administrationIdentifier",
          "assessmentIdentifier",
          "namespace",
          "assigningEducationOrganizationId",
          "participatingEducationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministration": {
        "description": "The anticipated administration of an assessment under the purview of an education organization.",
        "properties": {
          "administrationIdentifier": {
            "description": "The title or name of the assessment in the context of its administration.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentBatteryParts": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentAdministration_AssessmentBatteryPart"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentAdministration_AssessmentAdministrationPeriod"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "assigningEducationOrganizationReference",
          "assessmentReference",
          "administrationIdentifier"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministration_AssessmentAdministrationPeriod": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministration_AssessmentBatteryPart": {
        "properties": {
          "assessmentBatteryPartReference": {
            "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart_Reference"
          }
        },
        "required": [
          "assessmentBatteryPartReference"
        ],
        "type": "object"
      },
      "EdFi_AssessmentAdministration_Reference": {
        "properties": {
          "administrationIdentifier": {
            "description": "The title or name of the assessment in the context of its administration.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "administrationIdentifier",
          "assessmentIdentifier",
          "namespace",
          "assigningEducationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_AssessmentBatteryPart": {
        "description": "The parts organized for administering an assessessment which together provide a comprehensive assessment of the students.",
        "properties": {
          "assessmentBatteryPartName": {
            "description": "The name of the part of an assessment battery.",
            "maxLength": 65,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveAssessments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart_ObjectiveAssessment"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "assessmentReference",
          "assessmentBatteryPartName"
        ],
        "type": "object"
      },
      "EdFi_AssessmentBatteryPart_ObjectiveAssessment": {
        "properties": {
          "objectiveAssessmentReference": {
            "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_Reference"
          }
        },
        "required": [
          "objectiveAssessmentReference"
        ],
        "type": "object"
      },
      "EdFi_AssessmentBatteryPart_Reference": {
        "properties": {
          "assessmentBatteryPartName": {
            "description": "The name of the part of an assessment battery.",
            "maxLength": 65,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentIdentifier",
          "namespace",
          "assessmentBatteryPartName"
        ],
        "type": "object"
      },
      "EdFi_AssessmentItem": {
        "description": "This entity represents one of many single measures that make up an assessment.",
        "properties": {
          "assessmentItemCategoryDescriptor": {
            "description": "Category or type of the assessment item.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "assessmentItemURI": {
            "description": "The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "expectedTimeAssessed": {
            "description": "The duration allotted for the assessment item expressed in minutes.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "itemText": {
            "description": "The text of the item.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "learningStandards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentItem_LearningStandard"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxRawScore": {
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "nomenclature": {
            "description": "Reflects the specific nomenclature used for assessment item.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "possibleResponses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentItem_PossibleResponse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "identificationCode",
          "assessmentReference"
        ],
        "type": "object"
      },
      "EdFi_AssessmentItem_LearningStandard": {
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_AssessmentItem_PossibleResponse": {
        "properties": {
          "correctResponse": {
            "description": "Indicates the response is correct.",
            "type": "boolean"
          },
          "responseDescription": {
            "description": "Additional text provided to define the response value.",
            "maxLength": 1024,
            "type": "string"
          },
          "responseValue": {
            "description": "The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "responseValue"
        ],
        "type": "object"
      },
      "EdFi_AssessmentItem_Reference": {
        "properties": {
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentIdentifier",
          "namespace",
          "identificationCode"
        ],
        "type": "object"
      },
      "EdFi_AssessmentScoreRangeLearningStandard": {
        "description": "Score ranges of an assessment associated with one or more learning standards.",
        "properties": {
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentReportingMethodDescriptor": {
            "description": "The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "learningStandards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_AssessmentScoreRangeLearningStandard_LearningStandard"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "maximumScore": {
            "description": "The maximum score in the score range.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score in the score range.",
            "maxLength": 35,
            "type": "string"
          },
          "objectiveAssessmentReference": {
            "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_Reference",
            "x-nullable": true
          },
          "scoreRangeId": {
            "description": "A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentReference",
          "learningStandards",
          "scoreRangeId",
          "minimumScore",
          "maximumScore"
        ],
        "type": "object"
      },
      "EdFi_AssessmentScoreRangeLearningStandard_LearningStandard": {
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_AssessmentScoreRangeLearningStandard_Reference": {
        "properties": {
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "scoreRangeId": {
            "description": "A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentIdentifier",
          "namespace",
          "scoreRangeId"
        ],
        "type": "object"
      },
      "EdFi_Assessment": {
        "description": "This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student\u0027s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_AcademicSubject"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "adaptiveAssessment": {
            "description": "Indicates that the assessment is adaptive.",
            "type": "boolean",
            "x-nullable": true
          },
          "assessedGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_AssessedGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentCategoryDescriptor": {
            "description": "The category of an assessment based on format and content.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "assessmentFamily": {
            "description": "The assessment family this assessment is a member of.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "assessmentForm": {
            "description": "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentTitle": {
            "description": "The title or name of the assessment.",
            "maxLength": 255,
            "type": "string"
          },
          "assessmentVersion": {
            "description": "The version identifier for the assessment.",
            "type": "integer",
            "x-nullable": true
          },
          "contentStandard": {
            "$ref": "#/components/schemas/EdFi_Assessment_ContentStandard",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_AssessmentIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_Language"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxRawScore": {
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "nomenclature": {
            "description": "Reflects the specific nomenclature used for assessment.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "performanceLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_AssessmentPerformanceLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_AssessmentPeriod"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "platformTypes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_PlatformType"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_SectionOrProgramChoice_Program"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "revisionDate": {
            "description": "The month, day, and year that the conceptual design for the assessment was most recently revised substantially.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "scores": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_AssessmentScore"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_SectionOrProgramChoice_Section"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "assessmentIdentifier",
          "assessmentTitle",
          "academicSubjects",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_Assessment_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_AssessedGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_AssessmentIdentificationCode": {
        "properties": {
          "assessmentIdentificationSystemDescriptor": {
            "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "assigningOrganizationIdentificationCode": {
            "description": "The organization code or name assigning the assessment identification code.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "assessmentIdentificationSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_AssessmentPerformanceLevel": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "maximumScore": {
            "description": "The maximum score to make the indicated level of performance.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score required to make the indicated level of performance.",
            "maxLength": 35,
            "type": "string"
          },
          "performanceLevelDescriptor": {
            "description": "The performance level(s) defined for the assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "performanceLevelIndicatorName": {
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "maxLength": 60,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "performanceLevelDescriptor",
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_AssessmentPeriod": {
        "properties": {
          "assessmentPeriodDescriptor": {
            "description": "The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).",
            "maxLength": 306,
            "type": "string"
          },
          "beginDate": {
            "description": "The first date the assessment is to be administered.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The last date the assessment is to be administered.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "assessmentPeriodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_AssessmentScore": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "maximumScore": {
            "description": "The maximum score possible on the assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score possible on the assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_Author": {
        "properties": {
          "author": {
            "description": "The person or organization chiefly responsible for the intellectual content of the standard.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "author"
        ],
        "type": "object"
      },
      "EdFi_Assessment_ContentStandard": {
        "properties": {
          "authors": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Assessment_Author"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "beginDate": {
            "description": "The beginning of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The end of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "mandatingEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference"
          },
          "publicationDate": {
            "description": "The date on which this content was first published.",
            "format": "date",
            "type": "string"
          },
          "publicationStatusDescriptor": {
            "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
            "maxLength": 306,
            "type": "string"
          },
          "publicationYear": {
            "description": "The year at which this content was first published.",
            "type": "integer"
          },
          "title": {
            "description": "The name of the content standard, for example Common Core.",
            "maxLength": 75,
            "type": "string"
          },
          "uri": {
            "description": "An unambiguous reference to the standards using a network-resolvable URI.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "version": {
            "description": "The version identifier for the content.",
            "maxLength": 50,
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "EdFi_Assessment_Language": {
        "properties": {
          "languageDescriptor": {
            "description": "An indication of the languages in which the assessment is designed.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "languageDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_PlatformType": {
        "properties": {
          "platformTypeDescriptor": {
            "description": "The platforms with which the assessment may be delivered.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "platformTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Assessment_Reference": {
        "properties": {
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentIdentifier",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_Assessment_SectionOrProgramChoice_Program": {
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference"
          }
        },
        "required": [
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_Assessment_SectionOrProgramChoice_Section": {
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference"
          }
        },
        "required": [
          "sectionReference"
        ],
        "type": "object"
      },
      "EdFi_BalanceSheetDimension": {
        "description": "The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time.",
        "properties": {
          "code": {
            "description": "The code representation of the account balance sheet dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account balance sheet dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_BalanceSheetDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_BalanceSheetDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account balance sheet dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_BalanceSheetDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_BellSchedule": {
        "description": "This entity represents the schedule of class period meeting times.",
        "properties": {
          "alternateDayName": {
            "description": "An alternate name for the day (e.g., Red, Blue).",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "bellScheduleName": {
            "description": "Name or title of the bell schedule.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "classPeriods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_BellSchedule_ClassPeriod"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "dates": {
            "items": {
              "$ref": "#/components/schemas/EdFi_BellSchedule_Date"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "endTime": {
            "description": "An indication of the time of day the bell schedule ends.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_BellSchedule_GradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "startTime": {
            "description": "An indication of the time of day the bell schedule begins.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "totalInstructionalTime": {
            "description": "The total instructional time in minutes per day for the bell schedule.",
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "bellScheduleName",
          "schoolReference",
          "classPeriods"
        ],
        "type": "object"
      },
      "EdFi_BellSchedule_ClassPeriod": {
        "properties": {
          "classPeriodReference": {
            "$ref": "#/components/schemas/EdFi_ClassPeriod_Reference"
          }
        },
        "required": [
          "classPeriodReference"
        ],
        "type": "object"
      },
      "EdFi_BellSchedule_Date": {
        "properties": {
          "date": {
            "description": "The dates for which the bell schedule applies.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "date"
        ],
        "type": "object"
      },
      "EdFi_BellSchedule_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels the particular bell schedule applies to.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_BellSchedule_Reference": {
        "properties": {
          "bellScheduleName": {
            "description": "Name or title of the bell schedule.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "bellScheduleName",
          "schoolId"
        ],
        "type": "object"
      },
      "EdFi_CalendarDate": {
        "description": "The type of scheduled or unscheduled event for the day.",
        "properties": {
          "calendarEvents": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CalendarDate_CalendarEvent"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "calendarReference": {
            "$ref": "#/components/schemas/EdFi_Calendar_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "date": {
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "date",
          "calendarEvents",
          "calendarReference"
        ],
        "type": "object"
      },
      "EdFi_CalendarDate_CalendarEvent": {
        "properties": {
          "calendarEventDescriptor": {
            "description": "The type of scheduled or unscheduled event for the day.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "calendarEventDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CalendarDate_Reference": {
        "properties": {
          "calendarCode": {
            "description": "The identifier for the calendar.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "date": {
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "calendarCode",
          "schoolId",
          "schoolYear",
          "date"
        ],
        "type": "object"
      },
      "EdFi_Calendar": {
        "description": "A set of dates associated with an organization.",
        "properties": {
          "calendarCode": {
            "description": "The identifier for the calendar.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "calendarTypeDescriptor": {
            "description": "Indicates the type of calendar.",
            "maxLength": 306,
            "type": "string"
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Calendar_GradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "calendarCode",
          "calendarTypeDescriptor",
          "schoolReference",
          "schoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_Calendar_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "Indicates the grade level associated with the calendar.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Calendar_Reference": {
        "properties": {
          "calendarCode": {
            "description": "The identifier for the calendar.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "calendarCode",
          "schoolId",
          "schoolYear"
        ],
        "type": "object"
      },
      "EdFi_ChartOfAccount": {
        "description": "A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.",
        "properties": {
          "accountIdentifier": {
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "accountName": {
            "description": "A descriptive name for the account.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "accountTypeDescriptor": {
            "description": "The type of account used in accounting such as revenue, expenditure, or balance sheet.",
            "maxLength": 306,
            "type": "string"
          },
          "balanceSheetDimensionReference": {
            "$ref": "#/components/schemas/EdFi_BalanceSheetDimension_Reference",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "functionDimensionReference": {
            "$ref": "#/components/schemas/EdFi_FunctionDimension_Reference",
            "x-nullable": true
          },
          "fundDimensionReference": {
            "$ref": "#/components/schemas/EdFi_FundDimension_Reference",
            "x-nullable": true
          },
          "objectDimensionReference": {
            "$ref": "#/components/schemas/EdFi_ObjectDimension_Reference",
            "x-nullable": true
          },
          "operationalUnitDimensionReference": {
            "$ref": "#/components/schemas/EdFi_OperationalUnitDimension_Reference",
            "x-nullable": true
          },
          "programDimensionReference": {
            "$ref": "#/components/schemas/EdFi_ProgramDimension_Reference",
            "x-nullable": true
          },
          "projectDimensionReference": {
            "$ref": "#/components/schemas/EdFi_ProjectDimension_Reference",
            "x-nullable": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ChartOfAccount_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sourceDimensionReference": {
            "$ref": "#/components/schemas/EdFi_SourceDimension_Reference",
            "x-nullable": true
          }
        },
        "required": [
          "accountIdentifier",
          "fiscalYear",
          "educationOrganizationReference",
          "accountTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ChartOfAccount_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ChartOfAccount_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.",
            "maxLength": 306,
            "type": "string"
          },
          "tagValue": {
            "description": "The value associated with the reporting tag.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ClassPeriod": {
        "description": "This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.",
        "properties": {
          "classPeriodName": {
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "meetingTimes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ClassPeriod_MeetingTime"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "officialAttendancePeriod": {
            "description": "Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.",
            "type": "boolean",
            "x-nullable": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "schoolReference",
          "classPeriodName"
        ],
        "type": "object"
      },
      "EdFi_ClassPeriod_MeetingTime": {
        "properties": {
          "endTime": {
            "description": "An indication of the time of day the meeting time ends.",
            "format": "time",
            "type": "string"
          },
          "startTime": {
            "description": "An indication of the time of day the meeting time begins.",
            "format": "time",
            "type": "string"
          }
        },
        "required": [
          "startTime",
          "endTime"
        ],
        "type": "object"
      },
      "EdFi_ClassPeriod_Reference": {
        "properties": {
          "classPeriodName": {
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "classPeriodName",
          "schoolId"
        ],
        "type": "object"
      },
      "EdFi_Cohort": {
        "description": "This entity represents any type of list of designated students for tracking, analysis, or intervention.",
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The academic subject associated with an academic intervention.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "cohortDescription": {
            "description": "The description of the cohort and its purpose.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "cohortIdentifier": {
            "description": "The name or ID for the cohort.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortScopeDescriptor": {
            "description": "The scope of cohort (e.g., school, district, classroom).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "cohortTypeDescriptor": {
            "description": "The type of cohort (e.g., academic intervention, classroom breakout).",
            "maxLength": 306,
            "type": "string"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Cohort_Program"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "cohortIdentifier",
          "cohortTypeDescriptor",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_Cohort_Program": {
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference"
          }
        },
        "required": [
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_Cohort_Reference": {
        "properties": {
          "cohortIdentifier": {
            "description": "The name or ID for the cohort.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "cohortIdentifier",
          "educationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_CommunityOrganization": {
        "description": "This entity represents an administrative unit at the state level which exists primarily to operate local community providers.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "communityOrganizationId": {
            "description": "The identifier assigned to a community organization. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "communityOrganizationId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_CommunityOrganization_Reference": {
        "properties": {
          "communityOrganizationId": {
            "description": "The identifier assigned to a community organization. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "communityOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_Address": {
        "properties": {
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "apartmentRoomSuiteNumber": {
            "description": "The apartment, room, or suite number of an address.",
            "maxLength": 50,
            "type": "string"
          },
          "buildingSiteNumber": {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "maxLength": 20,
            "type": "string"
          },
          "city": {
            "description": "The name of the city in which an address is located.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "congressionalDistrict": {
            "description": "The congressional district in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "countyFIPSCode": {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "doNotPublishIndicator": {
            "description": "An indication that the address should not be published.",
            "type": "boolean"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "localeDescriptor": {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "maxLength": 306,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "nameOfCounty": {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "postalCode": {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "maxLength": 17,
            "type": "string"
          },
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "maxLength": 306,
            "type": "string"
          },
          "streetNumberName": {
            "description": "The street number and street name or post office box number of an address.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "streetNumberName",
          "city",
          "stateAbbreviationDescriptor",
          "postalCode",
          "addressTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_EducationOrganizationCategory": {
        "properties": {
          "educationOrganizationCategoryDescriptor": {
            "description": "The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "educationOrganizationCategoryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_EducationOrganizationIdentificationCode": {
        "properties": {
          "educationOrganizationIdentificationSystemDescriptor": {
            "description": "The school system, state, or agency assigning the identification code.",
            "maxLength": 306,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "educationOrganizationIdentificationSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_EducationOrganizationIndicator": {
        "properties": {
          "designatedBy": {
            "description": "The person, organization, or department that defined the metric.",
            "maxLength": 60,
            "type": "string"
          },
          "indicatorDescriptor": {
            "description": "The name or code for the indicator or metric.",
            "maxLength": 306,
            "type": "string"
          },
          "indicatorGroupDescriptor": {
            "description": "The name for a group of indicators.",
            "maxLength": 306,
            "type": "string"
          },
          "indicatorLevelDescriptor": {
            "description": "The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is \u0022not submitted.\u0022",
            "maxLength": 306,
            "type": "string"
          },
          "indicatorValue": {
            "description": "The value of the indicator or metric. The semantics of an empty value is \u0022not submitted.\u0022",
            "maxLength": 60,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "indicatorDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_InstitutionTelephone": {
        "properties": {
          "institutionTelephoneNumberTypeDescriptor": {
            "description": "The type of communication number listed for an individual or organization.",
            "maxLength": 306,
            "type": "string"
          },
          "telephoneNumber": {
            "description": "The telephone number including the area code, and extension, if applicable.",
            "maxLength": 24,
            "type": "string"
          }
        },
        "required": [
          "telephoneNumber",
          "institutionTelephoneNumberTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_InternationalAddress": {
        "properties": {
          "addressLine1": {
            "description": "The first line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine4": {
            "description": "The fourth line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "beginDate": {
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "countryDescriptor": {
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "endDate": {
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "addressTypeDescriptor",
          "addressLine1",
          "countryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_Period": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_CommunityProviderLicense": {
        "description": "The legal document held by the community provider that authorizes the holder to perform certain functions and or services.",
        "properties": {
          "authorizedFacilityCapacity": {
            "description": "The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.",
            "type": "integer",
            "x-nullable": true
          },
          "communityProviderReference": {
            "$ref": "#/components/schemas/EdFi_CommunityProvider_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "licenseEffectiveDate": {
            "description": "The month, day, and year on which a license is active or becomes effective.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "licenseExpirationDate": {
            "description": "The month, day, and year on which a license will expire.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "licenseIdentifier": {
            "description": "The unique identifier issued by the licensing organization.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "licenseIssueDate": {
            "description": "The month, day, and year on which an active license was issued.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "licenseStatusDescriptor": {
            "description": "An indication of the status of the license.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "licenseTypeDescriptor": {
            "description": "An indication of the category of the license.",
            "maxLength": 306,
            "type": "string"
          },
          "licensingOrganization": {
            "description": "The organization issuing the license.",
            "maxLength": 75,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "oldestAgeAuthorizedToServe": {
            "description": "The oldest age of children a provider is authorized or licensed to serve.",
            "type": "integer",
            "x-nullable": true
          },
          "youngestAgeAuthorizedToServe": {
            "description": "The youngest age of children a provider is authorized or licensed to serve.",
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "communityProviderReference",
          "licenseIdentifier",
          "licensingOrganization",
          "licenseEffectiveDate",
          "licenseTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CommunityProviderLicense_Reference": {
        "properties": {
          "communityProviderId": {
            "description": "The identifier assigned to a community provider. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "licenseIdentifier": {
            "description": "The unique identifier issued by the licensing organization.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "licensingOrganization": {
            "description": "The organization issuing the license.",
            "maxLength": 75,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "communityProviderId",
          "licenseIdentifier",
          "licensingOrganization"
        ],
        "type": "object"
      },
      "EdFi_CommunityProvider": {
        "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "communityOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_CommunityOrganization_Reference",
            "x-nullable": true
          },
          "communityProviderId": {
            "description": "The identifier assigned to a community provider. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "licenseExemptIndicator": {
            "description": "An indication of whether the provider is exempt from having a license.",
            "type": "boolean",
            "x-nullable": true
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "providerCategoryDescriptor": {
            "description": "Indicates the category of the provider.",
            "maxLength": 306,
            "type": "string"
          },
          "providerProfitabilityDescriptor": {
            "description": "Indicates the profitability status of the provider.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "providerStatusDescriptor": {
            "description": "Indicates the status of the provider.",
            "maxLength": 306,
            "type": "string"
          },
          "schoolIndicator": {
            "description": "An indication of whether the community provider is a school.",
            "type": "boolean",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "communityProviderId",
          "providerStatusDescriptor",
          "providerCategoryDescriptor",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_CommunityProvider_Reference": {
        "properties": {
          "communityProviderId": {
            "description": "The identifier assigned to a community provider. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "communityProviderId"
        ],
        "type": "object"
      },
      "EdFi_CompetencyObjective": {
        "description": "This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).",
        "properties": {
          "competencyObjectiveId": {
            "description": "The Identifier for the competency objective.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "description": {
            "description": "The description of the student competency objective.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "description": "The designated title of the competency objective.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "description": "The grade level for which the competency objective is targeted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "successCriteria": {
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.",
            "maxLength": 150,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "objective",
          "objectiveGradeLevelDescriptor",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_CompetencyObjective_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "description": "The designated title of the competency objective.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "description": "The grade level for which the competency objective is targeted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "objective",
          "objectiveGradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact": {
        "description": "This entity represents a contact of a student, such as a parent, guardian or caretaker.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "contactUniqueId": {
            "description": "A unique alphanumeric code assigned to a contact.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMails": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_ElectronicMail"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "genderIdentity": {
            "description": "The gender the contact identifies themselves as.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string",
            "x-nullable": true
          },
          "highestCompletedLevelOfEducationDescriptor": {
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_Language"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "loginId": {
            "description": "The login ID for the user; used for security access control interface.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "maidenName": {
            "description": "The individual\u0027s maiden name.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "otherNames": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_OtherName"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-nullable": true
          },
          "personalIdentificationDocuments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_Name_PersonalIdentificationDocument"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string",
            "x-nullable": true
          },
          "preferredFirstName": {
            "description": "The first name the individual prefers, if different from their legal first name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "description": "The last name the individual prefers, if different from their legal last name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "sexDescriptor": {
            "description": "A person\u0027s birth sex.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-deprecatedReasons": "The descriptor will be removed from the Ed-Fi core with Data Standard v7.0",
            "x-Ed-Fi-isDeprecated": true,
            "x-nullable": true
          },
          "telephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_Telephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "contactUniqueId",
          "firstName",
          "lastSurname"
        ],
        "type": "object"
      },
      "EdFi_Contact_Address": {
        "properties": {
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "apartmentRoomSuiteNumber": {
            "description": "The apartment, room, or suite number of an address.",
            "maxLength": 50,
            "type": "string"
          },
          "buildingSiteNumber": {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "maxLength": 20,
            "type": "string"
          },
          "city": {
            "description": "The name of the city in which an address is located.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "congressionalDistrict": {
            "description": "The congressional district in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "countyFIPSCode": {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "doNotPublishIndicator": {
            "description": "An indication that the address should not be published.",
            "type": "boolean"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "localeDescriptor": {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "maxLength": 306,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "nameOfCounty": {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "postalCode": {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "maxLength": 17,
            "type": "string"
          },
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "maxLength": 306,
            "type": "string"
          },
          "streetNumberName": {
            "description": "The street number and street name or post office box number of an address.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "streetNumberName",
          "city",
          "stateAbbreviationDescriptor",
          "postalCode",
          "addressTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_ElectronicMail": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the electronic email address should not be published.",
            "type": "boolean"
          },
          "electronicMailAddress": {
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string"
          },
          "electronicMailTypeDescriptor": {
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "primaryEmailAddressIndicator": {
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "type": "boolean"
          }
        },
        "required": [
          "electronicMailAddress",
          "electronicMailTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_InternationalAddress": {
        "properties": {
          "addressLine1": {
            "description": "The first line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine4": {
            "description": "The fourth line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "beginDate": {
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "countryDescriptor": {
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "endDate": {
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "addressTypeDescriptor",
          "addressLine1",
          "countryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_Language": {
        "properties": {
          "languageDescriptor": {
            "description": "A specification of which written or spoken communication is being used.",
            "maxLength": 306,
            "type": "string"
          },
          "uses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Contact_LanguageUse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "languageDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_LanguageUse": {
        "properties": {
          "languageUseDescriptor": {
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_Name_PersonalIdentificationDocument": {
        "properties": {
          "documentExpirationDate": {
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "type": "string"
          },
          "documentTitle": {
            "description": "The title of the document given by the issuer.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationDocumentUseDescriptor": {
            "description": "The primary function of the document used for establishing identity.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerCountryDescriptor": {
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerDocumentIdentificationCode": {
            "description": "The unique identifier on the issuer\u0027s identification system.",
            "maxLength": 60,
            "type": "string"
          },
          "issuerName": {
            "description": "Name of the entity or institution that issued the document.",
            "maxLength": 150,
            "type": "string"
          },
          "personalInformationVerificationDescriptor": {
            "description": "The category of the document relative to its purpose.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "personalInformationVerificationDescriptor",
          "identificationDocumentUseDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_OtherName": {
        "properties": {
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string"
          },
          "otherNameTypeDescriptor": {
            "description": "The types of alternate names for an individual.",
            "maxLength": 306,
            "type": "string"
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastSurname",
          "otherNameTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Contact_Period": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_Contact_Reference": {
        "properties": {
          "contactUniqueId": {
            "description": "A unique alphanumeric code assigned to a contact.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "contactUniqueId"
        ],
        "type": "object"
      },
      "EdFi_Contact_Telephone": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the telephone number should not be published.",
            "type": "boolean"
          },
          "orderOfPriority": {
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "minimum": 1,
            "type": "integer"
          },
          "telephoneNumber": {
            "description": "The telephone number including the area code, and extension, if applicable.",
            "maxLength": 24,
            "type": "string"
          },
          "telephoneNumberTypeDescriptor": {
            "description": "The type of communication number listed for an individual or organization.",
            "maxLength": 306,
            "type": "string"
          },
          "textMessageCapabilityIndicator": {
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "type": "boolean"
          }
        },
        "required": [
          "telephoneNumber",
          "telephoneNumberTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseOffering": {
        "description": "This entity represents an entry in the course catalog of available courses offered by the school during a session.",
        "properties": {
          "courseLevelCharacteristics": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseOffering_CourseLevelCharacteristic"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "courseReference": {
            "$ref": "#/components/schemas/EdFi_Course_Reference"
          },
          "curriculumUseds": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseOffering_CurriculumUsed"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "instructionalTimePlanned": {
            "description": "The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.",
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          },
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseTitle": {
            "description": "The descriptive name given to a course of study offered in the school, if different from the course title.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "offeredGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseOffering_OfferedGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionReference": {
            "$ref": "#/components/schemas/EdFi_Session_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localCourseCode",
          "schoolReference",
          "sessionReference",
          "courseReference"
        ],
        "type": "object"
      },
      "EdFi_CourseOffering_CourseLevelCharacteristic": {
        "properties": {
          "courseLevelCharacteristicDescriptor": {
            "description": "The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "courseLevelCharacteristicDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseOffering_CurriculumUsed": {
        "properties": {
          "curriculumUsedDescriptor": {
            "description": "The type of curriculum used in an early learning classroom or group.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "curriculumUsedDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseOffering_OfferedGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseOffering_Reference": {
        "properties": {
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript": {
        "description": "This entity is the final record of a student\u0027s performance in their courses at the end of a semester or school year.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_AcademicSubject"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "alternativeCourseIdentificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_AlternativeCourseIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "alternativeCourseTitle": {
            "description": "The descriptive name given to a course of study offered in the school, if different from the CourseTitle.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "assigningOrganizationIdentificationCode": {
            "description": "The organization code or name assigning the course identification code.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "attemptedCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "attemptedCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "attemptedCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "courseAttemptResultDescriptor": {
            "description": "The result from the student\u0027s attempt to take the course.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "courseCatalogURL": {
            "description": "The URL for the course catalog that defines the course identification code.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          },
          "coursePrograms": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_CourseProgram"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "courseReference": {
            "$ref": "#/components/schemas/EdFi_Course_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "courseRepeatCodeDescriptor": {
            "description": "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student\u0027s academic grade average.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "courseTitle": {
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "creditCategories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_CreditCategory"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "earnedAdditionalCredits": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_EarnedAdditionalCredit"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "earnedCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "earnedCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "earnedCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "externalEducationOrganizationNameOfInstitution": {
            "description": "Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "externalEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "finalLetterGradeEarned": {
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "finalNumericGradeEarned": {
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "methodCreditEarnedDescriptor": {
            "description": "The method the credits were earned.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "partialCourseTranscriptAwards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_PartialCourseTranscriptAward"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "responsibleTeacherStaffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-nullable": true
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/EdFi_CourseTranscript_Section"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentAcademicRecordReference": {
            "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "whenTakenGradeLevelDescriptor": {
            "description": "Student\u0027s grade level at time of course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "courseAttemptResultDescriptor",
          "courseReference",
          "studentAcademicRecordReference"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The subject area for the course transcript credits awarded in the course transcript.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_AlternativeCourseIdentificationCode": {
        "properties": {
          "assigningOrganizationIdentificationCode": {
            "description": "The organization code or name assigning the Identification Code.",
            "maxLength": 60,
            "type": "string"
          },
          "courseCatalogURL": {
            "description": "The URL for the course catalog that defines the course identification code.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "courseIdentificationSystemDescriptor": {
            "description": "A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.",
            "maxLength": 306,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a \u0022/\u0022. For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "courseIdentificationSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_CourseProgram": {
        "properties": {
          "courseProgramReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference"
          }
        },
        "required": [
          "courseProgramReference"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_CreditCategory": {
        "properties": {
          "creditCategoryDescriptor": {
            "description": "A categorization for the course transcript credits awarded in the course transcript.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "creditCategoryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_EarnedAdditionalCredit": {
        "properties": {
          "additionalCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string"
          },
          "credits": {
            "description": "The value of credits or units of value awarded for the completion of a course",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "credits",
          "additionalCreditTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_PartialCourseTranscriptAward": {
        "properties": {
          "awardDate": {
            "description": "The date the partial credits and/or grades were awarded or earned.",
            "format": "date",
            "type": "string"
          },
          "earnedCredits": {
            "description": "The number of credits a student earned for completing a given course.",
            "format": "double",
            "type": "number"
          },
          "letterGradeEarned": {
            "description": "The indicator of student performance as submitted by the instructor.",
            "maxLength": 20,
            "type": "string"
          },
          "methodCreditEarnedDescriptor": {
            "description": "The method the credits were earned.",
            "maxLength": 306,
            "type": "string"
          },
          "numericGradeEarned": {
            "description": "The indicator of student performance as submitted by the instructor.",
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "awardDate",
          "earnedCredits"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_Reference": {
        "properties": {
          "courseAttemptResultDescriptor": {
            "description": "The result from the student\u0027s attempt to take the course.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "courseCode": {
            "description": "A unique alphanumeric code assigned to a course.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "courseEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "courseCode",
          "courseEducationOrganizationId",
          "courseAttemptResultDescriptor",
          "educationOrganizationId",
          "schoolYear",
          "studentUniqueId",
          "termDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CourseTranscript_Section": {
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference"
          }
        },
        "required": [
          "sectionReference"
        ],
        "type": "object"
      },
      "EdFi_Course": {
        "description": "This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Course_AcademicSubject"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "careerPathwayDescriptor": {
            "description": "Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "competencyLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Course_CompetencyLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "courseCode": {
            "description": "A unique alphanumeric code assigned to a course.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "courseDefinedByDescriptor": {
            "description": "Specifies whether the course was defined by the SEA, LEA, School, or national organization.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "courseDescription": {
            "description": "A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "courseGPAApplicabilityDescriptor": {
            "description": "An indicator of whether or not the course being described is included in the computation of the student\u0027s grade point average, and if so, if it is weighted differently from regular courses.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "courseTitle": {
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).",
            "maxLength": 60,
            "type": "string"
          },
          "dateCourseAdopted": {
            "description": "Date the course was adopted by the education agency.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "highSchoolCourseRequirement": {
            "description": "An indication that this course may satisfy high school graduation requirements in the course\u0027s subject area.",
            "type": "boolean",
            "x-nullable": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Course_CourseIdentificationCode"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "learningStandards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Course_LearningStandard"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "levelCharacteristics": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Course_CourseLevelCharacteristic"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxCompletionsForCredit": {
            "description": "Designates how many times the course may be taken with credit received by the student.",
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          },
          "maximumAvailableCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "maximumAvailableCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "maximumAvailableCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "minimumAvailableCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "minimumAvailableCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "minimumAvailableCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "numberOfParts": {
            "description": "The number of parts identified for a course.",
            "maximum": 8,
            "minimum": 1,
            "type": "integer"
          },
          "offeredGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Course_OfferedGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "timeRequiredForCompletion": {
            "description": "The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.",
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "courseCode",
          "courseTitle",
          "numberOfParts",
          "identificationCodes",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_Course_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The intended major subject/s area of the course.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Course_CompetencyLevel": {
        "properties": {
          "competencyLevelDescriptor": {
            "description": "The competency levels defined to rate the student for the course.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "competencyLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Course_CourseIdentificationCode": {
        "properties": {
          "assigningOrganizationIdentificationCode": {
            "description": "The organization code or name assigning the Identification Code.",
            "maxLength": 60,
            "type": "string"
          },
          "courseCatalogURL": {
            "description": "The URL for the course catalog that defines the course identification code.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "courseIdentificationSystemDescriptor": {
            "description": "A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.",
            "maxLength": 306,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a \u0022/\u0022. For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "courseIdentificationSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Course_CourseLevelCharacteristic": {
        "properties": {
          "courseLevelCharacteristicDescriptor": {
            "description": "The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "courseLevelCharacteristicDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Course_LearningStandard": {
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_Course_OfferedGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels in which the course is offered.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Course_Reference": {
        "properties": {
          "courseCode": {
            "description": "A unique alphanumeric code assigned to a course.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "courseCode",
          "educationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_Credential": {
        "description": "The legal document giving authorization to perform teaching assignment services.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Credential_AcademicSubject"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "credentialFieldDescriptor": {
            "description": "The field of certification for the certificate (e.g., Mathematics, Music).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "credentialIdentifier": {
            "description": "Identifier or serial number assigned to the credential.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "credentialTypeDescriptor": {
            "description": "An indication of the category of credential an individual holds.",
            "maxLength": 306,
            "type": "string"
          },
          "effectiveDate": {
            "description": "The year, month and day on which an active credential held by an individual was issued.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "endorsements": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Credential_CredentialEndorsement"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "expirationDate": {
            "description": "The month, day, and year on which an active credential held by an individual will expire.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Credential_GradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "issuanceDate": {
            "description": "The month, day, and year on which an active credential was issued to an individual.",
            "format": "date",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace for the credential.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "stateOfIssueStateAbbreviationDescriptor": {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "teachingCredentialBasisDescriptor": {
            "description": "An indication of the pre-determined criteria for granting the teaching credential that an individual holds.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "teachingCredentialDescriptor": {
            "description": "An indication of the category of a legal document giving authorization to perform teaching assignment services.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "_ext": {
            "$ref": "#/components/schemas/EdFi_CredentialExtension"
          }
        },
        "required": [
          "credentialIdentifier",
          "issuanceDate",
          "credentialTypeDescriptor",
          "stateOfIssueStateAbbreviationDescriptor",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_Credential_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The academic subjects to which the credential pertains.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Credential_CredentialEndorsement": {
        "properties": {
          "credentialEndorsement": {
            "description": "Endorsements are attachments to teaching certificates and indicate areas of specialization.",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "credentialEndorsement"
        ],
        "type": "object"
      },
      "EdFi_Credential_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade level(s) certified for teaching.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Credential_Reference": {
        "properties": {
          "credentialIdentifier": {
            "description": "Identifier or serial number assigned to the credential.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "stateOfIssueStateAbbreviationDescriptor": {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "credentialIdentifier",
          "stateOfIssueStateAbbreviationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CrisisEvent": {
        "description": "A natural or man-made event that causes the disruption of school-level activities and the temporary or permanent displacement of students.",
        "properties": {
          "crisisDescription": {
            "description": "Provides a textual description of the crisis event affecting the student. It may include details such as the nature of the crisis (e.g., natural disaster, conflict, medical emergency), its severity, location, and any other relevant information describing the crisis situation.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "crisisEndDate": {
            "description": "The date on which the crisis ceased to affect the student. Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "crisisEventName": {
            "description": "The name of the crisis event that occurred. If there is no generally accepted name for this crisis event, the suggested format: Location \u002B Crisis type \u002B Year.",
            "maxLength": 100,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "crisisStartDate": {
            "description": "The year, month and day on which the crisis affected the student. This date may not be the same as the date the crisis occurred if evacuation orders are implemented in anticipation of a crisis.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "crisisTypeDescriptor": {
            "description": "The type or category of crisis.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "crisisEventName",
          "crisisTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_CrisisEvent_Reference": {
        "properties": {
          "crisisEventName": {
            "description": "The name of the crisis event that occurred. If there is no generally accepted name for this crisis event, the suggested format: Location \u002B Crisis type \u002B Year.",
            "maxLength": 100,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "crisisEventName"
        ],
        "type": "object"
      },
      "EdFi_DescriptorMapping": {
        "description": "A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values.",
        "properties": {
          "mappedNamespace": {
            "description": "The namespace of the descriptor value to which the from descriptor value is mapped to.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "mappedValue": {
            "description": "The descriptor value to which the from descriptor value is being mapped to.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "modelEntities": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DescriptorMapping_ModelEntity"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "namespace": {
            "description": "The namespace of the descriptor value that is being mapped to another value.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "value": {
            "description": "The descriptor value that is being mapped to another value.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "value",
          "namespace",
          "mappedValue",
          "mappedNamespace"
        ],
        "type": "object"
      },
      "EdFi_DescriptorMapping_ModelEntity": {
        "properties": {
          "modelEntityDescriptor": {
            "description": "The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "modelEntityDescriptor"
        ],
        "type": "object"
      },
      "EdFi_DescriptorMapping_Reference": {
        "properties": {
          "mappedNamespace": {
            "description": "The namespace of the descriptor value to which the from descriptor value is mapped to.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "mappedValue": {
            "description": "The descriptor value to which the from descriptor value is being mapped to.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "The namespace of the descriptor value that is being mapped to another value.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "value": {
            "description": "The descriptor value that is being mapped to another value.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "mappedNamespace",
          "mappedValue",
          "namespace",
          "value"
        ],
        "type": "object"
      },
      "EdFi_DisciplineAction": {
        "description": "This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.",
        "properties": {
          "actualDisciplineActionLength": {
            "description": "Indicates the actual length in school days of a student\u0027s disciplinary assignment.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "assignmentSchoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-nullable": true
          },
          "disciplineActionIdentifier": {
            "description": "Identifier assigned by the education organization to the discipline action.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplineActionLength": {
            "description": "The length of time in school days for the discipline action (e.g. removal, detention), if applicable.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "disciplineActionLengthDifferenceReasonDescriptor": {
            "description": "Indicates the reason for the difference, if any, between the official and actual lengths of a student\u0027s disciplinary assignment.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "disciplineDate": {
            "description": "The date of the discipline action.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplines": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DisciplineAction_Discipline"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "iepPlacementMeetingIndicator": {
            "description": "An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student\u0027s Individualized Education Program (IEP) team to determine appropriate placement.",
            "type": "boolean",
            "x-nullable": true
          },
          "relatedToZeroTolerancePolicy": {
            "description": "An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.",
            "type": "boolean",
            "x-nullable": true
          },
          "responsibilitySchoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference"
          },
          "staffs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DisciplineAction_Staff"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentDisciplineIncidentBehaviorAssociations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DisciplineAction_StudentDisciplineIncidentBehaviorAssociation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "disciplineActionIdentifier",
          "disciplines",
          "disciplineDate",
          "studentReference",
          "responsibilitySchoolReference"
        ],
        "type": "object"
      },
      "EdFi_DisciplineAction_Discipline": {
        "properties": {
          "disciplineDescriptor": {
            "description": "Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disciplineDescriptor"
        ],
        "type": "object"
      },
      "EdFi_DisciplineAction_Reference": {
        "properties": {
          "disciplineActionIdentifier": {
            "description": "Identifier assigned by the education organization to the discipline action.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplineDate": {
            "description": "The date of the discipline action.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "disciplineActionIdentifier",
          "disciplineDate",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_DisciplineAction_Staff": {
        "properties": {
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference"
          }
        },
        "required": [
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_DisciplineAction_StudentDisciplineIncidentBehaviorAssociation": {
        "properties": {
          "studentDisciplineIncidentBehaviorAssociationReference": {
            "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation_Reference"
          }
        },
        "required": [
          "studentDisciplineIncidentBehaviorAssociationReference"
        ],
        "type": "object"
      },
      "EdFi_DisciplineIncident": {
        "description": "This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.",
        "properties": {
          "behaviors": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DisciplineIncident_Behavior"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "caseNumber": {
            "description": "The case number assigned to the DisciplineIncident by law enforcement or other organization.",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "externalParticipants": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DisciplineIncident_DisciplineIncidentExternalParticipant"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "incidentCost": {
            "description": "The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "incidentDate": {
            "description": "The month, day, and year on which the discipline incident occurred.",
            "format": "date",
            "type": "string"
          },
          "incidentDescription": {
            "description": "The description for an incident.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "incidentIdentifier": {
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "incidentLocationDescriptor": {
            "description": "Identifies where the discipline incident occurred and whether or not it occurred on school.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "incidentTime": {
            "description": "An indication of the time of day the incident took place.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "reportedToLawEnforcement": {
            "description": "Indicator of whether the incident was reported to law enforcement.",
            "type": "boolean",
            "x-nullable": true
          },
          "reporterDescriptionDescriptor": {
            "description": "Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., \u0022Counselor\u0022 rather than \u0022Professional Staff\u0022).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "reporterName": {
            "description": "Identifies the reporter of the discipline incident by name.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "weapons": {
            "items": {
              "$ref": "#/components/schemas/EdFi_DisciplineIncident_Weapon"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "incidentIdentifier",
          "incidentDate",
          "schoolReference"
        ],
        "type": "object"
      },
      "EdFi_DisciplineIncident_Behavior": {
        "properties": {
          "behaviorDescriptor": {
            "description": "Describes behavior by category and provides a detailed description.",
            "maxLength": 306,
            "type": "string"
          },
          "behaviorDetailedDescription": {
            "description": "Specifies a more granular level of detail of a behavior involved in the incident.",
            "maxLength": 1024,
            "type": "string"
          }
        },
        "required": [
          "behaviorDescriptor"
        ],
        "type": "object"
      },
      "EdFi_DisciplineIncident_DisciplineIncidentExternalParticipant": {
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "description": "The role or type of participation of an individual in the discipline incident.",
            "maxLength": 306,
            "type": "string"
          },
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastSurname",
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_DisciplineIncident_Reference": {
        "properties": {
          "incidentIdentifier": {
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "incidentIdentifier",
          "schoolId"
        ],
        "type": "object"
      },
      "EdFi_DisciplineIncident_Weapon": {
        "properties": {
          "weaponDescriptor": {
            "description": "Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "weaponDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationContent": {
        "description": "This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.",
        "properties": {
          "additionalAuthorsIndicator": {
            "description": "Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation \u0022et al\u0022.",
            "type": "boolean",
            "x-nullable": true
          },
          "appropriateGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_AppropriateGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "appropriateSexes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_AppropriateSex"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "authors": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_Author"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "contentClassDescriptor": {
            "description": "The predominate type or kind characterizing the learning resource.",
            "maxLength": 306,
            "type": "string"
          },
          "contentIdentifier": {
            "description": "A unique identifier for the education content.",
            "maxLength": 225,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cost": {
            "description": "An amount that has to be paid or spent to buy or obtain the education content.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "costRateDescriptor": {
            "description": "The rate by which the cost applies.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "derivativeSourceEducationContents": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_EducationContentSource_DerivativeSourceEducationContent"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "derivativeSourceLearningResourceMetadataURIs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_EducationContentSource_DerivativeSourceLearningResourceMetadataURI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "derivativeSourceURIs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_EducationContentSource_DerivativeSourceURI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "description": {
            "description": "An extended written representation of the education content.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "interactivityStyleDescriptor": {
            "description": "The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationContent_LearningResourceChoice_LearningResource_Language"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "learningResourceMetadataURI": {
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference",
            "x-nullable": true
          },
          "namespace": {
            "description": "Namespace for the education content.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "publicationDate": {
            "description": "The date on which this content was first published.",
            "format": "date",
            "type": "string"
          },
          "publicationYear": {
            "description": "The year at which this content was first published.",
            "type": "integer"
          },
          "publisher": {
            "description": "The organization credited with publishing the resource.",
            "maxLength": 50,
            "type": "string",
            "x-nullable": true
          },
          "shortDescription": {
            "description": "A short description or name of the entity.",
            "maxLength": 75,
            "type": "string"
          },
          "timeRequired": {
            "description": "Approximate or typical time that it takes to work with or through this learning resource for the typical intended target audience expressed in minutes.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "useRightsURL": {
            "description": "The URL where the owner specifies permissions for using the resource.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          },
          "version": {
            "description": "The version identifier for the content.",
            "maxLength": 10,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "contentIdentifier",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_AppropriateGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "Grade levels for which this education content is applicable. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_AppropriateSex": {
        "properties": {
          "sexDescriptor": {
            "description": "Sexes for which this education content is applicable. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "sexDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_Author": {
        "properties": {
          "author": {
            "description": "The individual credited with the creation of the resource.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "author"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_EducationContentSource_DerivativeSourceEducationContent": {
        "properties": {
          "derivativeSourceEducationContentReference": {
            "$ref": "#/components/schemas/EdFi_EducationContent_Reference"
          }
        },
        "required": [
          "derivativeSourceEducationContentReference"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_EducationContentSource_DerivativeSourceLearningResourceMetadataURI": {
        "properties": {
          "derivativeSourceLearningResourceMetadataURI": {
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "derivativeSourceLearningResourceMetadataURI"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_EducationContentSource_DerivativeSourceURI": {
        "properties": {
          "derivativeSourceURI": {
            "description": "The URI (typical a URL) pointing to an education content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "derivativeSourceURI"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_LearningResourceChoice_LearningResource_Language": {
        "properties": {
          "languageDescriptor": {
            "description": "An indication of the languages in which the Education Content is designed.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "languageDescriptor"
        ],
        "type": "object"
      },
      "EdFi_EducationContent_Reference": {
        "properties": {
          "contentIdentifier": {
            "description": "A unique identifier for the education content.",
            "maxLength": 225,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "contentIdentifier"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationInterventionPrescriptionAssociation": {
        "description": "This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.",
        "properties": {
          "beginDate": {
            "description": "The begin date of the period during which the intervention prescription is available.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The end date of the period during which the intervention prescription is available.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "interventionPrescriptionReference": {
            "$ref": "#/components/schemas/EdFi_InterventionPrescription_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationReference",
          "interventionPrescriptionReference"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationInterventionPrescriptionAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptionEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "interventionPrescriptionEducationOrganizationId",
          "interventionPrescriptionIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationNetworkAssociation": {
        "description": "Properties of the association between the education organization and its network(s).",
        "properties": {
          "beginDate": {
            "description": "The date on which the education organization joined this network.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationNetworkReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganizationNetwork_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The date on which the education organization left this network.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "memberEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationNetworkReference",
          "memberEducationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationNetworkAssociation_Reference": {
        "properties": {
          "educationOrganizationNetworkId": {
            "description": "The identifier assigned to a network of education organizations. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "memberEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationNetworkId",
          "memberEducationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationNetwork": {
        "description": "This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationNetworkId": {
            "description": "The identifier assigned to a network of education organizations. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "networkPurposeDescriptor": {
            "description": "The purpose(s) of the network (e.g., shared services, collective procurement).",
            "maxLength": 306,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "educationOrganizationNetworkId",
          "networkPurposeDescriptor",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationNetwork_Reference": {
        "properties": {
          "educationOrganizationNetworkId": {
            "description": "The identifier assigned to a network of education organizations. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationNetworkId"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationPeerAssociation": {
        "description": "The association from an education organization to its peers.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "peerEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationReference",
          "peerEducationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationPeerAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "peerEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "peerEducationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_EducationServiceCenter": {
        "description": "This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "educationServiceCenterId": {
            "description": "The identifier assigned to an education service center. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "stateEducationAgencyReference": {
            "$ref": "#/components/schemas/EdFi_StateEducationAgency_Reference",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "educationServiceCenterId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_EducationServiceCenter_Reference": {
        "properties": {
          "educationServiceCenterId": {
            "description": "The identifier assigned to an education service center. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationServiceCenterId"
        ],
        "type": "object"
      },
      "EdFi_EvaluationRubricDimension": {
        "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric evaluation level.",
        "properties": {
          "evaluationCriterionDescription": {
            "description": "The evaluation criterion description for the evaluation rubric dimension.",
            "maxLength": 1024,
            "type": "string"
          },
          "evaluationRubricRating": {
            "description": "The numeric rating associated with the evaluation rubric dimension.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationRubricRatingLevelDescriptor": {
            "description": "The rating level achieved for the evaluation rubric dimension.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "programEvaluationElementReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "rubricDimensionSortOrder": {
            "description": "The sort order of the rubric dimension.",
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "programEvaluationElementReference",
          "evaluationRubricRating",
          "evaluationCriterionDescription"
        ],
        "type": "object"
      },
      "EdFi_EvaluationRubricDimension_Reference": {
        "properties": {
          "evaluationRubricRating": {
            "description": "The numeric rating associated with the evaluation rubric dimension.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationElementTitle": {
            "description": "The name or title of the program evaluation element.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "description": "The name of the period for the program evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "description": "An assigned unique identifier for the student program evaluation.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "description": "The type of program evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationRubricRating",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programEvaluationElementTitle"
        ],
        "type": "object"
      },
      "EdFi_FeederSchoolAssociation": {
        "description": "The association from feeder school to the receiving school.",
        "properties": {
          "beginDate": {
            "description": "The month, day, and year of the first day of the feeder school association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year of the last day of the feeder school association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "feederRelationshipDescription": {
            "description": "Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "feederSchoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "feederSchoolReference",
          "schoolReference",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_FeederSchoolAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year of the first day of the feeder school association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "feederSchoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "feederSchoolId",
          "schoolId"
        ],
        "type": "object"
      },
      "EdFi_FunctionDimension": {
        "description": "The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service.",
        "properties": {
          "code": {
            "description": "The code representation of the account function dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account function dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account function dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_FunctionDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_FunctionDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account function dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account function dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_FunctionDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_FundDimension": {
        "description": "The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations.",
        "properties": {
          "code": {
            "description": "The code representation of the account fund dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account fund dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account fund dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_FundDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_FundDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account fund dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account fund dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_FundDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_GradebookEntry": {
        "description": "This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.",
        "properties": {
          "dateAssigned": {
            "description": "The date the assignment, homework, or assessment was assigned or executed.",
            "format": "date",
            "type": "string"
          },
          "description": {
            "description": "A description of the assignment, homework, or classroom assessment.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "dueDate": {
            "description": "The date the assignment, homework, or assessment is due.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "dueTime": {
            "description": "The time the assignment, homework, or assessment is due.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "gradebookEntryIdentifier": {
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradebookEntryTypeDescriptor": {
            "description": "The type of the gradebook entry.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/EdFi_GradingPeriod_Reference",
            "x-nullable": true
          },
          "learningStandards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GradebookEntry_LearningStandard"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxPoints": {
            "description": "The maximum number of points  that can be earned for the submission.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "namespace": {
            "description": "Namespace URI for the source of the gradebook entry.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-nullable": true
          },
          "sourceSectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string"
          },
          "title": {
            "description": "The name or title of the activity to be recorded in the gradebook entry.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "gradebookEntryIdentifier",
          "namespace",
          "sourceSectionIdentifier",
          "dateAssigned",
          "title"
        ],
        "type": "object"
      },
      "EdFi_GradebookEntry_LearningStandard": {
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_GradebookEntry_Reference": {
        "properties": {
          "gradebookEntryIdentifier": {
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace URI for the source of the gradebook entry.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "gradebookEntryIdentifier",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_Grade": {
        "description": "This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.",
        "properties": {
          "currentGradeAsOfDate": {
            "description": "As-Of date for a grade posted as the current grade.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "currentGradeIndicator": {
            "description": "An indicator that the posted grade is an interim grade for the grading period and not the final grade.",
            "type": "boolean",
            "x-nullable": true
          },
          "diagnosticStatement": {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "gradeEarnedDescription": {
            "description": "A description of the grade earned by the learner.",
            "maxLength": 64,
            "type": "string",
            "x-nullable": true
          },
          "gradeTypeDescriptor": {
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/EdFi_GradingPeriod_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "learningStandardGrades": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Grade_LearningStandardGrade"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "letterGradeEarned": {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "numericGradeEarned": {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "performanceBaseConversionDescriptor": {
            "description": "A conversion of the level to a standard set of performance levels.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "studentSectionAssociationReference": {
            "$ref": "#/components/schemas/EdFi_StudentSectionAssociation_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "gradeTypeDescriptor",
          "studentSectionAssociationReference",
          "gradingPeriodReference"
        ],
        "type": "object"
      },
      "EdFi_Grade_LearningStandardGrade": {
        "properties": {
          "diagnosticStatement": {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "maxLength": 1024,
            "type": "string"
          },
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          },
          "letterGradeEarned": {
            "description": "A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.",
            "maxLength": 20,
            "type": "string"
          },
          "numericGradeEarned": {
            "description": "A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.",
            "format": "double",
            "type": "number"
          },
          "performanceBaseConversionDescriptor": {
            "description": "A performance level that describes the student proficiency.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_Grade_Reference": {
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the student\u0027s entry or assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradeTypeDescriptor": {
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "description": "The state\u0027s name of the period for which grades are reported.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "description": "The school\u0027s descriptive name of the grading period.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "gradeTypeDescriptor",
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "gradingPeriodSchoolYear",
          "beginDate",
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName",
          "sectionIdentifier",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_GradingPeriod": {
        "description": "This entity represents the time span for which grades are reported.",
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the first day of the grading period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "Month, day, and year of the last day of the grading period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "gradingPeriodDescriptor": {
            "description": "The state\u0027s name of the period for which grades are reported.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "description": "The school\u0027s descriptive name of the grading period.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "periodSequence": {
            "description": "The sequential order of this period relative to other periods.",
            "type": "integer",
            "x-nullable": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          },
          "totalInstructionalDays": {
            "description": "Total days available for educational instruction during the grading period.",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "schoolReference",
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "schoolYearTypeReference",
          "beginDate",
          "endDate",
          "totalInstructionalDays"
        ],
        "type": "object"
      },
      "EdFi_GradingPeriod_Reference": {
        "properties": {
          "gradingPeriodDescriptor": {
            "description": "The state\u0027s name of the period for which grades are reported.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "description": "The school\u0027s descriptive name of the grading period.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "schoolId",
          "schoolYear"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan": {
        "description": "This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.",
        "properties": {
          "creditsByCourses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_CreditsByCourse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "creditsByCreditCategories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_CreditsByCreditCategory"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "creditsBySubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_CreditsBySubject"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationPlanTypeDescriptor": {
            "description": "The type of academic plan the student is following for graduation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationSchoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          },
          "individualPlan": {
            "description": "An indicator of whether the graduation plan is tailored for an individual.",
            "type": "boolean",
            "x-nullable": true
          },
          "requiredAssessments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_RequiredAssessment"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "totalRequiredCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "totalRequiredCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "totalRequiredCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "graduationPlanTypeDescriptor",
          "totalRequiredCredits",
          "educationOrganizationReference",
          "graduationSchoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_Course": {
        "properties": {
          "courseReference": {
            "$ref": "#/components/schemas/EdFi_Course_Reference"
          }
        },
        "required": [
          "courseReference"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_CreditsByCourse": {
        "properties": {
          "courseSetName": {
            "description": "Identifying name given to a collection of courses.",
            "maxLength": 120,
            "type": "string"
          },
          "courses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_Course"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "creditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number"
          },
          "creditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string"
          },
          "credits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "whenTakenGradeLevelDescriptor": {
            "description": "The grade level when the student is planned to take the course.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "courseSetName",
          "courses",
          "credits"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_CreditsByCreditCategory": {
        "properties": {
          "creditCategoryDescriptor": {
            "description": "A categorization for the course transcript credits awarded in the course transcript.",
            "maxLength": 306,
            "type": "string"
          },
          "creditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number"
          },
          "creditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string"
          },
          "credits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "creditCategoryDescriptor",
          "credits"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_CreditsBySubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The intended major subject area of the graduation requirement.",
            "maxLength": 306,
            "type": "string"
          },
          "creditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number"
          },
          "creditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string"
          },
          "credits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "academicSubjectDescriptor",
          "credits"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationPlanTypeDescriptor": {
            "description": "The type of academic plan the student is following for graduation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationSchoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "graduationPlanTypeDescriptor",
          "graduationSchoolYear"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_RequiredAssessment": {
        "properties": {
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference"
          },
          "performanceLevel": {
            "$ref": "#/components/schemas/EdFi_GraduationPlan_RequiredAssessmentPerformanceLevel"
          },
          "scores": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GraduationPlan_RequiredAssessmentScore"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "assessmentReference"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_RequiredAssessmentPerformanceLevel": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "maximumScore": {
            "description": "The maximum score to make the indicated level of performance.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score required to make the indicated level of performance.",
            "maxLength": 35,
            "type": "string"
          },
          "performanceLevelDescriptor": {
            "description": "The performance level(s) defined for the assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "performanceLevelIndicatorName": {
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "maxLength": 60,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "performanceLevelDescriptor",
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlan_RequiredAssessmentScore": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "maximumScore": {
            "description": "The maximum score possible on the assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score possible on the assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription": {
        "description": "This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.",
        "properties": {
          "appropriateGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_AppropriateGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "appropriateSexes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_AppropriateSex"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "deliveryMethodDescriptor": {
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
            "maxLength": 306,
            "type": "string"
          },
          "diagnoses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_Diagnosis"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationContents": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_EducationContentSource_EducationContent"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionClassDescriptor": {
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "maxLength": 306,
            "type": "string"
          },
          "interventionPrescriptionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "learningResourceMetadataURIs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_EducationContentSource_LearningResourceMetadataURI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxDosage": {
            "description": "The maximum duration of time in minutes that is recommended for the intervention.",
            "type": "integer",
            "x-nullable": true
          },
          "minDosage": {
            "description": "The minimum duration of time in minutes that is recommended for the intervention.",
            "type": "integer",
            "x-nullable": true
          },
          "namespace": {
            "description": "Namespace for the intervention.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          },
          "populationServeds": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_PopulationServed"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "uris": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionPrescription_EducationContentSource_URI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "interventionClassDescriptor",
          "deliveryMethodDescriptor",
          "educationOrganizationReference",
          "interventionPrescriptionIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_AppropriateGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "Grade levels for the prescribed intervention. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_AppropriateSex": {
        "properties": {
          "sexDescriptor": {
            "description": "Sexes for the intervention prescription. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "sexDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_Diagnosis": {
        "properties": {
          "diagnosisDescriptor": {
            "description": "Targeted purpose of the intervention prescription.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "diagnosisDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_EducationContentSource_EducationContent": {
        "properties": {
          "educationContentReference": {
            "$ref": "#/components/schemas/EdFi_EducationContent_Reference"
          }
        },
        "required": [
          "educationContentReference"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_EducationContentSource_LearningResourceMetadataURI": {
        "properties": {
          "learningResourceMetadataURI": {
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "learningResourceMetadataURI"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_EducationContentSource_URI": {
        "properties": {
          "uri": {
            "description": "The URI (typical a URL) pointing to an education content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_PopulationServed": {
        "properties": {
          "populationServedDescriptor": {
            "description": "A subset of students that are the focus of the intervention prescription.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "populationServedDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionPrescription_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "interventionPrescriptionIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy": {
        "description": "An experimental or quasi-experimental study of an intervention technique.",
        "properties": {
          "appropriateGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_AppropriateGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "appropriateSexes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_AppropriateSex"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "deliveryMethodDescriptor": {
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
            "maxLength": 306,
            "type": "string"
          },
          "educationContents": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_EducationContentSource_EducationContent"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionClassDescriptor": {
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "maxLength": 306,
            "type": "string"
          },
          "interventionEffectivenesses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_InterventionEffectiveness"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "interventionPrescriptionReference": {
            "$ref": "#/components/schemas/EdFi_InterventionPrescription_Reference"
          },
          "interventionStudyIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention study.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "learningResourceMetadataURIs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_EducationContentSource_LearningResourceMetadataURI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "participants": {
            "description": "The number of participants observed in the study.",
            "type": "integer"
          },
          "populationServeds": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_PopulationServed"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "stateAbbreviations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_StateAbbreviation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "uris": {
            "items": {
              "$ref": "#/components/schemas/EdFi_InterventionStudy_EducationContentSource_URI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "interventionPrescriptionReference",
          "participants",
          "deliveryMethodDescriptor",
          "interventionClassDescriptor",
          "educationOrganizationReference",
          "interventionStudyIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_AppropriateGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "Grade levels participating in this study.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_AppropriateSex": {
        "properties": {
          "sexDescriptor": {
            "description": "Sexes participating in this study. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "sexDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_EducationContentSource_EducationContent": {
        "properties": {
          "educationContentReference": {
            "$ref": "#/components/schemas/EdFi_EducationContent_Reference"
          }
        },
        "required": [
          "educationContentReference"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_EducationContentSource_LearningResourceMetadataURI": {
        "properties": {
          "learningResourceMetadataURI": {
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "learningResourceMetadataURI"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_EducationContentSource_URI": {
        "properties": {
          "uri": {
            "description": "The URI (typical a URL) pointing to an education content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_InterventionEffectiveness": {
        "properties": {
          "diagnosisDescriptor": {
            "description": "Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.",
            "maxLength": 306,
            "type": "string"
          },
          "gradeLevelDescriptor": {
            "description": "Grade level for which effectiveness is measured.",
            "maxLength": 306,
            "type": "string"
          },
          "improvementIndex": {
            "description": "Along a percentile distribution of students, the improvement index represents the change in an average student\u0027s percentile rank that is considered to be due to the intervention.",
            "type": "integer"
          },
          "interventionEffectivenessRatingDescriptor": {
            "description": "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.",
            "maxLength": 306,
            "type": "string"
          },
          "populationServedDescriptor": {
            "description": "Population for which effectiveness is measured.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "diagnosisDescriptor",
          "populationServedDescriptor",
          "gradeLevelDescriptor",
          "interventionEffectivenessRatingDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_PopulationServed": {
        "properties": {
          "populationServedDescriptor": {
            "description": "A subset of students that are the focus of the intervention study.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "populationServedDescriptor"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionStudyIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention study.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "interventionStudyIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_InterventionStudy_StateAbbreviation": {
        "properties": {
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "stateAbbreviationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Intervention": {
        "description": "An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.",
        "properties": {
          "appropriateGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_AppropriateGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "appropriateSexes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_AppropriateSex"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "beginDate": {
            "description": "The start date for the intervention implementation.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "deliveryMethodDescriptor": {
            "description": "The way in which an intervention was implemented.",
            "maxLength": 306,
            "type": "string"
          },
          "diagnoses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_Diagnosis"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationContents": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_EducationContentSource_EducationContent"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The end date for the intervention implementation.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "interventionClassDescriptor": {
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "maxLength": 306,
            "type": "string"
          },
          "interventionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptions": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_InterventionPrescription"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "learningResourceMetadataURIs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_EducationContentSource_LearningResourceMetadataURI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxDosage": {
            "description": "The maximum duration of time in minutes that may be assigned for the intervention.",
            "type": "integer",
            "x-nullable": true
          },
          "meetingTimes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_MeetingTime"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "minDosage": {
            "description": "The minimum duration of time in minutes that may be assigned for the intervention.",
            "type": "integer",
            "x-nullable": true
          },
          "namespace": {
            "description": "Namespace for the intervention.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          },
          "populationServeds": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_PopulationServed"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "staffs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_Staff"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "uris": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Intervention_EducationContentSource_URI"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "interventionClassDescriptor",
          "deliveryMethodDescriptor",
          "beginDate",
          "educationOrganizationReference",
          "interventionIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_Intervention_AppropriateGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "Grade levels for the intervention. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Intervention_AppropriateSex": {
        "properties": {
          "sexDescriptor": {
            "description": "Sexes for the intervention. If omitted, considered generally applicable.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "sexDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Intervention_Diagnosis": {
        "properties": {
          "diagnosisDescriptor": {
            "description": "Targeted purpose of the intervention.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "diagnosisDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Intervention_EducationContentSource_EducationContent": {
        "properties": {
          "educationContentReference": {
            "$ref": "#/components/schemas/EdFi_EducationContent_Reference"
          }
        },
        "required": [
          "educationContentReference"
        ],
        "type": "object"
      },
      "EdFi_Intervention_EducationContentSource_LearningResourceMetadataURI": {
        "properties": {
          "learningResourceMetadataURI": {
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "learningResourceMetadataURI"
        ],
        "type": "object"
      },
      "EdFi_Intervention_EducationContentSource_URI": {
        "properties": {
          "uri": {
            "description": "The URI (typical a URL) pointing to an education content item.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "type": "object"
      },
      "EdFi_Intervention_InterventionPrescription": {
        "properties": {
          "interventionPrescriptionReference": {
            "$ref": "#/components/schemas/EdFi_InterventionPrescription_Reference"
          }
        },
        "required": [
          "interventionPrescriptionReference"
        ],
        "type": "object"
      },
      "EdFi_Intervention_MeetingTime": {
        "properties": {
          "endTime": {
            "description": "An indication of the time of day the meeting time ends.",
            "format": "time",
            "type": "string"
          },
          "startTime": {
            "description": "An indication of the time of day the meeting time begins.",
            "format": "time",
            "type": "string"
          }
        },
        "required": [
          "startTime",
          "endTime"
        ],
        "type": "object"
      },
      "EdFi_Intervention_PopulationServed": {
        "properties": {
          "populationServedDescriptor": {
            "description": "A subset of students that are the focus of the intervention.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "populationServedDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Intervention_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "interventionIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_Intervention_Staff": {
        "properties": {
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference"
          }
        },
        "required": [
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_LearningStandardEquivalenceAssociation": {
        "description": "Indicates a directional association of equivalence from a source to a target learning standard.",
        "properties": {
          "effectiveDate": {
            "description": "The date that the association is considered to be applicable or effective.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "learningStandardEquivalenceStrengthDescription": {
            "description": "Captures supplemental information on the relationship. Recommended for use only when the match is partial.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "learningStandardEquivalenceStrengthDescriptor": {
            "description": "A measure that indicates the strength or quality of the equivalence relationship.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "namespace": {
            "description": "The namespace of the organization that has created and owns the association.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceLearningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "targetLearningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "sourceLearningStandardReference",
          "targetLearningStandardReference",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_LearningStandardEquivalenceAssociation_Reference": {
        "properties": {
          "namespace": {
            "description": "The namespace of the organization that has created and owns the association.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceLearningStandardId": {
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "targetLearningStandardId": {
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "namespace",
          "sourceLearningStandardId",
          "targetLearningStandardId"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard": {
        "description": "A statement that describes a specific competency or academic standard.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LearningStandard_AcademicSubject"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "contentStandard": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_ContentStandard"
          },
          "courseTitle": {
            "description": "The official course title with which this learning standard is associated.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "description": {
            "description": "The text of the statement. The textual content that either describes a specific competency such as \u0022Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions.\u0022 or describes a less granular group of competencies within the taxonomy of the standards document, e.g. \u0022Understand and apply the Pythagorean Theorem,\u0022 or \u0022Geometry\u0022.",
            "maxLength": 1024,
            "type": "string"
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LearningStandard_GradeLevel"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LearningStandard_LearningStandardIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "learningStandardCategoryDescriptor": {
            "description": "An additional classification of the type of a specific learning standard.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "learningStandardId": {
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "learningStandardItemCode": {
            "description": "A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "learningStandardScopeDescriptor": {
            "description": "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "namespace": {
            "description": "The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "parentLearningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference",
            "x-nullable": true
          },
          "successCriteria": {
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.",
            "maxLength": 150,
            "type": "string",
            "x-nullable": true
          },
          "uri": {
            "description": "An unambiguous reference to the statement using a network-resolvable URI.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "learningStandardId",
          "description",
          "contentStandard",
          "gradeLevels",
          "academicSubjects",
          "namespace"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "Subject area for the learning standard.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard_Author": {
        "properties": {
          "author": {
            "description": "The person or organization chiefly responsible for the intellectual content of the standard.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "author"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard_ContentStandard": {
        "properties": {
          "authors": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LearningStandard_Author"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "beginDate": {
            "description": "The beginning of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The end of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "mandatingEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference"
          },
          "publicationDate": {
            "description": "The date on which this content was first published.",
            "format": "date",
            "type": "string"
          },
          "publicationStatusDescriptor": {
            "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
            "maxLength": 306,
            "type": "string"
          },
          "publicationYear": {
            "description": "The year at which this content was first published.",
            "type": "integer"
          },
          "title": {
            "description": "The name of the content standard, for example Common Core.",
            "maxLength": 75,
            "type": "string"
          },
          "uri": {
            "description": "An unambiguous reference to the standards using a network-resolvable URI.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "version": {
            "description": "The version identifier for the content.",
            "maxLength": 50,
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels for the specific learning standard.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard_LearningStandardIdentificationCode": {
        "properties": {
          "contentStandardName": {
            "description": "The name of the content standard, for example Common Core.",
            "maxLength": 65,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a Learning Standard.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "contentStandardName"
        ],
        "type": "object"
      },
      "EdFi_LearningStandard_Reference": {
        "properties": {
          "learningStandardId": {
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "learningStandardId"
        ],
        "type": "object"
      },
      "EdFi_LocalAccount": {
        "description": "The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account.",
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "accountName": {
            "description": "A descriptive name for the account.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "chartOfAccountReference": {
            "$ref": "#/components/schemas/EdFi_ChartOfAccount_Reference"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LocalAccount_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "accountIdentifier",
          "educationOrganizationReference",
          "fiscalYear",
          "chartOfAccountReference"
        ],
        "type": "object"
      },
      "EdFi_LocalAccount_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_LocalAccount_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.",
            "maxLength": 306,
            "type": "string"
          },
          "tagValue": {
            "description": "The value associated with the reporting tag.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_LocalActual": {
        "description": "The set of local education agency or charter management organization expense or revenue amounts.",
        "properties": {
          "amount": {
            "description": "Current balance for the account.",
            "format": "double",
            "type": "number"
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "financialCollectionDescriptor": {
            "description": "The accounting period or grouping for which the amount is collected.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/EdFi_LocalAccount_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localAccountReference",
          "asOfDate",
          "amount"
        ],
        "type": "object"
      },
      "EdFi_LocalActual_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "asOfDate",
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_LocalBudget": {
        "description": "The set of local education agency or charter management organization budget amounts.",
        "properties": {
          "amount": {
            "description": "Current balance for the account.",
            "format": "double",
            "type": "number"
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "financialCollectionDescriptor": {
            "description": "The accounting period or grouping for which the amount is collected.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/EdFi_LocalAccount_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localAccountReference",
          "asOfDate",
          "amount"
        ],
        "type": "object"
      },
      "EdFi_LocalBudget_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "asOfDate",
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_LocalContractedStaff": {
        "description": "The set of local education agency or charter management organization contracted staff amounts.",
        "properties": {
          "amount": {
            "description": "Current balance for the account.",
            "format": "double",
            "type": "number"
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "financialCollectionDescriptor": {
            "description": "The accounting period or grouping for which the amount is collected.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/EdFi_LocalAccount_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffReference",
          "localAccountReference",
          "asOfDate",
          "amount"
        ],
        "type": "object"
      },
      "EdFi_LocalContractedStaff_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "asOfDate",
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_LocalEducationAgency": {
        "description": "This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.",
        "properties": {
          "accountabilities": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LocalEducationAgency_LocalEducationAgencyAccountability"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "charterStatusDescriptor": {
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educationServiceCenterReference": {
            "$ref": "#/components/schemas/EdFi_EducationServiceCenter_Reference",
            "x-nullable": true
          },
          "federalFunds": {
            "items": {
              "$ref": "#/components/schemas/EdFi_LocalEducationAgency_LocalEducationAgencyFederalFund"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "localEducationAgencyCategoryDescriptor": {
            "description": "The category of local education agency/district.",
            "maxLength": 306,
            "type": "string"
          },
          "localEducationAgencyId": {
            "description": "The identifier assigned to a local education agency. It must be distinct from any other identifier assigned to educational organizations, such as a SchoolId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "parentLocalEducationAgencyReference": {
            "$ref": "#/components/schemas/EdFi_LocalEducationAgency_Reference",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "stateEducationAgencyReference": {
            "$ref": "#/components/schemas/EdFi_StateEducationAgency_Reference",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "localEducationAgencyId",
          "localEducationAgencyCategoryDescriptor",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_LocalEducationAgency_LocalEducationAgencyAccountability": {
        "properties": {
          "gunFreeSchoolsActReportingStatusDescriptor": {
            "description": "An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.",
            "maxLength": 306,
            "type": "string"
          },
          "schoolChoiceImplementStatusDescriptor": {
            "description": "An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.",
            "maxLength": 306,
            "type": "string"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
          }
        },
        "required": [
          "schoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_LocalEducationAgency_LocalEducationAgencyFederalFund": {
        "properties": {
          "fiscalYear": {
            "description": "The fiscal year for which the federal funds are received.",
            "type": "integer"
          },
          "innovativeDollarsSpent": {
            "description": "The total Title V, Part A funds expended by LEAs.",
            "format": "double",
            "type": "number"
          },
          "innovativeDollarsSpentStrategicPriorities": {
            "description": "The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.",
            "format": "double",
            "type": "number"
          },
          "innovativeProgramsFundsReceived": {
            "description": "The total Title V, Part A funds received by LEAs.",
            "format": "double",
            "type": "number"
          },
          "schoolImprovementAllocation": {
            "description": "The amount of Section 1003(a) and 1003(g) allocations to LEAs.",
            "format": "double",
            "type": "number"
          },
          "schoolImprovementReservedFundsPercentage": {
            "description": "An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED\u0027s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.",
            "format": "double",
            "type": "number"
          },
          "stateAssessmentAdministrationFunding": {
            "description": "The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state\u0027s schools and LEAs are held accountable for results.",
            "format": "double",
            "type": "number"
          },
          "supplementalEducationalServicesFundsSpent": {
            "description": "The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.",
            "format": "double",
            "type": "number"
          },
          "supplementalEducationalServicesPerPupilExpenditure": {
            "description": "The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_LocalEducationAgency_Reference": {
        "properties": {
          "localEducationAgencyId": {
            "description": "The identifier assigned to a local education agency. It must be distinct from any other identifier assigned to educational organizations, such as a SchoolId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localEducationAgencyId"
        ],
        "type": "object"
      },
      "EdFi_LocalEncumbrance": {
        "description": "The set of local education agency or charter management organization encumbrance amounts.",
        "properties": {
          "amount": {
            "description": "Current balance for the account.",
            "format": "double",
            "type": "number"
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "financialCollectionDescriptor": {
            "description": "The accounting period or grouping for which the amount is collected.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/EdFi_LocalAccount_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localAccountReference",
          "asOfDate",
          "amount"
        ],
        "type": "object"
      },
      "EdFi_LocalEncumbrance_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "asOfDate",
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_LocalPayroll": {
        "description": "The set of local education agency or charter management organization payroll amounts.",
        "properties": {
          "amount": {
            "description": "Current balance for the account.",
            "format": "double",
            "type": "number"
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "financialCollectionDescriptor": {
            "description": "The accounting period or grouping for which the amount is collected.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/EdFi_LocalAccount_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffReference",
          "localAccountReference",
          "asOfDate",
          "amount"
        ],
        "type": "object"
      },
      "EdFi_LocalPayroll_Reference": {
        "properties": {
          "accountIdentifier": {
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported. ",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "asOfDate": {
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for the account.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "asOfDate",
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_Location": {
        "description": "This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.",
        "properties": {
          "classroomIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "maximumNumberOfSeats": {
            "description": "The most number of seats the class can maintain.",
            "type": "integer",
            "x-nullable": true
          },
          "optimalNumberOfSeats": {
            "description": "The number of seats that is most favorable to the class.",
            "type": "integer",
            "x-nullable": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "schoolReference",
          "classroomIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_Location_Reference": {
        "properties": {
          "classroomIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "classroomIdentificationCode",
          "schoolId"
        ],
        "type": "object"
      },
      "EdFi_ObjectDimension": {
        "description": "The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth.",
        "properties": {
          "code": {
            "description": "The code representation of the account object dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account object dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account object dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ObjectDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ObjectDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account object dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account object dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ObjectDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ObjectiveAssessment": {
        "description": "This entity represents subtests that assess specific learning objectives.",
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The subject area of the objective assessment.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "assessmentItems": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_AssessmentItem"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The description of the objective assessment (e.g., vocabulary, measurement, or geometry).",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "learningStandards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_LearningStandard"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "maxRawScore": {
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "nomenclature": {
            "description": "Reflects the specific nomenclature used for this level of objective assessment.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "parentObjectiveAssessmentReference": {
            "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_Reference",
            "x-nullable": true
          },
          "percentOfAssessment": {
            "description": "The percentage of the assessment that tests this objective.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "performanceLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_AssessmentPerformanceLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "scores": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_AssessmentScore"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "identificationCode",
          "assessmentReference"
        ],
        "type": "object"
      },
      "EdFi_ObjectiveAssessment_AssessmentItem": {
        "properties": {
          "assessmentItemReference": {
            "$ref": "#/components/schemas/EdFi_AssessmentItem_Reference"
          }
        },
        "required": [
          "assessmentItemReference"
        ],
        "type": "object"
      },
      "EdFi_ObjectiveAssessment_AssessmentPerformanceLevel": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "maximumScore": {
            "description": "The maximum score to make the indicated level of performance.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score required to make the indicated level of performance.",
            "maxLength": 35,
            "type": "string"
          },
          "performanceLevelDescriptor": {
            "description": "The performance level(s) defined for the assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "performanceLevelIndicatorName": {
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "maxLength": 60,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "performanceLevelDescriptor",
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ObjectiveAssessment_AssessmentScore": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "maximumScore": {
            "description": "The maximum score possible on the assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "minimumScore": {
            "description": "The minimum score possible on the assessment.",
            "maxLength": 35,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ObjectiveAssessment_LearningStandard": {
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_ObjectiveAssessment_Reference": {
        "properties": {
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentIdentifier",
          "namespace",
          "identificationCode"
        ],
        "type": "object"
      },
      "EdFi_OpenStaffPosition": {
        "description": "This entity represents an open staff position that the education organization is seeking to fill.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_OpenStaffPosition_AcademicSubject"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "datePosted": {
            "description": "Date the open staff position was posted.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "datePostingRemoved": {
            "description": "The date the posting was removed or filled.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "employmentStatusDescriptor": {
            "description": "Reflects the type of employment or contract desired for the position.",
            "maxLength": 306,
            "type": "string"
          },
          "instructionalGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_OpenStaffPosition_InstructionalGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "positionTitle": {
            "description": "The descriptive name of an individual\u0027s position.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "postingResultDescriptor": {
            "description": "Indication of whether the OpenStaffPosition was filled or retired without filling.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "programAssignmentDescriptor": {
            "description": "The name of the program for which the open staff position will be assigned.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "requisitionNumber": {
            "description": "The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.",
            "maxLength": 20,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffClassificationDescriptor": {
            "description": "The titles of employment, official status, or rank of education staff.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "employmentStatusDescriptor",
          "staffClassificationDescriptor",
          "requisitionNumber",
          "datePosted",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_OpenStaffPosition_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The teaching field required for the open staff position.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_OpenStaffPosition_InstructionalGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The set of grade levels for which the position\u0027s assignment is responsible.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_OpenStaffPosition_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "requisitionNumber": {
            "description": "The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.",
            "maxLength": 20,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "requisitionNumber"
        ],
        "type": "object"
      },
      "EdFi_OperationalUnitDimension": {
        "description": "The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.",
        "properties": {
          "code": {
            "description": "The code representation of the account operational unit dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account operational unit dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_OperationalUnitDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_OperationalUnitDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account operational unit dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_OperationalUnitDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_OrganizationDepartment": {
        "description": "An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.",
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The intended major subject area of the department.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "organizationDepartmentId": {
            "description": "The unique identification code for the organization department. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "parentEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "organizationDepartmentId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_OrganizationDepartment_Reference": {
        "properties": {
          "organizationDepartmentId": {
            "description": "The unique identification code for the organization department. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "organizationDepartmentId"
        ],
        "type": "object"
      },
      "EdFi_Person": {
        "description": "This entity represents a human being.",
        "properties": {
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Person_Reference": {
        "properties": {
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryEvent": {
        "description": "This entity captures significant postsecondary events during a student\u0027s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student\u0027s enrollment at a post-secondary institution.",
        "properties": {
          "eventDate": {
            "description": "The date the event occurred or was recorded.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "postSecondaryEventCategoryDescriptor": {
            "description": "The post secondary event that is logged.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "postSecondaryInstitutionReference": {
            "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution_Reference",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "postSecondaryEventCategoryDescriptor",
          "studentReference"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryEvent_Reference": {
        "properties": {
          "eventDate": {
            "description": "The date the event occurred or was recorded.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "postSecondaryEventCategoryDescriptor": {
            "description": "The post secondary event that is logged.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "postSecondaryEventCategoryDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryInstitution": {
        "description": "An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "administrativeFundingControlDescriptor": {
            "description": "A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "mediumOfInstructions": {
            "items": {
              "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution_MediumOfInstruction"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "postSecondaryInstitutionId": {
            "description": "The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "postSecondaryInstitutionLevelDescriptor": {
            "description": "A classification of whether a post secondary institution\u0027s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "postSecondaryInstitutionId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryInstitution_MediumOfInstruction": {
        "properties": {
          "mediumOfInstructionDescriptor": {
            "description": "The categories in which an institution serves the students.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "mediumOfInstructionDescriptor"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryInstitution_Reference": {
        "properties": {
          "postSecondaryInstitutionId": {
            "description": "The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "postSecondaryInstitutionId"
        ],
        "type": "object"
      },
      "EdFi_ProgramDimension": {
        "description": "The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities.",
        "properties": {
          "code": {
            "description": "The code representation of the account program dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account program dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account program dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ProgramDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ProgramDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account program dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account program dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ProgramDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationElement": {
        "description": "The lowest level elements or criterion of a students\u0027s performance that is being evaluated, typically by a rubric.",
        "properties": {
          "elementMaxNumericRating": {
            "description": "The maximum summary numerical rating or score for the program evaluation element.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "elementMinNumericRating": {
            "description": "The minimum summary numerical rating or score for the program evaluation element. If omitted, assumed to be 0.0.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "elementSortOrder": {
            "description": "The sort order of this program evaluation element.",
            "type": "integer",
            "x-nullable": true
          },
          "programEvaluationElementDescription": {
            "description": "The long description of the program evaluation element.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "programEvaluationElementTitle": {
            "description": "The name or title of the program evaluation element.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement_ElementProgramEvaluationLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programEvaluationObjectiveReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective_Reference",
            "x-nullable": true
          },
          "programEvaluationReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programEvaluationReference",
          "programEvaluationElementTitle"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationElement_ElementProgramEvaluationLevel": {
        "properties": {
          "maxNumericRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minNumericRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "ratingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationElement_Reference": {
        "properties": {
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationElementTitle": {
            "description": "The name or title of the program evaluation element.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "description": "The name of the period for the program evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "description": "An assigned unique identifier for the student program evaluation.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "description": "The type of program evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programEvaluationElementTitle"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationObjective": {
        "description": "A subcomponent of a ProgramEvaluation, a specific student objective or domain of performance that is being evaluated.",
        "properties": {
          "objectiveMaxNumericRating": {
            "description": "The maximum summary numerical rating or score for the program evaluation objective.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "objectiveMinNumericRating": {
            "description": "The minimum summary numerical rating or score for the program evaluation objective. If omitted, assumed to be 0.0",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "objectiveSortOrder": {
            "description": "The sort order of this program evaluation objective.",
            "type": "integer",
            "x-nullable": true
          },
          "programEvaluationLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective_ObjectiveProgramEvaluationLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programEvaluationObjectiveDescription": {
            "description": "The long description of the program evaluation objective.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "programEvaluationObjectiveTitle": {
            "description": "The name or title of the program evaluation objective.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programEvaluationReference",
          "programEvaluationObjectiveTitle"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationObjective_ObjectiveProgramEvaluationLevel": {
        "properties": {
          "maxNumericRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minNumericRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "ratingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationObjective_Reference": {
        "properties": {
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationObjectiveTitle": {
            "description": "The name or title of the program evaluation objective.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "description": "The name of the period for the program evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "description": "An assigned unique identifier for the student program evaluation.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "description": "The type of program evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programEvaluationObjectiveTitle"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluation": {
        "description": "An evaluation instrument applied to evaluate a student in the context of a program. Student evaluations are typically applied by a staff member based upon a rubric.",
        "properties": {
          "evaluationMaxNumericRating": {
            "description": "The maximum summary numerical rating or score for the program evaluation.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "evaluationMinNumericRating": {
            "description": "The minimum summary numerical rating or score for the program evaluation. If omitted, assumed to be 0.0",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "levels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ProgramEvaluation_ProgramEvaluationLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programEvaluationDescription": {
            "description": "The long description of the program evaluation.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "programEvaluationPeriodDescriptor": {
            "description": "The name of the period for the program evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "description": "An assigned unique identifier for the student program evaluation.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "description": "The type of program evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programReference",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programEvaluationPeriodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluation_ProgramEvaluationLevel": {
        "properties": {
          "maxNumericRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minNumericRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "ratingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluation_Reference": {
        "properties": {
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "description": "The name of the period for the program evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "description": "An assigned unique identifier for the student program evaluation.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "description": "The type of program evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Program": {
        "description": "This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.",
        "properties": {
          "characteristics": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Program_ProgramCharacteristic"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "learningStandards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Program_LearningStandard"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programId": {
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sponsors": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Program_ProgramSponsor"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "educationOrganizationReference",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Program_LearningStandard": {
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/EdFi_LearningStandard_Reference"
          }
        },
        "required": [
          "learningStandardReference"
        ],
        "type": "object"
      },
      "EdFi_Program_ProgramCharacteristic": {
        "properties": {
          "programCharacteristicDescriptor": {
            "description": "Reflects important characteristics of the program, such as categories or particular indications.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "programCharacteristicDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Program_ProgramSponsor": {
        "properties": {
          "programSponsorDescriptor": {
            "description": "Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual\u0027s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "programSponsorDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Program_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ProjectDimension": {
        "description": "The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels.",
        "properties": {
          "code": {
            "description": "The code representation of the account project dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account project dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account project dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ProjectDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ProjectDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account project dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account project dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_ProjectDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_ReportCard": {
        "description": "This educational entity represents the collection of student grades for courses taken during a grading period.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "gradePointAverages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ReportCard_GradePointAverage"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "grades": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ReportCard_Grade"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/EdFi_GradingPeriod_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "numberOfDaysAbsent": {
            "description": "The number of days an individual is absent when school is in session during a given reporting period.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "numberOfDaysInAttendance": {
            "description": "The number of days an individual is present when school is in session during a given reporting period.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "numberOfDaysTardy": {
            "description": "The number of days an individual is tardy during a given reporting period.",
            "minimum": 0,
            "type": "integer",
            "x-nullable": true
          },
          "studentCompetencyObjectives": {
            "items": {
              "$ref": "#/components/schemas/EdFi_ReportCard_StudentCompetencyObjective"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "educationOrganizationReference",
          "gradingPeriodReference"
        ],
        "type": "object"
      },
      "EdFi_ReportCard_Grade": {
        "properties": {
          "gradeReference": {
            "$ref": "#/components/schemas/EdFi_Grade_Reference"
          }
        },
        "required": [
          "gradeReference"
        ],
        "type": "object"
      },
      "EdFi_ReportCard_GradePointAverage": {
        "properties": {
          "gradePointAverageTypeDescriptor": {
            "description": "The system used for calculating the grade point average for an individual.",
            "maxLength": 306,
            "type": "string"
          },
          "gradePointAverageValue": {
            "description": "The value of the grade points earned divided by the number of credits attempted.",
            "format": "double",
            "type": "number"
          },
          "isCumulative": {
            "description": "Indicator of whether or not the Grade Point Average value is cumulative.",
            "type": "boolean"
          },
          "maxGradePointAverageValue": {
            "description": "The maximum value for the grade point average.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "gradePointAverageTypeDescriptor",
          "gradePointAverageValue"
        ],
        "type": "object"
      },
      "EdFi_ReportCard_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "description": "The state\u0027s name of the period for which grades are reported.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "description": "The school\u0027s descriptive name of the grading period.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "gradingPeriodSchoolId",
          "gradingPeriodSchoolYear",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_ReportCard_StudentCompetencyObjective": {
        "properties": {
          "studentCompetencyObjectiveReference": {
            "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective_Reference"
          }
        },
        "required": [
          "studentCompetencyObjectiveReference"
        ],
        "type": "object"
      },
      "EdFi_RestraintEvent": {
        "description": "This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.",
        "properties": {
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/EdFi_DisciplineIncident_Reference",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "description": "The setting where the RestraintEvent was exercised.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eventDate": {
            "description": "Month, day, and year of the restraint event.",
            "format": "date",
            "type": "string"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_RestraintEvent_Program"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "reasons": {
            "items": {
              "$ref": "#/components/schemas/EdFi_RestraintEvent_RestraintEventReason"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "restraintEventIdentifier": {
            "description": "A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "restraintEventIdentifier",
          "eventDate",
          "studentReference",
          "schoolReference"
        ],
        "type": "object"
      },
      "EdFi_RestraintEvent_Program": {
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference"
          }
        },
        "required": [
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_RestraintEvent_Reference": {
        "properties": {
          "restraintEventIdentifier": {
            "description": "A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "restraintEventIdentifier",
          "schoolId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_RestraintEvent_RestraintEventReason": {
        "properties": {
          "restraintEventReasonDescriptor": {
            "description": "A categorization of the circumstances or reason for the RestraintEvent.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "restraintEventReasonDescriptor"
        ],
        "type": "object"
      },
      "EdFi_SchoolYear": {
        "description": "A school year enumeration",
        "properties": {
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer"
          }
        },
        "required": [
          "schoolYear"
        ],
        "type": "object"
      },
      "EdFi_School": {
        "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "administrativeFundingControlDescriptor": {
            "description": "The type of education institution as classified by its funding source, for example public or private.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "charterApprovalAgencyTypeDescriptor": {
            "description": "The type of agency that approved the establishment or continuation of a charter school.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "charterApprovalSchoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-nullable": true
          },
          "charterStatusDescriptor": {
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationCategories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_School_GradeLevel"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internetAccessDescriptor": {
            "description": "The type of Internet access available.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "localEducationAgencyReference": {
            "$ref": "#/components/schemas/EdFi_LocalEducationAgency_Reference",
            "x-nullable": true
          },
          "magnetSpecialProgramEmphasisSchoolDescriptor": {
            "description": "A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "schoolCategories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_School_SchoolCategory"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolTypeDescriptor": {
            "description": "The type of education institution as classified by its primary focus.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "titleIPartASchoolDesignationDescriptor": {
            "description": "Denotes the Title I Part A designation for the school.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          },
          "_ext": {
            "$ref": "#/components/schemas/EdFi_SchoolExtension"
          }
        },
        "required": [
          "schoolId",
          "gradeLevels",
          "nameOfInstitution",
          "educationOrganizationCategories"
        ],
        "type": "object"
      },
      "EdFi_School_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels served at the school.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_School_Reference": {
        "properties": {
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "schoolId"
        ],
        "type": "object"
      },
      "EdFi_School_SchoolCategory": {
        "properties": {
          "schoolCategoryDescriptor": {
            "description": "The one or more categories of school.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "schoolCategoryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_SectionAttendanceTakenEvent": {
        "description": "Captures attendance taken event for given section.",
        "properties": {
          "calendarDateReference": {
            "$ref": "#/components/schemas/EdFi_CalendarDate_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "description": "The date the section attendance taken event was submitted, which could be a different date than the instructional day.",
            "format": "date",
            "type": "string"
          },
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-nullable": true
          }
        },
        "required": [
          "sectionReference",
          "calendarDateReference",
          "eventDate"
        ],
        "type": "object"
      },
      "EdFi_SectionAttendanceTakenEvent_Reference": {
        "properties": {
          "calendarCode": {
            "description": "The identifier for the calendar.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "date": {
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "calendarCode",
          "schoolYear",
          "date",
          "localCourseCode",
          "schoolId",
          "sessionName",
          "sectionIdentifier"
        ],
        "type": "object"
      },
      "EdFi_Section": {
        "description": "This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.",
        "properties": {
          "availableCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "availableCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "availableCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "characteristics": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Section_SectionCharacteristic"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "classPeriods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Section_ClassPeriod"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "courseLevelCharacteristics": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Section_CourseLevelCharacteristic"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "courseOfferingReference": {
            "$ref": "#/components/schemas/EdFi_CourseOffering_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "educationalEnvironmentDescriptor": {
            "description": "The setting in which a student receives education and related services.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "instructionLanguageDescriptor": {
            "description": "The primary language of instruction. If omitted, English is assumed.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "locationReference": {
            "$ref": "#/components/schemas/EdFi_Location_Reference",
            "x-nullable": true
          },
          "locationSchoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-nullable": true
          },
          "mediumOfInstructionDescriptor": {
            "description": "The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "offeredGradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Section_OfferedGradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "officialAttendancePeriod": {
            "description": "Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.",
            "type": "boolean",
            "x-nullable": true
          },
          "populationServedDescriptor": {
            "description": "The type of students the section is offered and tailored to.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Section_Program"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionName": {
            "description": "A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "sectionTypeDescriptor": {
            "description": "Specifies whether the section is for attendance only, credit only, or both.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "sequenceOfCourse": {
            "description": "When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.",
            "maximum": 8,
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "sectionIdentifier",
          "courseOfferingReference"
        ],
        "type": "object"
      },
      "EdFi_Section_ClassPeriod": {
        "properties": {
          "classPeriodReference": {
            "$ref": "#/components/schemas/EdFi_ClassPeriod_Reference"
          }
        },
        "required": [
          "classPeriodReference"
        ],
        "type": "object"
      },
      "EdFi_Section_CourseLevelCharacteristic": {
        "properties": {
          "courseLevelCharacteristicDescriptor": {
            "description": "The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "courseLevelCharacteristicDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Section_OfferedGradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Section_Program": {
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference"
          }
        },
        "required": [
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_Section_Reference": {
        "properties": {
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName",
          "sectionIdentifier"
        ],
        "type": "object"
      },
      "EdFi_Section_SectionCharacteristic": {
        "properties": {
          "sectionCharacteristicDescriptor": {
            "description": "Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "sectionCharacteristicDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Session": {
        "description": "A specific designated unit of time during which instruction is provided, grades are reported and academic credits are awarded to students (whenever applicable). Sessions serve as organized segments of the academic year and can be interrupted by vacations or other events.",
        "properties": {
          "academicWeeks": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Session_AcademicWeek"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "beginDate": {
            "description": "Month, day, and year of the first day of the session.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "Month, day and year of the last day of the session.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "gradingPeriods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Session_GradingPeriod"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "A descriptor value to indicate the term that the session is associated with.",
            "maxLength": 306,
            "type": "string"
          },
          "totalInstructionalDays": {
            "description": "The total number of instructional days in the school calendar.",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "sessionName",
          "schoolYearTypeReference",
          "beginDate",
          "endDate",
          "termDescriptor",
          "totalInstructionalDays",
          "schoolReference"
        ],
        "type": "object"
      },
      "EdFi_Session_AcademicWeek": {
        "properties": {
          "academicWeekReference": {
            "$ref": "#/components/schemas/EdFi_AcademicWeek_Reference"
          }
        },
        "required": [
          "academicWeekReference"
        ],
        "type": "object"
      },
      "EdFi_Session_GradingPeriod": {
        "properties": {
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/EdFi_GradingPeriod_Reference"
          }
        },
        "required": [
          "gradingPeriodReference"
        ],
        "type": "object"
      },
      "EdFi_Session_Reference": {
        "properties": {
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "schoolId",
          "schoolYear",
          "sessionName"
        ],
        "type": "object"
      },
      "EdFi_SourceDimension": {
        "description": "The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.",
        "properties": {
          "code": {
            "description": "The code representation of the account source dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "description": "A description of the account source dimension.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account source dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "reportingTags": {
            "items": {
              "$ref": "#/components/schemas/EdFi_SourceDimension_ReportingTag"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_SourceDimension_Reference": {
        "properties": {
          "code": {
            "description": "The code representation of the account source dimension.",
            "maxLength": 16,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "description": "The fiscal year for which the account source dimension is valid.",
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_SourceDimension_ReportingTag": {
        "properties": {
          "reportingTagDescriptor": {
            "description": "Optional tag for accountability reporting.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffAbsenceEvent": {
        "description": "This event entity represents the recording of the dates of staff absence.",
        "properties": {
          "absenceEventCategoryDescriptor": {
            "description": "The code describing the type of absence.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "absenceEventReason": {
            "description": "Expanded reason for the staff absence.",
            "maxLength": 40,
            "type": "string",
            "x-nullable": true
          },
          "eventDate": {
            "description": "Date for this leave event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "hoursAbsent": {
            "description": "The hours the staff was absent, if not the entire working day.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "absenceEventCategoryDescriptor",
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_StaffAbsenceEvent_Reference": {
        "properties": {
          "absenceEventCategoryDescriptor": {
            "description": "The code describing the type of absence.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "description": "Date for this leave event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "absenceEventCategoryDescriptor",
          "eventDate",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffCohortAssociation": {
        "description": "This association indicates the staff associated with a cohort of students.",
        "properties": {
          "beginDate": {
            "description": "Start date for the association of staff to this cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortReference": {
            "$ref": "#/components/schemas/EdFi_Cohort_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "End date for the association of staff to this cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentRecordAccess": {
            "description": "Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "staffReference",
          "cohortReference",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StaffCohortAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "Start date for the association of staff to this cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortIdentifier": {
            "description": "The name or ID for the cohort.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "cohortIdentifier",
          "educationOrganizationId",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffDisciplineIncidentAssociation": {
        "description": "This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.",
        "properties": {
          "disciplineIncidentParticipationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StaffDisciplineIncidentAssociation_DisciplineIncidentParticipationCode"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/EdFi_DisciplineIncident_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffReference",
          "disciplineIncidentReference",
          "disciplineIncidentParticipationCodes"
        ],
        "type": "object"
      },
      "EdFi_StaffDisciplineIncidentAssociation_DisciplineIncidentParticipationCode": {
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "description": "The role or type of participation of a student in a discipline incident.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffDisciplineIncidentAssociation_Reference": {
        "properties": {
          "incidentIdentifier": {
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "incidentIdentifier",
          "schoolId",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationAssignmentAssociation": {
        "description": "This association indicates the education organization to which a staff member provides services.",
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the start or effective date of a staff member\u0027s employment, contract, or relationship with the education organization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "credentialReference": {
            "$ref": "#/components/schemas/EdFi_Credential_Reference",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "employmentStaffEducationOrganizationEmploymentAssociationReference": {
            "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationEmploymentAssociation_Reference",
            "x-nullable": true
          },
          "endDate": {
            "description": "Month, day, and year of the end or termination date of a staff member\u0027s employment, contract, or relationship with the education organization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "fullTimeEquivalency": {
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "orderOfAssignment": {
            "description": "Describes whether the assignment is this the staff member\u0027s primary assignment, secondary assignment, etc.",
            "type": "integer",
            "x-nullable": true
          },
          "positionTitle": {
            "description": "The descriptive name of an individual\u0027s position.",
            "maxLength": 100,
            "type": "string",
            "x-nullable": true
          },
          "staffClassificationDescriptor": {
            "description": "The titles of employment, official status, or rank of education staff.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffReference",
          "educationOrganizationReference",
          "staffClassificationDescriptor",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationAssignmentAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the start or effective date of a staff member\u0027s employment, contract, or relationship with the education organization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffClassificationDescriptor": {
            "description": "The titles of employment, official status, or rank of education staff.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "staffUniqueId",
          "staffClassificationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationContactAssociation": {
        "description": "This association provides the contact information of the staff associated with the education organization.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation_Address",
            "x-nullable": true
          },
          "contactTitle": {
            "description": "The title of the contact in the context of the education organization.",
            "maxLength": 75,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "contactTypeDescriptor": {
            "description": "Indicates the type for the contact information.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMailAddress": {
            "description": "The email for the contact associated with the education organization.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string"
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "telephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation_Telephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "staffReference",
          "educationOrganizationReference",
          "contactTitle",
          "electronicMailAddress"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationContactAssociation_Address": {
        "properties": {
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "apartmentRoomSuiteNumber": {
            "description": "The apartment, room, or suite number of an address.",
            "maxLength": 50,
            "type": "string"
          },
          "buildingSiteNumber": {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "maxLength": 20,
            "type": "string"
          },
          "city": {
            "description": "The name of the city in which an address is located.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "congressionalDistrict": {
            "description": "The congressional district in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "countyFIPSCode": {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "doNotPublishIndicator": {
            "description": "An indication that the address should not be published.",
            "type": "boolean"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "localeDescriptor": {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "maxLength": 306,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "nameOfCounty": {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "postalCode": {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "maxLength": 17,
            "type": "string"
          },
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "maxLength": 306,
            "type": "string"
          },
          "streetNumberName": {
            "description": "The street number and street name or post office box number of an address.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "streetNumberName",
          "city",
          "stateAbbreviationDescriptor",
          "postalCode",
          "addressTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationContactAssociation_Period": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationContactAssociation_Reference": {
        "properties": {
          "contactTitle": {
            "description": "The title of the contact in the context of the education organization.",
            "maxLength": 75,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "contactTitle",
          "educationOrganizationId",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationContactAssociation_Telephone": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the telephone number should not be published.",
            "type": "boolean"
          },
          "orderOfPriority": {
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "minimum": 1,
            "type": "integer"
          },
          "telephoneNumber": {
            "description": "The telephone number including the area code, and extension, if applicable.",
            "maxLength": 24,
            "type": "string"
          },
          "telephoneNumberTypeDescriptor": {
            "description": "The type of communication number listed for an individual or organization.",
            "maxLength": 306,
            "type": "string"
          },
          "textMessageCapabilityIndicator": {
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "type": "boolean"
          }
        },
        "required": [
          "telephoneNumber",
          "telephoneNumberTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationEmploymentAssociation": {
        "description": "This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.",
        "properties": {
          "annualWage": {
            "description": "Annual wage associated with the employment position being reported.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "credentialReference": {
            "$ref": "#/components/schemas/EdFi_Credential_Reference",
            "x-nullable": true
          },
          "department": {
            "description": "The department or suborganization the employee/contractor is associated with in the education organization.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "employmentStatusDescriptor": {
            "description": "Reflects the type of employment or contract.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "fullTimeEquivalency": {
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "hireDate": {
            "description": "The month, day, and year on which an individual was hired for a position.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "hourlyWage": {
            "description": "Hourly wage associated with the employment position being reported.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "offerDate": {
            "description": "Date at which the staff member was made an official offer for this employment.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "separationDescriptor": {
            "description": "Type of employment separation.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "separationReasonDescriptor": {
            "description": "Reason for terminating the employment.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffReference",
          "educationOrganizationReference",
          "employmentStatusDescriptor",
          "hireDate"
        ],
        "type": "object"
      },
      "EdFi_StaffEducationOrganizationEmploymentAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "employmentStatusDescriptor": {
            "description": "Reflects the type of employment or contract.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "hireDate": {
            "description": "The month, day, and year on which an individual was hired for a position.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "employmentStatusDescriptor",
          "hireDate",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffLeave": {
        "description": "This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).",
        "properties": {
          "beginDate": {
            "description": "The begin date of the staff leave.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The end date of the staff leave.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "reason": {
            "description": "Expanded reason for the staff leave.",
            "maxLength": 40,
            "type": "string",
            "x-nullable": true
          },
          "staffLeaveEventCategoryDescriptor": {
            "description": "The code describing the type of leave taken.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "substituteAssigned": {
            "description": "Indicator of whether a substitute was assigned during the period of staff leave.",
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "beginDate",
          "staffLeaveEventCategoryDescriptor",
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_StaffLeave_Reference": {
        "properties": {
          "beginDate": {
            "description": "The begin date of the staff leave.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffLeaveEventCategoryDescriptor": {
            "description": "The code describing the type of leave taken.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "staffUniqueId",
          "staffLeaveEventCategoryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffProgramAssociation": {
        "description": "This association indicates the staff associated with a program.",
        "properties": {
          "beginDate": {
            "description": "Start date for the association of staff to this program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "End date for the association of staff to this program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentRecordAccess": {
            "description": "Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "staffReference",
          "programReference",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StaffProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "Start date for the association of staff to this program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffSchoolAssociation": {
        "description": "This association indicates the school(s) to which a staff member provides instructional services.",
        "properties": {
          "academicSubjects": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StaffSchoolAssociation_AcademicSubject"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "calendarReference": {
            "$ref": "#/components/schemas/EdFi_Calendar_Reference",
            "x-nullable": true
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StaffSchoolAssociation_GradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programAssignmentDescriptor": {
            "description": "The name of the program for which the individual is assigned.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffReference",
          "schoolReference",
          "programAssignmentDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffSchoolAssociation_AcademicSubject": {
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The academic subjects the individual is eligible to teach.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffSchoolAssociation_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels the individual is eligible to teach.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StaffSchoolAssociation_Reference": {
        "properties": {
          "programAssignmentDescriptor": {
            "description": "The name of the program for which the individual is assigned.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "programAssignmentDescriptor",
          "schoolId",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StaffSectionAssociation": {
        "description": "This association indicates the class sections to which a staff member is assigned.",
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of a teacher\u0027s assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "classroomPositionDescriptor": {
            "description": "The type of position the staff member holds in the specific class/section.",
            "maxLength": 306,
            "type": "string"
          },
          "endDate": {
            "description": "Month, day, and year of the last day of a staff member\u0027s assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "highlyQualifiedTeacher": {
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.",
            "type": "boolean",
            "x-nullable": true
          },
          "percentageContribution": {
            "description": "Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "teacherStudentDataLinkExclusion": {
            "description": "Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "staffReference",
          "sectionReference",
          "classroomPositionDescriptor",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StaffSectionAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of a teacher\u0027s assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName",
          "sectionIdentifier",
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_Staff": {
        "description": "This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "ancestryEthnicOrigins": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_AncestryEthnicOrigin"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "birthDate": {
            "description": "The month, day, and year on which an individual was born.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "citizenshipStatusDescriptor": {
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "maxLength": 306,
            "type": "string"
          },
          "credentials": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Credential"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "electronicMails": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_ElectronicMail"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "genderIdentity": {
            "description": "The gender the staff member identifies themselves as.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string",
            "x-nullable": true
          },
          "highestCompletedLevelOfEducationDescriptor": {
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "highlyQualifiedTeacher": {
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.",
            "type": "boolean",
            "x-nullable": true
          },
          "hispanicLatinoEthnicity": {
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \u0022Spanish origin,\u0022 can be used in addition to \u0022Hispanic or Latino.\u0022",
            "type": "boolean",
            "x-Ed-Fi-deprecatedReasons": "This element is scheduled for removal by 2029. Users of this element are advised to use Race instead.",
            "x-Ed-Fi-isDeprecated": true,
            "x-nullable": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_StaffIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "identificationDocuments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Citizenship_IdentificationDocument"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Language"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "loginId": {
            "description": "The login ID for the user; used for security access control interface.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "maidenName": {
            "description": "The individual\u0027s maiden name.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "otherNames": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_OtherName"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-nullable": true
          },
          "personalIdentificationDocuments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Name_PersonalIdentificationDocument"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string",
            "x-nullable": true
          },
          "preferredFirstName": {
            "description": "The first name the individual prefers, if different from their legal first name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "description": "The last name the individual prefers, if different from their legal last name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "races": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Race"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "recognitions": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Recognition"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sexDescriptor": {
            "description": "The birth sex of the staff member.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "telephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Telephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "tribalAffiliations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_TribalAffiliation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "visas": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Citizenship_Visa"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "yearsOfPriorProfessionalExperience": {
            "description": "The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "yearsOfPriorTeachingExperience": {
            "description": "The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          }
        },
        "required": [
          "staffUniqueId",
          "firstName",
          "lastSurname"
        ],
        "type": "object"
      },
      "EdFi_Staff_Address": {
        "properties": {
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "apartmentRoomSuiteNumber": {
            "description": "The apartment, room, or suite number of an address.",
            "maxLength": 50,
            "type": "string"
          },
          "buildingSiteNumber": {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "maxLength": 20,
            "type": "string"
          },
          "city": {
            "description": "The name of the city in which an address is located.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "congressionalDistrict": {
            "description": "The congressional district in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "countyFIPSCode": {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "doNotPublishIndicator": {
            "description": "An indication that the address should not be published.",
            "type": "boolean"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "localeDescriptor": {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "maxLength": 306,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "nameOfCounty": {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "postalCode": {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "maxLength": 17,
            "type": "string"
          },
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "maxLength": 306,
            "type": "string"
          },
          "streetNumberName": {
            "description": "The street number and street name or post office box number of an address.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "streetNumberName",
          "city",
          "stateAbbreviationDescriptor",
          "postalCode",
          "addressTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_AncestryEthnicOrigin": {
        "properties": {
          "ancestryEthnicOriginDescriptor": {
            "description": "The original peoples or cultures with which the individual identifies.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ancestryEthnicOriginDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Citizenship_IdentificationDocument": {
        "properties": {
          "documentExpirationDate": {
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "type": "string"
          },
          "documentTitle": {
            "description": "The title of the document given by the issuer.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationDocumentUseDescriptor": {
            "description": "The primary function of the document used for establishing identity.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerCountryDescriptor": {
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerDocumentIdentificationCode": {
            "description": "The unique identifier on the issuer\u0027s identification system.",
            "maxLength": 60,
            "type": "string"
          },
          "issuerName": {
            "description": "Name of the entity or institution that issued the document.",
            "maxLength": 150,
            "type": "string"
          },
          "personalInformationVerificationDescriptor": {
            "description": "The category of the document relative to its purpose.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EdFi_Staff_Citizenship_Visa": {
        "properties": {
          "visaDescriptor": {
            "description": "An indicator of a non-US citizen\u0027s Visa type.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "visaDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Credential": {
        "properties": {
          "credentialReference": {
            "$ref": "#/components/schemas/EdFi_Credential_Reference"
          }
        },
        "required": [
          "credentialReference"
        ],
        "type": "object"
      },
      "EdFi_Staff_ElectronicMail": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the electronic email address should not be published.",
            "type": "boolean"
          },
          "electronicMailAddress": {
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string"
          },
          "electronicMailTypeDescriptor": {
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "primaryEmailAddressIndicator": {
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "type": "boolean"
          }
        },
        "required": [
          "electronicMailAddress",
          "electronicMailTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_InternationalAddress": {
        "properties": {
          "addressLine1": {
            "description": "The first line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine4": {
            "description": "The fourth line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "beginDate": {
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "countryDescriptor": {
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "endDate": {
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "addressTypeDescriptor",
          "addressLine1",
          "countryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Language": {
        "properties": {
          "languageDescriptor": {
            "description": "A specification of which written or spoken communication is being used.",
            "maxLength": 306,
            "type": "string"
          },
          "uses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Staff_LanguageUse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "languageDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_LanguageUse": {
        "properties": {
          "languageUseDescriptor": {
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Name_PersonalIdentificationDocument": {
        "properties": {
          "documentExpirationDate": {
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "type": "string"
          },
          "documentTitle": {
            "description": "The title of the document given by the issuer.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationDocumentUseDescriptor": {
            "description": "The primary function of the document used for establishing identity.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerCountryDescriptor": {
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerDocumentIdentificationCode": {
            "description": "The unique identifier on the issuer\u0027s identification system.",
            "maxLength": 60,
            "type": "string"
          },
          "issuerName": {
            "description": "Name of the entity or institution that issued the document.",
            "maxLength": 150,
            "type": "string"
          },
          "personalInformationVerificationDescriptor": {
            "description": "The category of the document relative to its purpose.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "personalInformationVerificationDescriptor",
          "identificationDocumentUseDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_OtherName": {
        "properties": {
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string"
          },
          "otherNameTypeDescriptor": {
            "description": "The types of alternate names for an individual.",
            "maxLength": 306,
            "type": "string"
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastSurname",
          "otherNameTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Period": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_Staff_Race": {
        "properties": {
          "raceDescriptor": {
            "description": "The general racial category which most clearly reflects the individual\u0027s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "raceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Recognition": {
        "properties": {
          "achievementCategoryDescriptor": {
            "description": "The category of achievement attributed to the individual.",
            "maxLength": 306,
            "type": "string"
          },
          "achievementCategorySystem": {
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "maxLength": 60,
            "type": "string"
          },
          "achievementTitle": {
            "description": "The title assigned to the achievement.",
            "maxLength": 60,
            "type": "string"
          },
          "criteria": {
            "description": "The criteria for competency-based completion of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "criteriaURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "evidenceStatement": {
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "imageURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "issuerName": {
            "description": "The name of the agent, entity, or institution issuing the element.",
            "maxLength": 150,
            "type": "string"
          },
          "issuerOriginURL": {
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "recognitionAwardDate": {
            "description": "The date the recognition was awarded or earned.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "recognitionAwardExpiresDate": {
            "description": "Date on which the recognition expires.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "recognitionDescription": {
            "description": "A description of the type of recognition earned by or awarded to the individual.",
            "maxLength": 80,
            "type": "string"
          },
          "recognitionTypeDescriptor": {
            "description": "The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "recognitionTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Reference": {
        "properties": {
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffUniqueId"
        ],
        "type": "object"
      },
      "EdFi_Staff_StaffIdentificationCode": {
        "properties": {
          "assigningOrganizationIdentificationCode": {
            "description": "The organization code or name assigning the staff Identification Code.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.",
            "maxLength": 60,
            "type": "string"
          },
          "staffIdentificationSystemDescriptor": {
            "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "staffIdentificationSystemDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_Telephone": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the telephone number should not be published.",
            "type": "boolean"
          },
          "orderOfPriority": {
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "minimum": 1,
            "type": "integer"
          },
          "telephoneNumber": {
            "description": "The telephone number including the area code, and extension, if applicable.",
            "maxLength": 24,
            "type": "string"
          },
          "telephoneNumberTypeDescriptor": {
            "description": "The type of communication number listed for an individual or organization.",
            "maxLength": 306,
            "type": "string"
          },
          "textMessageCapabilityIndicator": {
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "type": "boolean"
          }
        },
        "required": [
          "telephoneNumber",
          "telephoneNumberTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Staff_TribalAffiliation": {
        "properties": {
          "tribalAffiliationDescriptor": {
            "description": "An American Indian tribe with which the staff member is affiliated.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "tribalAffiliationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StateEducationAgency": {
        "description": "This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.",
        "properties": {
          "accountabilities": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StateEducationAgency_StateEducationAgencyAccountability"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "federalFunds": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StateEducationAgency_StateEducationAgencyFederalFund"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "stateEducationAgencyId": {
            "description": "The identifier assigned to a state education agency. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "stateEducationAgencyId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_StateEducationAgency_Reference": {
        "properties": {
          "stateEducationAgencyId": {
            "description": "The identifier assigned to a state education agency. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "stateEducationAgencyId"
        ],
        "type": "object"
      },
      "EdFi_StateEducationAgency_StateEducationAgencyAccountability": {
        "properties": {
          "cteGraduationRateInclusion": {
            "description": "An indication of whether CTE concentrators are included in the state\u0027s computation of its graduation rate.",
            "type": "boolean"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
          }
        },
        "required": [
          "schoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_StateEducationAgency_StateEducationAgencyFederalFund": {
        "properties": {
          "federalProgramsFundingAllocation": {
            "description": "The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).",
            "format": "double",
            "type": "number"
          },
          "fiscalYear": {
            "description": "The fiscal year for which the federal funds are received.",
            "type": "integer"
          }
        },
        "required": [
          "fiscalYear"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord": {
        "description": "This educational entity represents the cumulative record of academic achievement for a student.",
        "properties": {
          "academicHonors": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_AcademicHonor"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "classRanking": {
            "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_ClassRanking",
            "x-nullable": true
          },
          "cumulativeAttemptedCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "cumulativeAttemptedCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "cumulativeAttemptedCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "cumulativeEarnedCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "cumulativeEarnedCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "cumulativeEarnedCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "diplomas": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_Diploma"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "gradePointAverages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_GradePointAverage"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "projectedGraduationDate": {
            "description": "The month and year the student is projected to graduate.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "recognitions": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_Recognition"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "reportCards": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_ReportCard"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionAttemptedCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "sessionAttemptedCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "sessionAttemptedCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "sessionEarnedCreditConversion": {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "sessionEarnedCreditTypeDescriptor": {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "sessionEarnedCredits": {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "type": "number"
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "educationOrganizationReference",
          "schoolYearTypeReference",
          "termDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_AcademicHonor": {
        "properties": {
          "academicHonorCategoryDescriptor": {
            "description": "A designation of the type of academic distinctions earned by or awarded to the individual.",
            "maxLength": 306,
            "type": "string"
          },
          "achievementCategoryDescriptor": {
            "description": "The category of achievement attributed to the individual.",
            "maxLength": 306,
            "type": "string"
          },
          "achievementCategorySystem": {
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "maxLength": 60,
            "type": "string"
          },
          "achievementTitle": {
            "description": "The title assigned to the achievement.",
            "maxLength": 60,
            "type": "string"
          },
          "criteria": {
            "description": "The criteria for competency-based completion of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "criteriaURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "evidenceStatement": {
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "honorAwardDate": {
            "description": "The date the honor was awarded.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "honorAwardExpiresDate": {
            "description": "Date on which the honor expires.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "honorDescription": {
            "description": "A description of the type of academic distinctions earned by or awarded to the individual.",
            "maxLength": 80,
            "type": "string"
          },
          "imageURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "issuerName": {
            "description": "The name of the agent, entity, or institution issuing the element.",
            "maxLength": 150,
            "type": "string"
          },
          "issuerOriginURL": {
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "academicHonorCategoryDescriptor",
          "honorDescription"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_ClassRanking": {
        "properties": {
          "classRank": {
            "description": "The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).",
            "type": "integer"
          },
          "classRankingDate": {
            "description": "Date class ranking was determined.",
            "format": "date",
            "type": "string"
          },
          "percentageRanking": {
            "description": "The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).",
            "type": "integer"
          },
          "totalNumberInClass": {
            "description": "The total number of students in the student\u0027s graduating class.",
            "type": "integer"
          }
        },
        "required": [
          "classRank",
          "totalNumberInClass"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_Diploma": {
        "properties": {
          "achievementCategoryDescriptor": {
            "description": "The category of achievement attributed to the individual.",
            "maxLength": 306,
            "type": "string"
          },
          "achievementCategorySystem": {
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "maxLength": 60,
            "type": "string"
          },
          "achievementTitle": {
            "description": "The title assigned to the achievement.",
            "maxLength": 60,
            "type": "string"
          },
          "criteria": {
            "description": "The criteria for competency-based completion of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "criteriaURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "cteCompleter": {
            "description": "Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.",
            "type": "boolean"
          },
          "diplomaAwardDate": {
            "description": "The month, day, and year on which the student met  graduation requirements and was awarded a diploma.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "diplomaAwardExpiresDate": {
            "description": "Date on which the diploma expires.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "diplomaDescription": {
            "description": "The description of the diploma given to the student for accomplishments.",
            "maxLength": 80,
            "type": "string"
          },
          "diplomaLevelDescriptor": {
            "description": "The level of diploma/credential that is awarded to a student in recognition of completion of the curricular requirements.",
            "maxLength": 306,
            "type": "string"
          },
          "diplomaTypeDescriptor": {
            "description": "The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.",
            "maxLength": 306,
            "type": "string"
          },
          "evidenceStatement": {
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "imageURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "issuerName": {
            "description": "The name of the agent, entity, or institution issuing the element.",
            "maxLength": 150,
            "type": "string"
          },
          "issuerOriginURL": {
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          }
        },
        "required": [
          "diplomaAwardDate",
          "diplomaTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_GradePointAverage": {
        "properties": {
          "gradePointAverageTypeDescriptor": {
            "description": "The system used for calculating the grade point average for an individual.",
            "maxLength": 306,
            "type": "string"
          },
          "gradePointAverageValue": {
            "description": "The value of the grade points earned divided by the number of credits attempted.",
            "format": "double",
            "type": "number"
          },
          "isCumulative": {
            "description": "Indicator of whether or not the Grade Point Average value is cumulative.",
            "type": "boolean"
          },
          "maxGradePointAverageValue": {
            "description": "The maximum value for the grade point average.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "gradePointAverageTypeDescriptor",
          "gradePointAverageValue"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_Recognition": {
        "properties": {
          "achievementCategoryDescriptor": {
            "description": "The category of achievement attributed to the individual.",
            "maxLength": 306,
            "type": "string"
          },
          "achievementCategorySystem": {
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "maxLength": 60,
            "type": "string"
          },
          "achievementTitle": {
            "description": "The title assigned to the achievement.",
            "maxLength": 60,
            "type": "string"
          },
          "criteria": {
            "description": "The criteria for competency-based completion of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "criteriaURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "evidenceStatement": {
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "maxLength": 150,
            "type": "string"
          },
          "imageURL": {
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "issuerName": {
            "description": "The name of the agent, entity, or institution issuing the element.",
            "maxLength": 150,
            "type": "string"
          },
          "issuerOriginURL": {
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "recognitionAwardDate": {
            "description": "The date the recognition was awarded or earned.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "recognitionAwardExpiresDate": {
            "description": "Date on which the recognition expires.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "recognitionDescription": {
            "description": "A description of the type of recognition earned by or awarded to the individual.",
            "maxLength": 80,
            "type": "string"
          },
          "recognitionTypeDescriptor": {
            "description": "The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "recognitionTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "schoolYear",
          "studentUniqueId",
          "termDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAcademicRecord_ReportCard": {
        "properties": {
          "reportCardReference": {
            "$ref": "#/components/schemas/EdFi_ReportCard_Reference"
          }
        },
        "required": [
          "reportCardReference"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentEducationOrganizationAssociation": {
        "description": "The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution.",
        "properties": {
          "educationOrganizationAssociationTypeDescriptor": {
            "description": "The type of association being represented.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-nullable": true
          },
          "studentAssessmentReference": {
            "$ref": "#/components/schemas/EdFi_StudentAssessment_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentAssessmentReference",
          "educationOrganizationReference",
          "educationOrganizationAssociationTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentEducationOrganizationAssociation_Reference": {
        "properties": {
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationAssociationTypeDescriptor": {
            "description": "The type of association being represented.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentAssessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "educationOrganizationAssociationTypeDescriptor",
          "assessmentIdentifier",
          "namespace",
          "studentUniqueId",
          "studentAssessmentIdentifier"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistrationBatteryPartAssociation": {
        "description": "The association to the part(s) of the assessment battery that the student is to be tested for this administration of the assessment.",
        "properties": {
          "accommodations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistrationBatteryPartAssociation_Accommodation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentBatteryPartReference": {
            "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentAssessmentRegistrationReference": {
            "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentAssessmentRegistrationReference",
          "assessmentBatteryPartReference"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistrationBatteryPartAssociation_Accommodation": {
        "properties": {
          "accommodationDescriptor": {
            "description": "The special variation(s) to be used for the specific part of the assessment battery on how is presented, how it is administered, or how the test taker is allowed to respond.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "accommodationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistrationBatteryPartAssociation_Reference": {
        "properties": {
          "administrationIdentifier": {
            "description": "The title or name of the assessment in the context of its administration.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentBatteryPartName": {
            "description": "The name of the part of an assessment battery.",
            "maxLength": 65,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentBatteryPartName",
          "administrationIdentifier",
          "assessmentIdentifier",
          "namespace",
          "assigningEducationOrganizationId",
          "educationOrganizationId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistration": {
        "description": "Identifies an assessment registration that a student is expected to participate in including the testing organization, reporting organization and assessment delivery details.",
        "properties": {
          "assessmentAccommodations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration_AssessmentAccommodation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentAdministrationReference": {
            "$ref": "#/components/schemas/EdFi_AssessmentAdministration_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentCustomizations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration_AssessmentCustomization"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "assessmentGradeLevelDescriptor": {
            "description": "The grade level or primary instructional level at which the student is to be assessed.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "platformTypeDescriptor": {
            "description": "The environment or format in which the assessment is expected to be administered.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "reportingEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "scheduledStudentEducationOrganizationAssessmentAccommodationReference": {
            "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssessmentAccommodation_Reference",
            "x-nullable": true
          },
          "studentEducationOrganizationAssociationReference": {
            "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentSchoolAssociationReference": {
            "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation_Reference"
          },
          "testingEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          }
        },
        "required": [
          "assessmentAdministrationReference",
          "studentEducationOrganizationAssociationReference",
          "studentSchoolAssociationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistration_AssessmentAccommodation": {
        "properties": {
          "accommodationDescriptor": {
            "description": "The special variation(s) to be used in how assessments (in general) are presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "accommodationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistration_AssessmentCustomization": {
        "properties": {
          "customizationKey": {
            "description": "An agreed upon identifier for the custom information.",
            "maxLength": 60,
            "type": "string"
          },
          "customizationValue": {
            "description": "Custom value for the indicated CustomizationKey.",
            "maxLength": 1024,
            "type": "string"
          }
        },
        "required": [
          "customizationKey",
          "customizationValue"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessmentRegistration_Reference": {
        "properties": {
          "administrationIdentifier": {
            "description": "The title or name of the assessment in the context of its administration.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "administrationIdentifier",
          "assessmentIdentifier",
          "namespace",
          "assigningEducationOrganizationId",
          "educationOrganizationId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment": {
        "description": "This entity represents the analysis or scoring of a student\u0027s response on an assessment. The analysis results in a value that represents a student\u0027s performance on a set of items on a test.",
        "properties": {
          "accommodations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_Accommodation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "administrationDate": {
            "description": "The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.",
            "format": "date-time",
            "type": "string",
            "x-nullable": true
          },
          "administrationEndDate": {
            "description": "The date and time an assessment administration ended.",
            "format": "date-time",
            "type": "string",
            "x-nullable": true
          },
          "administrationEnvironmentDescriptor": {
            "description": "The environment in which the test was administered.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "administrationLanguageDescriptor": {
            "description": "The language in which an assessment is written and/or administered.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "assessedMinutes": {
            "description": "Reported time student was assessed in minutes.",
            "type": "integer",
            "x-nullable": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/EdFi_Assessment_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "eventCircumstanceDescriptor": {
            "description": "An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eventDescription": {
            "description": "Describes special events that occur before during or after the assessment session that may impact use of results.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_StudentAssessmentItem"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "performanceLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_PerformanceLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "period": {
            "$ref": "#/components/schemas/EdFi_StudentAssessment_AssessmentPeriod",
            "x-nullable": true
          },
          "platformTypeDescriptor": {
            "description": "The platform with which the assessment was delivered to the student during the assessment session.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "reasonNotTestedDescriptor": {
            "description": "The primary reason student is not tested.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "reportedSchoolIdentifier": {
            "description": "A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "reportedSchoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-nullable": true
          },
          "retestIndicatorDescriptor": {
            "description": "Indicator if the test was a retake.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-nullable": true
          },
          "scoreResults": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_ScoreResult"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "serialNumber": {
            "description": "The unique number for the assessment form or answer document.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "studentAssessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentObjectiveAssessments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_StudentObjectiveAssessment"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "whenAssessedGradeLevelDescriptor": {
            "description": "The grade level of a student when assessed.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "studentAssessmentIdentifier",
          "studentReference",
          "assessmentReference"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_Accommodation": {
        "properties": {
          "accommodationDescriptor": {
            "description": "The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "accommodationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_AssessmentPeriod": {
        "properties": {
          "assessmentPeriodDescriptor": {
            "description": "The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).",
            "maxLength": 306,
            "type": "string"
          },
          "beginDate": {
            "description": "The first date the assessment is to be administered.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The last date the assessment is to be administered.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "assessmentPeriodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_PerformanceLevel": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "performanceLevelDescriptor": {
            "description": "A specification of which performance level value describes the student proficiency.",
            "maxLength": 306,
            "type": "string"
          },
          "performanceLevelIndicatorName": {
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "maxLength": 60,
            "type": "string"
          }
        },
        "required": [
          "performanceLevelDescriptor",
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_Reference": {
        "properties": {
          "assessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the assessment.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentAssessmentIdentifier": {
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "assessmentIdentifier",
          "namespace",
          "studentUniqueId",
          "studentAssessmentIdentifier"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_ScoreResult": {
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "maxLength": 306,
            "type": "string"
          },
          "result": {
            "description": "The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 35,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "result",
          "resultDatatypeTypeDescriptor",
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_StudentAssessmentItem": {
        "properties": {
          "assessmentItemReference": {
            "$ref": "#/components/schemas/EdFi_AssessmentItem_Reference"
          },
          "assessmentItemResultDescriptor": {
            "description": "The analyzed result of a student\u0027s response to an assessment item.",
            "maxLength": 306,
            "type": "string"
          },
          "assessmentResponse": {
            "description": "A student\u0027s response to a stimulus on a test.",
            "maxLength": 255,
            "type": "string"
          },
          "descriptiveFeedback": {
            "description": "The formative descriptive feedback that was given to a student in response to the results from a scored/evaluated assessment item.",
            "maxLength": 1024,
            "type": "string"
          },
          "itemNumber": {
            "description": "The test question number for this student\u0027s test item.",
            "type": "integer"
          },
          "rawScoreResult": {
            "description": "A meaningful raw score of the performance of a student on an assessment item.",
            "format": "double",
            "type": "number"
          },
          "responseIndicatorDescriptor": {
            "description": "Indicator of the response.",
            "maxLength": 306,
            "type": "string"
          },
          "timeAssessed": {
            "description": "The overall time that a student actually spent on the assessment item expressed in minutes.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "assessmentItemResultDescriptor",
          "assessmentItemReference"
        ],
        "type": "object"
      },
      "EdFi_StudentAssessment_StudentObjectiveAssessment": {
        "properties": {
          "administrationDate": {
            "description": "The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.",
            "format": "date-time",
            "type": "string"
          },
          "administrationEndDate": {
            "description": "The date and time an assessment administration ended.",
            "format": "date-time",
            "type": "string"
          },
          "assessedMinutes": {
            "description": "Reported time student was assessed in minutes.",
            "type": "integer"
          },
          "objectiveAssessmentReference": {
            "$ref": "#/components/schemas/EdFi_ObjectiveAssessment_Reference"
          },
          "performanceLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_PerformanceLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "scoreResults": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentAssessment_ScoreResult"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "objectiveAssessmentReference"
        ],
        "type": "object"
      },
      "EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus": {
        "properties": {
          "designatedBy": {
            "description": "The person, organization, or department that designated the participation status.",
            "maxLength": 60,
            "type": "string"
          },
          "participationStatusDescriptor": {
            "description": "The student\u0027s program participation status.",
            "maxLength": 306,
            "type": "string"
          },
          "statusBeginDate": {
            "description": "The date the student\u0027s program participation status began.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "statusEndDate": {
            "description": "The date the student\u0027s program participation status ended.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "participationStatusDescriptor",
          "statusBeginDate"
        ],
        "type": "object"
      },
      "EdFi_StudentCTEProgramAssociation": {
        "description": "This association represents the career and technical education (CTE) program that a student participates in. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for CTE programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cteProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentCTEProgramAssociation_CTEProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "nonTraditionalGenderStatus": {
            "description": "Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.",
            "type": "boolean",
            "x-nullable": true
          },
          "privateCTEProgram": {
            "description": "Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.",
            "type": "boolean",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "technicalSkillsAssessmentDescriptor": {
            "description": "Results of technical skills assessment aligned with industry recognized standards.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentCTEProgramAssociation_CTEProgramService": {
        "properties": {
          "cipCode": {
            "description": "Number and description of the CIP code associated with the student\u0027s CTE program.",
            "maxLength": 120,
            "type": "string"
          },
          "cteProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the CTE program.",
            "maxLength": 306,
            "type": "string"
          },
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "cteProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentCTEProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentCohortAssociation": {
        "description": "This association represents the cohort(s) for which a student is designated.",
        "properties": {
          "beginDate": {
            "description": "The month, day, and year on which the student was first identified as part of the cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortReference": {
            "$ref": "#/components/schemas/EdFi_Cohort_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student was removed as part of the cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentCohortAssociation_Section"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "cohortReference",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StudentCohortAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year on which the student was first identified as part of the cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortIdentifier": {
            "description": "The name or ID for the cohort.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "cohortIdentifier",
          "educationOrganizationId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentCohortAssociation_Section": {
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference"
          }
        },
        "required": [
          "sectionReference"
        ],
        "type": "object"
      },
      "EdFi_StudentCompetencyObjective": {
        "description": "This entity represents the competency assessed or evaluated for the student against a specific competency objective.",
        "properties": {
          "competencyLevelDescriptor": {
            "description": "The competency level assessed for the student for the referenced competency objective.",
            "maxLength": 306,
            "type": "string"
          },
          "diagnosticStatement": {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "generalStudentProgramAssociations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective_StudentCompetencyObjectiveSectionOrProgramChoice_GeneralStudentProgramAssociation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/EdFi_GradingPeriod_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveCompetencyObjectiveReference": {
            "$ref": "#/components/schemas/EdFi_CompetencyObjective_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentSectionAssociations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective_StudentCompetencyObjectiveSectionOrProgramChoice_StudentSectionAssociation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "objectiveCompetencyObjectiveReference",
          "competencyLevelDescriptor",
          "gradingPeriodReference",
          "studentReference"
        ],
        "type": "object"
      },
      "EdFi_StudentCompetencyObjective_Reference": {
        "properties": {
          "gradingPeriodDescriptor": {
            "description": "The state\u0027s name of the period for which grades are reported.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "description": "The school\u0027s descriptive name of the grading period.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "description": "The designated title of the competency objective.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "description": "The grade level for which the competency objective is targeted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "objectiveEducationOrganizationId",
          "objective",
          "objectiveGradeLevelDescriptor",
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "gradingPeriodSchoolId",
          "gradingPeriodSchoolYear",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentCompetencyObjective_StudentCompetencyObjectiveSectionOrProgramChoice_GeneralStudentProgramAssociation": {
        "properties": {
          "generalStudentProgramAssociationReference": {
            "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_Reference"
          }
        },
        "required": [
          "generalStudentProgramAssociationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentCompetencyObjective_StudentCompetencyObjectiveSectionOrProgramChoice_StudentSectionAssociation": {
        "properties": {
          "studentSectionAssociationReference": {
            "$ref": "#/components/schemas/EdFi_StudentSectionAssociation_Reference"
          }
        },
        "required": [
          "studentSectionAssociationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentContactAssociation": {
        "description": "This association relates students to their parents, guardians, or caretakers.",
        "properties": {
          "contactPriority": {
            "description": "The numeric order of the preferred sequence or priority of contact.",
            "type": "integer",
            "x-nullable": true
          },
          "contactReference": {
            "$ref": "#/components/schemas/EdFi_Contact_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "contactRestrictions": {
            "description": "Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).",
            "maxLength": 250,
            "type": "string",
            "x-nullable": true
          },
          "emergencyContactStatus": {
            "description": "Indicator of whether the person is a designated emergency contact for the student.",
            "type": "boolean",
            "x-nullable": true
          },
          "legalGuardian": {
            "description": "Indicator of whether the person is a legal guardian for the student.",
            "type": "boolean",
            "x-nullable": true
          },
          "livesWith": {
            "description": "Indicator of whether the student lives with the associated contact.",
            "type": "boolean",
            "x-nullable": true
          },
          "primaryContactStatus": {
            "description": "Indicator of whether the person is a primary contact for the student.",
            "type": "boolean",
            "x-nullable": true
          },
          "relationDescriptor": {
            "description": "The nature of an individual\u0027s relationship to a student, primarily used to capture family relationships.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "contactReference"
        ],
        "type": "object"
      },
      "EdFi_StudentContactAssociation_Reference": {
        "properties": {
          "contactUniqueId": {
            "description": "A unique alphanumeric code assigned to a contact.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "contactUniqueId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentBehaviorAssociation": {
        "description": "This association describes the behavior of students involved in a discipline incident.",
        "properties": {
          "behaviorDescriptor": {
            "description": "Describes behavior by category.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "behaviorDetailedDescription": {
            "description": "Specifies a more granular level of detail of a behavior involved in the incident.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "disciplineIncidentParticipationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation_DisciplineIncidentParticipationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/EdFi_DisciplineIncident_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "weapons": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation_Weapon"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "studentReference",
          "disciplineIncidentReference",
          "behaviorDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentBehaviorAssociation_DisciplineIncidentParticipationCode": {
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "description": "The role or type of participation of a student in a discipline incident.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentBehaviorAssociation_Reference": {
        "properties": {
          "behaviorDescriptor": {
            "description": "Describes behavior by category.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "incidentIdentifier": {
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "behaviorDescriptor",
          "incidentIdentifier",
          "schoolId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentBehaviorAssociation_Weapon": {
        "properties": {
          "weaponDescriptor": {
            "description": "Identifies the type(s) of weapon used by the student during a discipline incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "weaponDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentNonOffenderAssociation": {
        "description": "This association indicates those students who were involved and not perpetrators for a discipline incident.",
        "properties": {
          "disciplineIncidentParticipationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentNonOffenderAssociation_DisciplineIncidentParticipationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/EdFi_DisciplineIncident_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "disciplineIncidentReference"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentNonOffenderAssociation_DisciplineIncidentParticipationCode": {
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "description": "The role or type of participation of a student in a discipline incident.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentDisciplineIncidentNonOffenderAssociation_Reference": {
        "properties": {
          "incidentIdentifier": {
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "maxLength": 36,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "incidentIdentifier",
          "schoolId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssessmentAccommodation": {
        "description": "The accommodation(s) required or expected for administering assessments as determined by the education organization.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "generalAccommodations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssessmentAccommodation_GeneralAccommodation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationReference",
          "studentReference"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssessmentAccommodation_GeneralAccommodation": {
        "properties": {
          "accommodationDescriptor": {
            "description": "The special variation(s) to be used in how assessments (in general) are presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "accommodationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssessmentAccommodation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation": {
        "description": "This association represents student information as reported in the context of the student\u0027s relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "ancestryEthnicOrigins": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_AncestryEthnicOrigin"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "barrierToInternetAccessInResidenceDescriptor": {
            "description": "An indication of the barrier to having internet access in the student\u2019s primary place of residence.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "cohortYears": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_CohortYear"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "disabilities": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Disability"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "displacedStudents": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_DisplacedStudent"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMails": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_ElectronicMail"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "genderIdentity": {
            "description": "The student\u0027s gender as last reported to the education organization.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "hispanicLatinoEthnicity": {
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \u0022Spanish origin,\u0022 can be used in addition to \u0022Hispanic or Latino.\u0022",
            "type": "boolean",
            "x-Ed-Fi-deprecatedReasons": "This element is scheduled for removal by 2029. Users of this element are advised to use Race instead.",
            "x-Ed-Fi-isDeprecated": true,
            "x-nullable": true
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internetAccessInResidence": {
            "description": "An indication of whether the student is able to access the internet in their primary place of residence.",
            "type": "boolean",
            "x-nullable": true
          },
          "internetAccessTypeInResidenceDescriptor": {
            "description": "The primary type of internet service used in the student\u2019s primary place of residence.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "internetPerformanceInResidenceDescriptor": {
            "description": "An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Language"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "limitedEnglishProficiencyDescriptor": {
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "loginId": {
            "description": "The login ID for the user; used for security access control interface.",
            "maxLength": 60,
            "type": "string",
            "x-nullable": true
          },
          "primaryLearningDeviceAccessDescriptor": {
            "description": "An indication of whether the primary learning device is shared or not shared with another individual.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "primaryLearningDeviceAwayFromSchoolDescriptor": {
            "description": "The type of device the student uses most often to complete learning activities away from school.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "primaryLearningDeviceProviderDescriptor": {
            "description": "The provider of the primary learning device.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "profileThumbnail": {
            "description": "Locator reference for the student photo. The specification for that reference is left to local definition.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "races": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Race"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sexDescriptor": {
            "description": "The student\u0027s birth sex as reported to the education organization.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "studentCharacteristics": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_StudentCharacteristic"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentIdentificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_StudentIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentIndicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_StudentIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "supporterMilitaryConnectionDescriptor": {
            "description": "Military connection of the person/people whom the student is a dependent of.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "telephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Telephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "tribalAffiliations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_TribalAffiliation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "studentReference",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Address": {
        "properties": {
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "apartmentRoomSuiteNumber": {
            "description": "The apartment, room, or suite number of an address.",
            "maxLength": 50,
            "type": "string"
          },
          "buildingSiteNumber": {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "maxLength": 20,
            "type": "string"
          },
          "city": {
            "description": "The name of the city in which an address is located.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "congressionalDistrict": {
            "description": "The congressional district in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "countyFIPSCode": {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "doNotPublishIndicator": {
            "description": "An indication that the address should not be published.",
            "type": "boolean"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "localeDescriptor": {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "maxLength": 306,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "nameOfCounty": {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "postalCode": {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "maxLength": 17,
            "type": "string"
          },
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "maxLength": 306,
            "type": "string"
          },
          "streetNumberName": {
            "description": "The street number and street name or post office box number of an address.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "streetNumberName",
          "city",
          "stateAbbreviationDescriptor",
          "postalCode",
          "addressTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_AncestryEthnicOrigin": {
        "properties": {
          "ancestryEthnicOriginDescriptor": {
            "description": "The original peoples or cultures with which the individual identifies.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ancestryEthnicOriginDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_CohortYear": {
        "properties": {
          "cohortYearTypeDescriptor": {
            "description": "The type of cohort year (9th grade, graduation).",
            "maxLength": 306,
            "type": "string"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
          },
          "termDescriptor": {
            "description": "The term associated with the cohort year; for example, the intended term of graduation.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "schoolYearTypeReference",
          "cohortYearTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Disability": {
        "properties": {
          "designations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_DisabilityDesignation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "disabilityDescriptor": {
            "description": "A disability category that describes a individual\u0027s impairment.",
            "maxLength": 306,
            "type": "string"
          },
          "disabilityDeterminationSourceTypeDescriptor": {
            "description": "The source that provided the disability determination.",
            "maxLength": 306,
            "type": "string"
          },
          "disabilityDiagnosis": {
            "description": "A description of the disability diagnosis.",
            "maxLength": 80,
            "type": "string"
          },
          "orderOfDisability": {
            "description": "The order by severity of individual\u0027s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
            "type": "integer"
          }
        },
        "required": [
          "disabilityDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_DisabilityDesignation": {
        "properties": {
          "disabilityDesignationDescriptor": {
            "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disabilityDesignationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_DisplacedStudent": {
        "properties": {
          "crisisEventReference": {
            "$ref": "#/components/schemas/EdFi_CrisisEvent_Reference"
          },
          "crisisHomelessnessIndicator": {
            "description": "Any student considered homeless (defined by the McKinney-Vento Homeless Education Assistance Act as lacking a fixed, regular, and adequate nighttime residence) as a result of the crisis event.",
            "type": "boolean"
          },
          "displacedStudentEndDate": {
            "description": "The date marking the end of the period during which a student is considered displaced due to a crisis event.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "displacedStudentStartDate": {
            "description": "The date on which a student is officially identified as displaced due to a crisis event.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "displacedStudentStatusDescriptor": {
            "description": "Indicates whether a student has been displaced as a result of a crisis event.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "crisisEventReference",
          "displacedStudentStatusDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_ElectronicMail": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the electronic email address should not be published.",
            "type": "boolean"
          },
          "electronicMailAddress": {
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string"
          },
          "electronicMailTypeDescriptor": {
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "primaryEmailAddressIndicator": {
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "type": "boolean"
          }
        },
        "required": [
          "electronicMailAddress",
          "electronicMailTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_InternationalAddress": {
        "properties": {
          "addressLine1": {
            "description": "The first line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressLine4": {
            "description": "The fourth line of the address.",
            "maxLength": 150,
            "type": "string"
          },
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "beginDate": {
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "countryDescriptor": {
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "endDate": {
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "addressTypeDescriptor",
          "addressLine1",
          "countryDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Language": {
        "properties": {
          "languageDescriptor": {
            "description": "A specification of which written or spoken communication is being used.",
            "maxLength": 306,
            "type": "string"
          },
          "uses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_LanguageUse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "languageDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_LanguageUse": {
        "properties": {
          "languageUseDescriptor": {
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Period": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Race": {
        "properties": {
          "raceDescriptor": {
            "description": "The general racial category which most clearly reflects the individual\u0027s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "raceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_StudentCharacteristic": {
        "properties": {
          "designatedBy": {
            "description": "The person, organization, or department that designated the characteristic.",
            "maxLength": 60,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentCharacteristicDescriptor": {
            "description": "The characteristic designated for the student.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "studentCharacteristicDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_StudentIdentificationCode": {
        "properties": {
          "assigningOrganizationIdentificationCode": {
            "description": "The organization code or name assigning the StudentIdentificationCode.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationCode": {
            "description": "A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.",
            "maxLength": 60,
            "type": "string"
          },
          "studentIdentificationSystemDescriptor": {
            "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "identificationCode",
          "studentIdentificationSystemDescriptor",
          "assigningOrganizationIdentificationCode"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_StudentIndicator": {
        "properties": {
          "designatedBy": {
            "description": "The person, organization, or department that designated the program association.",
            "maxLength": 60,
            "type": "string"
          },
          "indicator": {
            "description": "The value of the indicator or metric.",
            "maxLength": 60,
            "type": "string"
          },
          "indicatorGroup": {
            "description": "The name for a group of indicators.",
            "maxLength": 200,
            "type": "string"
          },
          "indicatorName": {
            "description": "The name of the indicator or metric.",
            "maxLength": 200,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "indicatorName",
          "indicator"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_Telephone": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the telephone number should not be published.",
            "type": "boolean"
          },
          "orderOfPriority": {
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "minimum": 1,
            "type": "integer"
          },
          "telephoneNumber": {
            "description": "The telephone number including the area code, and extension, if applicable.",
            "maxLength": 24,
            "type": "string"
          },
          "telephoneNumberTypeDescriptor": {
            "description": "The type of communication number listed for an individual or organization.",
            "maxLength": 306,
            "type": "string"
          },
          "textMessageCapabilityIndicator": {
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "type": "boolean"
          }
        },
        "required": [
          "telephoneNumber",
          "telephoneNumberTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationAssociation_TribalAffiliation": {
        "properties": {
          "tribalAffiliationDescriptor": {
            "description": "An American Indian tribe with which the student is affiliated as last reported to the education organization.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "tribalAffiliationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationResponsibilityAssociation": {
        "description": "This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.",
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the start date of an education organization\u0027s responsibility for a student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "Month, day, and year of the end date of an education organization\u0027s responsibility for a student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "responsibilityDescriptor": {
            "description": "Indications of an education organization\u0027s responsibility for a student, such as accountability, attendance, funding, etc.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "educationOrganizationReference",
          "responsibilityDescriptor",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StudentEducationOrganizationResponsibilityAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the start date of an education organization\u0027s responsibility for a student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "responsibilityDescriptor": {
            "description": "Indications of an education organization\u0027s responsibility for a student, such as accountability, attendance, funding, etc.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "responsibilityDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentGradebookEntry": {
        "description": "This entity holds a student\u0027s grade or competency level for a gradebook entry.",
        "properties": {
          "assignmentLateStatusDescriptor": {
            "description": "Status of whether the assignment was submitted after the due date and/or marked as.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "competencyLevelDescriptor": {
            "description": "The competency level assessed for the student for the referenced learning objective.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "dateFulfilled": {
            "description": "The date an assignment was turned in or the date of an assessment.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "diagnosticStatement": {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "gradebookEntryReference": {
            "$ref": "#/components/schemas/EdFi_GradebookEntry_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "letterGradeEarned": {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "numericGradeEarned": {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "pointsEarned": {
            "description": "The points earned for the submission. With extra credit, the points earned may exceed the max points.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "submissionStatusDescriptor": {
            "description": "The status of the student\u0027s submission.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "timeFulfilled": {
            "description": "The time an assignment was turned in on the date fulfilled.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "gradebookEntryReference",
          "studentReference"
        ],
        "type": "object"
      },
      "EdFi_StudentGradebookEntry_Reference": {
        "properties": {
          "gradebookEntryIdentifier": {
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace URI for the source of the gradebook entry.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "gradebookEntryIdentifier",
          "namespace",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentHealth": {
        "description": "This entity stores the student health records.",
        "properties": {
          "additionalImmunizations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentHealth_AdditionalImmunization"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "asOfDate": {
            "description": "Date of last update of the student\u0027s health record.",
            "format": "date",
            "type": "string"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "nonMedicalImmunizationExemptionDate": {
            "description": "The year, month and day of the nonmedical exemption from vaccination claimed by the student\u0027s parent or guardian.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "nonMedicalImmunizationExemptionDescriptor": {
            "description": "The type of nonmedical exemption from vaccination claimed by the student\u0027s parent or guardian.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "requiredImmunizations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentHealth_RequiredImmunization"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "educationOrganizationReference",
          "asOfDate"
        ],
        "type": "object"
      },
      "EdFi_StudentHealth_AdditionalImmunization": {
        "properties": {
          "dates": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentHealth_ImmunizationDate"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "immunizationName": {
            "description": "The name of the immunization that the student has received.",
            "maxLength": 100,
            "type": "string"
          }
        },
        "required": [
          "immunizationName"
        ],
        "type": "object"
      },
      "EdFi_StudentHealth_ImmunizationDate": {
        "properties": {
          "immunizationDate": {
            "description": "The year, month and day of the related additional immunization.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "immunizationDate"
        ],
        "type": "object"
      },
      "EdFi_StudentHealth_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentHealth_RequiredImmunization": {
        "properties": {
          "dates": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentHealth_ImmunizationDate"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "immunizationTypeDescriptor": {
            "description": "An indication of the type of immunization that the student has received.",
            "maxLength": 306,
            "type": "string"
          },
          "medicalExemption": {
            "description": "The medical condition identified by a physician that contraindicates the vaccine.",
            "maxLength": 1024,
            "type": "string"
          },
          "medicalExemptionDate": {
            "description": "The year, month, and day of the medical exemption by a physician.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "immunizationTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentHomelessProgramAssociation": {
        "description": "This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for homeless programs.",
        "properties": {
          "awaitingFosterCare": {
            "description": "State defined definition for awaiting foster care.",
            "type": "boolean",
            "x-nullable": true
          },
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "homelessPrimaryNighttimeResidenceDescriptor": {
            "description": "The primary nighttime residence of the student at the time the student is identified as homeless.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "homelessProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentHomelessProgramAssociation_HomelessProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "homelessUnaccompaniedYouth": {
            "description": "A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.",
            "type": "boolean",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentHomelessProgramAssociation_HomelessProgramService": {
        "properties": {
          "homelessProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the homeless program.",
            "maxLength": 306,
            "type": "string"
          },
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "homelessProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentHomelessProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentInterventionAssociation": {
        "description": "This association indicates the students participating in an intervention.",
        "properties": {
          "cohortReference": {
            "$ref": "#/components/schemas/EdFi_Cohort_Reference",
            "x-nullable": true
          },
          "diagnosticStatement": {
            "description": "A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "dosage": {
            "description": "The duration of time in minutes for which the student was assigned to participate in the intervention.",
            "type": "integer",
            "x-nullable": true
          },
          "interventionEffectivenesses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentInterventionAssociation_InterventionEffectiveness"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "interventionReference": {
            "$ref": "#/components/schemas/EdFi_Intervention_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "interventionReference"
        ],
        "type": "object"
      },
      "EdFi_StudentInterventionAssociation_InterventionEffectiveness": {
        "properties": {
          "diagnosisDescriptor": {
            "description": "Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.",
            "maxLength": 306,
            "type": "string"
          },
          "gradeLevelDescriptor": {
            "description": "Grade level for which effectiveness is measured.",
            "maxLength": 306,
            "type": "string"
          },
          "improvementIndex": {
            "description": "Along a percentile distribution of students, the improvement index represents the change in an average student\u0027s percentile rank that is considered to be due to the intervention.",
            "type": "integer"
          },
          "interventionEffectivenessRatingDescriptor": {
            "description": "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.",
            "maxLength": 306,
            "type": "string"
          },
          "populationServedDescriptor": {
            "description": "Population for which effectiveness is measured.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "diagnosisDescriptor",
          "populationServedDescriptor",
          "gradeLevelDescriptor",
          "interventionEffectivenessRatingDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentInterventionAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "interventionIdentificationCode",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentInterventionAttendanceEvent": {
        "description": "This event entity represents the recording of whether a student is in attendance for an intervention service.",
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "attendanceEventReason": {
            "description": "The reported reason for a student\u0027s absence.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDuration": {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "interventionDuration": {
            "description": "The duration in minutes of the intervention attendance event.",
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "x-nullable": true
          },
          "interventionReference": {
            "$ref": "#/components/schemas/EdFi_Intervention_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "attendanceEventCategoryDescriptor",
          "studentReference",
          "interventionReference"
        ],
        "type": "object"
      },
      "EdFi_StudentInterventionAttendanceEvent_Reference": {
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionIdentificationCode": {
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "educationOrganizationId",
          "interventionIdentificationCode",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentLanguageInstructionProgramAssociation": {
        "description": "This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for language instruction programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "dosage": {
            "description": "The duration of time in minutes for which the student was assigned to participate in the program.",
            "type": "integer",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "englishLanguageProficiencyAssessments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentLanguageInstructionProgramAssociation_EnglishLanguageProficiencyAssessment"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "englishLearnerParticipation": {
            "description": "An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.",
            "type": "boolean",
            "x-nullable": true
          },
          "languageInstructionProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentLanguageInstructionProgramAssociation_LanguageInstructionProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentLanguageInstructionProgramAssociation_EnglishLanguageProficiencyAssessment": {
        "properties": {
          "monitoredDescriptor": {
            "description": "Student is monitored on content achievement who are no longer receiving services.",
            "maxLength": 306,
            "type": "string"
          },
          "participationDescriptor": {
            "description": "Field indicating the participation in the yearly English language assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "proficiencyDescriptor": {
            "description": "The proficiency level for the yearly English language assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "progressDescriptor": {
            "description": "The yearly progress or growth from last year\u0027s assessment.",
            "maxLength": 306,
            "type": "string"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
          }
        },
        "required": [
          "schoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_StudentLanguageInstructionProgramAssociation_LanguageInstructionProgramService": {
        "properties": {
          "languageInstructionProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the language instruction program.",
            "maxLength": 306,
            "type": "string"
          },
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "languageInstructionProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentLanguageInstructionProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentMigrantEducationProgramAssociation": {
        "description": "This association represents the migrant education program(s) that a student participates in or receives services from. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for migrant education programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "continuationOfServicesReasonDescriptor": {
            "description": "The \u0022continuation of services\u0022 provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "eligibilityExpirationDate": {
            "description": "The eligibility expiration date is used to determine end of eligibility and to account for a child\u0027s eligibility expiring earlier than 36 months from the child\u0027s QAD. A child\u0027s eligibility would end earlier than 36 months from the child\u0027s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states\u0027 requirements), or if the child passes away.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "lastQualifyingMove": {
            "description": "Date the last qualifying move occurred; used to compute MEP status.",
            "format": "date",
            "type": "string"
          },
          "migrantEducationProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentMigrantEducationProgramAssociation_MigrantEducationProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "priorityForServices": {
            "description": "Report migratory children who are classified as having \u0022priority for services\u0022 because they are failing, or most at risk of failing to meet the state\u0027s challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.",
            "type": "boolean"
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "qualifyingArrivalDate": {
            "description": "The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child\u0027s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "stateResidencyDate": {
            "description": "The verified state residency for the student.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "usInitialEntry": {
            "description": "The month, day, and year on which the student first entered the U.S.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "usInitialSchoolEntry": {
            "description": "The month, day, and year on which the student first entered a U.S. school.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "usMostRecentEntry": {
            "description": "The month, day, and year of the student\u0027s most recent entry into the U.S.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "priorityForServices",
          "lastQualifyingMove",
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentMigrantEducationProgramAssociation_MigrantEducationProgramService": {
        "properties": {
          "migrantEducationProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the migrant education program.",
            "maxLength": 306,
            "type": "string"
          },
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "migrantEducationProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentMigrantEducationProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentNeglectedOrDelinquentProgramAssociation": {
        "description": "This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for Title I Part D Neglected or Delinquent programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "elaProgressLevelDescriptor": {
            "description": "The progress measured from pre- to post- test for ELA.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "mathematicsProgressLevelDescriptor": {
            "description": "The progress measured from pre- to post-test for Mathematics.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "neglectedOrDelinquentProgramDescriptor": {
            "description": "The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "neglectedOrDelinquentProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentNeglectedOrDelinquentProgramAssociation_NeglectedOrDelinquentProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentNeglectedOrDelinquentProgramAssociation_NeglectedOrDelinquentProgramService": {
        "properties": {
          "neglectedOrDelinquentProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the neglected or delinquent program.",
            "maxLength": 306,
            "type": "string"
          },
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "neglectedOrDelinquentProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentNeglectedOrDelinquentProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramAssociation": {
        "description": "This association represents the program(s) that a student participates in or is served by.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentProgramAssociation_Service"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramAssociation_Service": {
        "properties": {
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceDescriptor": {
            "description": "Indicates the service being provided to the student by the program.",
            "maxLength": 306,
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "serviceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramAttendanceEvent": {
        "description": "This event entity represents the recording of whether a student is in attendance to receive or participate in program services.",
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "attendanceEventReason": {
            "description": "The reported reason for a student\u0027s absence.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "educationalEnvironmentDescriptor": {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDuration": {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "programAttendanceDuration": {
            "description": "The duration in minutes of the program attendance event.",
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "x-nullable": true
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "attendanceEventCategoryDescriptor",
          "studentReference",
          "educationOrganizationReference",
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramAttendanceEvent_Reference": {
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "attendanceEventCategoryDescriptor",
          "educationOrganizationId",
          "eventDate",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramEvaluation": {
        "description": "The evaluation results for a student as evaluated in the context of a program.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "evaluationDate": {
            "description": "The month, day, and year on which the evaluation was conducted.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDuration": {
            "description": "The actual number of minutes to conduct the evaluation.",
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          },
          "externalEvaluators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation_ExternalEvaluator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programEvaluationReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "staffEvaluatorStaffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-nullable": true
          },
          "studentEvaluationElements": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation_StudentEvaluationElement"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentEvaluationObjectives": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation_StudentEvaluationObjective"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "summaryEvaluationComment": {
            "description": "Any comments about the summary evaluation to be captured.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "summaryEvaluationNumericRating": {
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "summaryEvaluationRatingLevelDescriptor": {
            "description": "The summary rating level achieved based upon the rating or score.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "programEvaluationReference",
          "studentReference",
          "evaluationDate"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramEvaluation_ExternalEvaluator": {
        "properties": {
          "externalEvaluator": {
            "description": "The external person(s) - not staff - that conducted the evaluation.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "externalEvaluator"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramEvaluation_Reference": {
        "properties": {
          "evaluationDate": {
            "description": "The month, day, and year on which the evaluation was conducted.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "description": "The name of the period for the program evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "description": "An assigned unique identifier for the student program evaluation.",
            "maxLength": 50,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "description": "The type of program evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationDate",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramEvaluation_StudentEvaluationElement": {
        "properties": {
          "evaluationElementNumericRating": {
            "description": "The numerical rating or score for the evaluation element.",
            "format": "double",
            "type": "number"
          },
          "evaluationElementRatingLevelDescriptor": {
            "description": "The rating level achieved based upon the rating or score for the evaluation element.",
            "maxLength": 306,
            "type": "string"
          },
          "programEvaluationElementReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement_Reference"
          }
        },
        "required": [
          "programEvaluationElementReference"
        ],
        "type": "object"
      },
      "EdFi_StudentProgramEvaluation_StudentEvaluationObjective": {
        "properties": {
          "evaluationObjectiveNumericRating": {
            "description": "The numerical rating or score for the evaluation objective.",
            "format": "double",
            "type": "number"
          },
          "evaluationObjectiveRatingLevelDescriptor": {
            "description": "The rating level achieved based upon the rating or score for the evaluation objective.",
            "maxLength": 306,
            "type": "string"
          },
          "programEvaluationObjectiveReference": {
            "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective_Reference"
          }
        },
        "required": [
          "programEvaluationObjectiveReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolAssociation": {
        "description": "This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.",
        "properties": {
          "alternativeGraduationPlans": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation_AlternativeGraduationPlan"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "calendarReference": {
            "$ref": "#/components/schemas/EdFi_Calendar_Reference",
            "x-nullable": true
          },
          "classOfSchoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-nullable": true
          },
          "educationPlans": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation_EducationPlan"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "employedWhileEnrolled": {
            "description": "An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.",
            "type": "boolean",
            "x-nullable": true
          },
          "enrollmentTypeDescriptor": {
            "description": "The type of enrollment reflected by the StudentSchoolAssociation.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "entryDate": {
            "description": "The month, day, and year on which an individual enters and begins to receive instructional services in a school for each school year. The EntryDate value should be the date the student enrolled, or when the student\u0027s enrollment materially changed, such as with a grade promotion.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "entryGradeLevelDescriptor": {
            "description": "The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.",
            "maxLength": 306,
            "type": "string"
          },
          "entryGradeLevelReasonDescriptor": {
            "description": "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "entryTypeDescriptor": {
            "description": "The process by which a student enters a school during a given academic session.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "exitWithdrawDate": {
            "description": "The recorded exit or withdraw date for the student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "exitWithdrawTypeDescriptor": {
            "description": "The circumstances under which the student exited from membership in an educational institution.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "fullTimeEquivalency": {
            "description": "The full-time equivalent ratio for the student\u2019s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "graduationPlanReference": {
            "$ref": "#/components/schemas/EdFi_GraduationPlan_Reference",
            "x-nullable": true
          },
          "nextYearGradeLevelDescriptor": {
            "description": "The anticipated grade level for the student for the next school year.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "nextYearSchoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-nullable": true
          },
          "primarySchool": {
            "description": "Indicates if a given enrollment record should be considered the primary record for a student.",
            "type": "boolean",
            "x-nullable": true
          },
          "repeatGradeIndicator": {
            "description": "An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.",
            "type": "boolean",
            "x-nullable": true
          },
          "residencyStatusDescriptor": {
            "description": "An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "schoolChoice": {
            "description": "An indication of whether the student enrolled in this school under the provisions for public school choice",
            "type": "boolean",
            "x-nullable": true
          },
          "schoolChoiceBasisDescriptor": {
            "description": "The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "schoolChoiceTransfer": {
            "description": "An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.",
            "type": "boolean",
            "x-Ed-Fi-deprecatedReasons": "Will be removed in Data Standard v7.0",
            "x-Ed-Fi-isDeprecated": true,
            "x-nullable": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "termCompletionIndicator": {
            "description": "Idicates whether or not a student completed the most recent school term.",
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "studentReference",
          "schoolReference",
          "entryDate",
          "entryGradeLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolAssociation_AlternativeGraduationPlan": {
        "properties": {
          "alternativeGraduationPlanReference": {
            "$ref": "#/components/schemas/EdFi_GraduationPlan_Reference"
          }
        },
        "required": [
          "alternativeGraduationPlanReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolAssociation_EducationPlan": {
        "properties": {
          "educationPlanDescriptor": {
            "description": "The type of education plan(s) the student is following, if appropriate.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "educationPlanDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolAssociation_Reference": {
        "properties": {
          "entryDate": {
            "description": "The month, day, and year on which an individual enters and begins to receive instructional services in a school for each school year. The EntryDate value should be the date the student enrolled, or when the student\u0027s enrollment materially changed, such as with a grade promotion.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "entryDate",
          "schoolId",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolAttendanceEvent": {
        "description": "This event entity represents the recording of whether a student is in attendance for a school day.",
        "properties": {
          "arrivalTime": {
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "attendanceEventReason": {
            "description": "The reported reason for a student\u0027s absence.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "departureTime": {
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDuration": {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "schoolAttendanceDuration": {
            "description": "The duration in minutes of the school attendance event.",
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "x-nullable": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/EdFi_School_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionReference": {
            "$ref": "#/components/schemas/EdFi_Session_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "attendanceEventCategoryDescriptor",
          "studentReference",
          "schoolReference",
          "sessionReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolAttendanceEvent_Reference": {
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "schoolId",
          "schoolYear",
          "sessionName",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolFoodServiceProgramAssociation": {
        "description": "This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for school food service programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "directCertification": {
            "description": "Indicates that the student\u0027s National School Lunch Program (NSLP) eligibility has been determined through direct certification.",
            "type": "boolean",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "schoolFoodServiceProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSchoolFoodServiceProgramAssociation_SchoolFoodServiceProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolFoodServiceProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSchoolFoodServiceProgramAssociation_SchoolFoodServiceProgramService": {
        "properties": {
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "schoolFoodServiceProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the school food service program.",
            "maxLength": 306,
            "type": "string"
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "schoolFoodServiceProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSection504ProgramAssociation": {
        "description": "This association identifies student that qualifies for the Section 504 of the Rehabilitation Act of 1973.",
        "properties": {
          "accommodationPlan": {
            "description": "Indicates whether student has a Section 504 accommodation plan.",
            "type": "boolean",
            "x-nullable": true
          },
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "section504DisabilityDescriptor": {
            "description": "Defines one or more disabilities student has that qualifies them for a Section 504 plan.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "section504Eligibility": {
            "description": "Indicates whether student has a disability, either temporary or permenant, that qualifies student for Section 504 consideration. Selection of FALSE for this boolean is equivalent to marking student as \u0027Did Not Qualify\u0027.",
            "type": "boolean"
          },
          "section504EligibilityDecisionDate": {
            "description": "The month, day, and year on which the Section 504 eligibility decision is made.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "section504MeetingDate": {
            "description": "The month, day, and year on which the meeting with student\u0027s parent/guardian held to discuss the 504 eligibility of the student.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "section504Eligibility",
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSection504ProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSectionAssociation": {
        "description": "This association indicates the course sections to which a student is assigned.",
        "properties": {
          "attemptStatusDescriptor": {
            "description": "An indication of the student\u0027s completion status for the section.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "beginDate": {
            "description": "Month, day, and year of the student\u0027s entry or assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "dualCreditEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "dualCreditIndicator": {
            "description": "Indicates whether the student assigned to the section is to receive dual credit upon successful completion.",
            "type": "boolean",
            "x-nullable": true
          },
          "dualCreditInstitutionDescriptor": {
            "description": "Descriptor for the postsecondary institution offering college credit. This descriptor may be used to select a postsecondary institution that is not defined as an education organization, and/or select a general type of postsecondary institution.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "dualCreditTypeDescriptor": {
            "description": "For a student taking a dual credit course in a college or high school setting, indicates the type of dual credit program.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "dualHighSchoolCreditIndicator": {
            "description": "Indicates whether successful completion of the course will result in credits toward high school graduation.",
            "type": "boolean",
            "x-nullable": true
          },
          "endDate": {
            "description": "Month, day, and year of the withdrawal or exit of the student from the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "homeroomIndicator": {
            "description": "Indicates the section is the student\u0027s homeroom. Homeroom period may the convention for taking daily attendance.",
            "type": "boolean",
            "x-nullable": true
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSectionAssociation_Program"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "repeatIdentifierDescriptor": {
            "description": "An indication as to whether a student has previously taken a given course.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "teacherStudentDataLinkExclusion": {
            "description": "Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "studentReference",
          "sectionReference",
          "beginDate"
        ],
        "type": "object"
      },
      "EdFi_StudentSectionAssociation_Program": {
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference"
          }
        },
        "required": [
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSectionAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "Month, day, and year of the student\u0027s entry or assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName",
          "sectionIdentifier",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSectionAttendanceEvent": {
        "description": "This event entity represents the recording of whether a student is in attendance for a section.",
        "properties": {
          "arrivalTime": {
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "attendanceEventReason": {
            "description": "The reported reason for a student\u0027s absence.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "classPeriods": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSectionAttendanceEvent_ClassPeriod"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "departureTime": {
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDuration": {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "sectionAttendanceDuration": {
            "description": "The duration in minutes of the section attendance event.",
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "x-nullable": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "eventDate",
          "attendanceEventCategoryDescriptor",
          "studentReference",
          "sectionReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSectionAttendanceEvent_ClassPeriod": {
        "properties": {
          "classPeriodReference": {
            "$ref": "#/components/schemas/EdFi_ClassPeriod_Reference"
          }
        },
        "required": [
          "classPeriodReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSectionAttendanceEvent_Reference": {
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "description": "Date for this attendance event.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName",
          "sectionIdentifier",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramAssociation": {
        "description": "This association represents the special education program(s) that a student participates in or receives services from. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for special education programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "disabilities": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation_Disability"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "ideaEligibility": {
            "description": "Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).",
            "type": "boolean",
            "x-nullable": true
          },
          "iepBeginDate": {
            "description": "The effective date of the most recent IEP.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "iepEndDate": {
            "description": "The end date of the most recent IEP.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "iepReviewDate": {
            "description": "The date of the last IEP review.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "lastEvaluationDate": {
            "description": "The date of the last special education evaluation.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "medicallyFragile": {
            "description": "Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.",
            "type": "boolean",
            "x-nullable": true
          },
          "multiplyDisabled": {
            "description": "Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.",
            "type": "boolean",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "reductionInHoursPerWeekComparedToPeers": {
            "description": "Records the number of hours reduced for the shortened school day for the IEP student as compared to peers in regular education.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "schoolHoursPerWeek": {
            "description": "Indicate the total number of hours of instructional time per week for the school that the student attends.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "serviceProviders": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation_ServiceProvider"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "shortenedSchoolDayIndicator": {
            "description": "Indicator that the student\u0027s IEP requires a shortened school day.",
            "type": "boolean",
            "x-nullable": true
          },
          "specialEducationExitDate": {
            "description": "The  month, day and year on which a person stops receiving special education services.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "specialEducationExitExplained": {
            "description": "Explanation on why a person stops receiving special education services.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "specialEducationExitReasonDescriptor": {
            "description": "The reason why a person stops receiving special education services.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "specialEducationHoursPerWeek": {
            "description": "The number of hours per week for special education instruction and therapy.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "specialEducationProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation_SpecialEducationProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "specialEducationSettingDescriptor": {
            "description": "The major instructional setting (more than 50 percent of a student\u0027s special education program).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramAssociation_Disability": {
        "properties": {
          "designations": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation_DisabilityDesignation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "disabilityDescriptor": {
            "description": "A disability category that describes a individual\u0027s impairment.",
            "maxLength": 306,
            "type": "string"
          },
          "disabilityDeterminationSourceTypeDescriptor": {
            "description": "The source that provided the disability determination.",
            "maxLength": 306,
            "type": "string"
          },
          "disabilityDiagnosis": {
            "description": "A description of the disability diagnosis.",
            "maxLength": 80,
            "type": "string"
          },
          "orderOfDisability": {
            "description": "The order by severity of individual\u0027s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
            "type": "integer"
          }
        },
        "required": [
          "disabilityDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramAssociation_DisabilityDesignation": {
        "properties": {
          "disabilityDesignationDescriptor": {
            "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disabilityDesignationDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramAssociation_ServiceProvider": {
        "properties": {
          "primaryProvider": {
            "description": "Primary ServiceProvider.",
            "type": "boolean"
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference"
          }
        },
        "required": [
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramAssociation_SpecialEducationProgramService": {
        "properties": {
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "providers": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation_ServiceProvider"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "serviceBeginDate": {
            "description": "First date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "specialEducationProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the special education program.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "specialEducationProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramEligibilityAssociation": {
        "description": "Captures details regarding the evaluation process for eligibility of students for special education services under IDEA Part C or Part B.",
        "properties": {
          "consentToEvaluationDate": {
            "description": "The date on which the student\u0027s parent gave a consent (Parent Consent Date).",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "consentToEvaluationReceivedDate": {
            "description": "Indicates the date on which the local education agency received written consent for the evaluation from the student\u0027s parent or guardian. This is the first day of the evaluation timeframe.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "eligibilityConferenceDate": {
            "description": "The month, day, and year when the eligibility conference is held between the parent(s)/guardian(s) and the educational organization responsible staff member(s) to review and make decision on special education related services eligibility.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "eligibilityDelayReasonDescriptor": {
            "description": "The reason why the eligibility determination was completed beyond the required timeframe.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "eligibilityDeterminationDate": {
            "description": "Indicates the month, day, and year the local education agency (LEA) held the admission, review, and dismissal committee meeting regarding the child\u0027s eligibility determination for special education and related services. An individualized education plan (IEP) would be developed and implemented for a child admitted into special education on this same date.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "eligibilityEvaluationDate": {
            "description": "Indicates the month, day, and year when the written individual evaluation report was completed.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "eligibilityEvaluationTypeDescriptor": {
            "description": "Indicates if this is an initial evaluation or a reevaluation.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "evaluationCompleteIndicator": {
            "description": "Indicates the evaluation completed status.",
            "type": "boolean",
            "x-nullable": true
          },
          "evaluationDelayDays": {
            "description": "Indicates the number of student absences, if any, beginning the first instructional day following the date on which the local education agency (LEA) received written parental or guardian consent for the evaluation.",
            "type": "integer",
            "x-nullable": true
          },
          "evaluationDelayReasonDescriptor": {
            "description": "Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe. This descriptor field will have allowed reasons as descriptor values.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "evaluationLateReason": {
            "description": "Refers to additional information for delay in doing the evaluation.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "ideaIndicator": {
            "description": "Indicates whether or not the student was determined eligible as a result of an evaluation.",
            "type": "boolean",
            "x-nullable": true
          },
          "ideaPartDescriptor": {
            "description": "Indicates if the evaluation is done under Part B IDEA or Part C IDEA.",
            "maxLength": 306,
            "type": "string"
          },
          "originalECIServicesDate": {
            "description": "The month, date, and year when an infant or toddler, from birth through age 2, began participating in the early childhood intervention (ECI) program.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "transitionConferenceDate": {
            "description": "Indicates the month, day, and year when the transition conference was held (for a child receiving early childhood intervention (ECI) services) among the lead agency, the family, and the local education agency (LEA) where the child resides to discuss the child\u0027s potential eligibility for early childhood special education (ECSE) services.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "transitionNotificationDate": {
            "description": "Indicates the month, day, and year the LEA Notification of Potentially Eligible for Special Education Services was sent by the early childhood intervention (ECI) contractor to the local education agency (LEA) to notify them that a child enrolled in ECI will shortly reach the age of eligibility for Part B services and the child is potentially eligible for services under Part B, early childhood special education (ECSE). The LEA Notification constitutes a referral to the LEA for an initial evaluation and eligibility determination of the child which the parent or guardian may opt out from the referral.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "educationOrganizationReference",
          "studentReference",
          "programReference",
          "consentToEvaluationReceivedDate",
          "ideaPartDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentSpecialEducationProgramEligibilityAssociation_Reference": {
        "properties": {
          "consentToEvaluationReceivedDate": {
            "description": "Indicates the date on which the local education agency received written consent for the evaluation from the student\u0027s parent or guardian. This is the first day of the evaluation timeframe.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "consentToEvaluationReceivedDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentTitleIPartAProgramAssociation": {
        "description": "This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for Title I Part A programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "titleIPartAParticipantDescriptor": {
            "description": "An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.",
            "maxLength": 306,
            "type": "string"
          },
          "titleIPartAProgramServices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentTitleIPartAProgramAssociation_TitleIPartAProgramService"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "titleIPartAParticipantDescriptor",
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentTitleIPartAProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_StudentTitleIPartAProgramAssociation_TitleIPartAProgramService": {
        "properties": {
          "primaryIndicator": {
            "description": "True if service is a primary service.",
            "type": "boolean"
          },
          "serviceBeginDate": {
            "description": "First date the Student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Last date the Student was in this option for the current school year.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "titleIPartAProgramServiceDescriptor": {
            "description": "Indicates the service being provided to the student by the Title I Part A Program.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "titleIPartAProgramServiceDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentTransportation": {
        "description": "This entity captures a student\u0027s specific transportation arrangement.",
        "properties": {
          "specialAccomodationRequirements": {
            "description": "Specific requirements needed to accommodate a student\u0027s physical needs which may include special equipment installed in a vehicle or a special arrangement for transportation.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "studentBusDetails": {
            "$ref": "#/components/schemas/EdFi_StudentTransportation_StudentBusDetail",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "transportationEducationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "transportationPublicExpenseEligibilityTypeDescriptor": {
            "description": "The primary type of eligibility for transporting a student at public expense.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "transportationTypeDescriptor": {
            "description": "The mode or type of transportation utilized by a student to commute to and from school",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "studentReference",
          "transportationEducationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_StudentTransportation_Reference": {
        "properties": {
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "transportationEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentUniqueId",
          "transportationEducationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_StudentTransportation_StudentBusDetail": {
        "properties": {
          "busNumber": {
            "description": "The unique identifier assigned to the bus used for transporting the student.",
            "maxLength": 36,
            "type": "string"
          },
          "busRouteDescriptor": {
            "description": "Identifies the specific route taken by a bus for student transportation.",
            "maxLength": 306,
            "type": "string"
          },
          "mileage": {
            "description": "The distance, typically measured in miles, that a student was transported along the route of the bus during a single trip.",
            "format": "double",
            "type": "number"
          },
          "travelDayofWeeks": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentTransportation_TravelDayofWeek"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "travelDirections": {
            "items": {
              "$ref": "#/components/schemas/EdFi_StudentTransportation_TravelDirection"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "busNumber",
          "busRouteDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentTransportation_TravelDayofWeek": {
        "properties": {
          "travelDayofWeekDescriptor": {
            "description": "Specifies the day(s) of the week on which student transportation occurs.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "travelDayofWeekDescriptor"
        ],
        "type": "object"
      },
      "EdFi_StudentTransportation_TravelDirection": {
        "properties": {
          "travelDirectionDescriptor": {
            "description": "Indicates the direction of travel for the student transportation route (e.g., to school, from school).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "travelDirectionDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Student": {
        "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
        "properties": {
          "birthCity": {
            "description": "The city the student was born in.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "x-nullable": true
          },
          "birthCountryDescriptor": {
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "birthDate": {
            "description": "The month, day, and year on which an individual was born.",
            "format": "date",
            "type": "string"
          },
          "birthInternationalProvince": {
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "maxLength": 150,
            "type": "string",
            "x-nullable": true
          },
          "birthSexDescriptor": {
            "description": "A person\u0027s sex at birth.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "birthStateAbbreviationDescriptor": {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "citizenshipStatusDescriptor": {
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "maxLength": 306,
            "type": "string"
          },
          "dateEnteredUS": {
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string",
            "x-nullable": true
          },
          "identificationDocuments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Student_Citizenship_IdentificationDocument"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "maidenName": {
            "description": "The individual\u0027s maiden name.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "multipleBirthStatus": {
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "type": "boolean",
            "x-nullable": true
          },
          "otherNames": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Student_OtherName"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-nullable": true
          },
          "personalIdentificationDocuments": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Student_Name_PersonalIdentificationDocument"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string",
            "x-nullable": true
          },
          "preferredFirstName": {
            "description": "The first name the individual prefers, if different from their legal first name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "description": "The last name the individual prefers, if different from their legal last name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "visas": {
            "items": {
              "$ref": "#/components/schemas/EdFi_Student_Citizenship_Visa"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "studentUniqueId",
          "firstName",
          "lastSurname",
          "birthDate"
        ],
        "type": "object"
      },
      "EdFi_Student_Citizenship_IdentificationDocument": {
        "properties": {
          "documentExpirationDate": {
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "type": "string"
          },
          "documentTitle": {
            "description": "The title of the document given by the issuer.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationDocumentUseDescriptor": {
            "description": "The primary function of the document used for establishing identity.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerCountryDescriptor": {
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerDocumentIdentificationCode": {
            "description": "The unique identifier on the issuer\u0027s identification system.",
            "maxLength": 60,
            "type": "string"
          },
          "issuerName": {
            "description": "Name of the entity or institution that issued the document.",
            "maxLength": 150,
            "type": "string"
          },
          "personalInformationVerificationDescriptor": {
            "description": "The category of the document relative to its purpose.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EdFi_Student_Citizenship_Visa": {
        "properties": {
          "visaDescriptor": {
            "description": "An indicator of a non-US citizen\u0027s Visa type.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "visaDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Student_Name_PersonalIdentificationDocument": {
        "properties": {
          "documentExpirationDate": {
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "type": "string"
          },
          "documentTitle": {
            "description": "The title of the document given by the issuer.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationDocumentUseDescriptor": {
            "description": "The primary function of the document used for establishing identity.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerCountryDescriptor": {
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerDocumentIdentificationCode": {
            "description": "The unique identifier on the issuer\u0027s identification system.",
            "maxLength": 60,
            "type": "string"
          },
          "issuerName": {
            "description": "Name of the entity or institution that issued the document.",
            "maxLength": 150,
            "type": "string"
          },
          "personalInformationVerificationDescriptor": {
            "description": "The category of the document relative to its purpose.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "personalInformationVerificationDescriptor",
          "identificationDocumentUseDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Student_OtherName": {
        "properties": {
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string"
          },
          "otherNameTypeDescriptor": {
            "description": "The types of alternate names for an individual.",
            "maxLength": 306,
            "type": "string"
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastSurname",
          "otherNameTypeDescriptor"
        ],
        "type": "object"
      },
      "EdFi_Student_Reference": {
        "properties": {
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentUniqueId"
        ],
        "type": "object"
      },
      "EdFi_SurveyCourseAssociation": {
        "description": "The course associated with the survey.",
        "properties": {
          "courseReference": {
            "$ref": "#/components/schemas/EdFi_Course_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyReference": {
            "$ref": "#/components/schemas/EdFi_Survey_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyReference",
          "courseReference"
        ],
        "type": "object"
      },
      "EdFi_SurveyCourseAssociation_Reference": {
        "properties": {
          "courseCode": {
            "description": "A unique alphanumeric code assigned to a course.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "courseCode",
          "educationOrganizationId",
          "namespace",
          "surveyIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyProgramAssociation": {
        "description": "The program associated with the survey.",
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyReference": {
            "$ref": "#/components/schemas/EdFi_Survey_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyReference",
          "programReference"
        ],
        "type": "object"
      },
      "EdFi_SurveyProgramAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "namespace",
          "surveyIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestionResponse": {
        "description": "The response to a survey question.",
        "properties": {
          "comment": {
            "description": "Additional information provided by the responder about the question in the survey.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "noResponse": {
            "description": "Indicates there was no response to the question.",
            "type": "boolean",
            "x-nullable": true
          },
          "surveyQuestionMatrixElementResponses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_SurveyQuestionResponse_SurveyQuestionMatrixElementResponse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "surveyQuestionReference": {
            "$ref": "#/components/schemas/EdFi_SurveyQuestion_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveyResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/EdFi_SurveyQuestionResponse_SurveyQuestionResponseValue"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "surveyQuestionReference",
          "surveyResponseReference"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestionResponse_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "questionCode": {
            "description": "The identifying code for the question, unique for the survey.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "questionCode",
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestionResponse_SurveyQuestionMatrixElementResponse": {
        "properties": {
          "matrixElement": {
            "description": "For matrix questions, the text identifying each row of the matrix.",
            "maxLength": 255,
            "type": "string"
          },
          "maxNumericResponse": {
            "description": "The maximum score response to the question.",
            "type": "integer"
          },
          "minNumericResponse": {
            "description": "The minimum score response to the question.",
            "type": "integer"
          },
          "noResponse": {
            "description": "Indicates there was no response to the question.",
            "type": "boolean"
          },
          "numericResponse": {
            "description": "The numeric response to the question.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          },
          "textResponse": {
            "description": "The text response(s) for the question.",
            "maxLength": 2048,
            "type": "string"
          }
        },
        "required": [
          "matrixElement"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestionResponse_SurveyQuestionResponseValue": {
        "properties": {
          "numericResponse": {
            "description": "A numeric response to the question.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          },
          "surveyQuestionResponseValueIdentifier": {
            "description": "Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.",
            "type": "integer"
          },
          "textResponse": {
            "description": "A text response to the question.",
            "maxLength": 2048,
            "type": "string"
          }
        },
        "required": [
          "surveyQuestionResponseValueIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestion": {
        "description": "The questions for the survey.",
        "properties": {
          "matrices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_SurveyQuestion_Matrix"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "questionCode": {
            "description": "The identifying code for the question, unique for the survey.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "questionFormDescriptor": {
            "description": "The form or type of question.",
            "maxLength": 306,
            "type": "string"
          },
          "questionText": {
            "description": "The text of the question.",
            "maxLength": 1024,
            "type": "string"
          },
          "responseChoices": {
            "items": {
              "$ref": "#/components/schemas/EdFi_SurveyQuestion_ResponseChoice"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "surveyReference": {
            "$ref": "#/components/schemas/EdFi_Survey_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionReference": {
            "$ref": "#/components/schemas/EdFi_SurveySection_Reference",
            "x-nullable": true
          }
        },
        "required": [
          "questionCode",
          "surveyReference",
          "questionFormDescriptor",
          "questionText"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestion_Matrix": {
        "properties": {
          "matrixElement": {
            "description": "For matrix questions, the text identifying each row of the matrix.",
            "maxLength": 255,
            "type": "string"
          },
          "maxRawScore": {
            "description": "The maximum score possible on a survey.",
            "type": "integer"
          },
          "minRawScore": {
            "description": "The minimum score possible on a survey.",
            "type": "integer"
          }
        },
        "required": [
          "matrixElement"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestion_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "questionCode": {
            "description": "The identifying code for the question, unique for the survey.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "questionCode",
          "namespace",
          "surveyIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyQuestion_ResponseChoice": {
        "properties": {
          "numericValue": {
            "description": "A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          },
          "sortOrder": {
            "description": "Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn\u0027t apply, the value of NumericValue or a unique, possibly sequential numeric value.",
            "type": "integer"
          },
          "textValue": {
            "description": "A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "sortOrder"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponseEducationOrganizationTargetAssociation": {
        "description": "This association provides information about the survey being taken and the education organization the survey is about.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveyResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyResponseReference",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponseEducationOrganizationTargetAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponseStaffTargetAssociation": {
        "description": "The association provides information about the survey being taken and who the survey is about.",
        "properties": {
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveyResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyResponseReference",
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponseStaffTargetAssociation_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffUniqueId",
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponse": {
        "description": "Responses to a Survey for named or anonymous persons.",
        "properties": {
          "contactReference": {
            "$ref": "#/components/schemas/EdFi_Contact_Reference"
          },
          "electronicMailAddress": {
            "description": "Email address of the respondent.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "x-nullable": true
          },
          "fullName": {
            "description": "Full name of the respondent.",
            "maxLength": 80,
            "type": "string",
            "x-nullable": true
          },
          "location": {
            "description": "Location of the respondent, often a city, district, or school.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "responseDate": {
            "description": "Date of the survey response.",
            "format": "date",
            "type": "string"
          },
          "responseTime": {
            "description": "The amount of time in seconds it took for the respondent to complete the survey.",
            "type": "integer",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference"
          },
          "surveyLevels": {
            "items": {
              "$ref": "#/components/schemas/EdFi_SurveyResponse_SurveyLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "surveyReference": {
            "$ref": "#/components/schemas/EdFi_Survey_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "_ext": {
            "$ref": "#/components/schemas/EdFi_SurveyResponseExtension"
          }
        },
        "required": [
          "surveyResponseIdentifier",
          "surveyReference",
          "responseDate"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponse_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponse_SurveyLevel": {
        "properties": {
          "surveyLevelDescriptor": {
            "description": "Provides information about the respondents of a survey and how they can be grouped together.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "surveyLevelDescriptor"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionAssociation": {
        "description": "The section associated with the survey.",
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyReference": {
            "$ref": "#/components/schemas/EdFi_Survey_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyReference",
          "sectionReference"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionAssociation_Reference": {
        "properties": {
          "localCourseCode": {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "description": "The local identifier assigned to a section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "description": "The identifier for the calendar for the academic session.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName",
          "sectionIdentifier",
          "namespace",
          "surveyIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionResponseEducationOrganizationTargetAssociation": {
        "description": "This association provides information about the survey section and the education organization the survey section is about.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveySectionResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveySectionResponseReference",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionResponseEducationOrganizationTargetAssociation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "description": "The title or label for the survey section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "surveyResponseIdentifier",
          "namespace",
          "surveyIdentifier",
          "surveySectionTitle"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionResponseStaffTargetAssociation": {
        "description": "This association provides information about the survey section and the staff the survey section is about.",
        "properties": {
          "staffReference": {
            "$ref": "#/components/schemas/EdFi_Staff_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveySectionResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveySectionResponseReference",
          "staffReference"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionResponseStaffTargetAssociation_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "description": "A unique alphanumeric code assigned to a staff.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "description": "The title or label for the survey section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "staffUniqueId",
          "surveyResponseIdentifier",
          "namespace",
          "surveyIdentifier",
          "surveySectionTitle"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionResponse": {
        "description": "Optional information about the responses provided for a section of a survey.",
        "properties": {
          "sectionRating": {
            "description": "Numeric rating computed from the survey responses for the section.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveyResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionReference": {
            "$ref": "#/components/schemas/EdFi_SurveySection_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveySectionReference",
          "surveyResponseReference"
        ],
        "type": "object"
      },
      "EdFi_SurveySectionResponse_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "description": "The title or label for the survey section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyResponseIdentifier",
          "namespace",
          "surveyIdentifier",
          "surveySectionTitle"
        ],
        "type": "object"
      },
      "EdFi_SurveySection": {
        "description": "The section of questions for the survey.",
        "properties": {
          "surveyReference": {
            "$ref": "#/components/schemas/EdFi_Survey_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "description": "The title or label for the survey section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyReference",
          "surveySectionTitle"
        ],
        "type": "object"
      },
      "EdFi_SurveySection_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "description": "The title or label for the survey section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "namespace",
          "surveyIdentifier",
          "surveySectionTitle"
        ],
        "type": "object"
      },
      "EdFi_Survey": {
        "description": "A survey to identified or anonymous respondents.",
        "properties": {
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-nullable": true
          },
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "numberAdministered": {
            "description": "Number of persons to whom this survey was administered.",
            "type": "integer",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
          },
          "sessionReference": {
            "$ref": "#/components/schemas/EdFi_Session_Reference",
            "x-nullable": true
          },
          "surveyCategoryDescriptor": {
            "description": "The category or type of survey.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyTitle": {
            "description": "The title of the survey.",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "surveyIdentifier",
          "namespace",
          "surveyTitle",
          "schoolYearTypeReference"
        ],
        "type": "object"
      },
      "EdFi_Survey_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "namespace",
          "surveyIdentifier"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization": {
        "description": "This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationCategory"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCodes": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIdentificationCode"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "indicators": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_EducationOrganizationIndicator"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "institutionTelephones": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InstitutionTelephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "internationalAddresses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_EducationOrganization_InternationalAddress"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "nameOfInstitution": {
            "description": "The full, legally accepted name of the institution.",
            "maxLength": 75,
            "type": "string"
          },
          "operationalStatusDescriptor": {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "description": "A short name for the institution.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "webSite": {
            "description": "The public web site address (URL) for the education organization.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "educationOrganizationId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganization_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId"
        ],
        "type": "object"
      },
      "EdFi_GeneralStudentProgramAssociation": {
        "description": "This association base class represents the basic relationship between students and programs.",
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "items": {
              "$ref": "#/components/schemas/EdFi_GeneralStudentProgramAssociation_ProgramParticipationStatus"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programReference": {
            "$ref": "#/components/schemas/EdFi_Program_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "reasonExitedDescriptor": {
            "description": "The reason the student left the program within a school or district.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "programReference",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "EdFi_GeneralStudentProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "TPDM_CandidateEducatorPreparationProgramAssociation": {
        "description": "Information about the association between the Teacher Candidate and the EducatorPreparationProgram",
        "properties": {
          "beginDate": {
            "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "candidateReference": {
            "$ref": "#/components/schemas/TPDM_Candidate_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortYears": {
            "items": {
              "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation_CohortYear"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "degreeSpecializations": {
            "items": {
              "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation_DegreeSpecialization"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "educatorPreparationProgramReference": {
            "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The end date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "eppProgramPathwayDescriptor": {
            "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "reasonExitedDescriptor": {
            "description": "Reason exited for the association.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "candidateReference",
          "educatorPreparationProgramReference",
          "beginDate"
        ],
        "type": "object"
      },
      "TPDM_CandidateEducatorPreparationProgramAssociation_CohortYear": {
        "properties": {
          "cohortYearTypeDescriptor": {
            "description": "The type of cohort year (9th grade, graduation).",
            "maxLength": 306,
            "type": "string"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference"
          },
          "termDescriptor": {
            "description": "The term associated with the cohort year; for example, the intended term of graduation.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "schoolYearTypeReference",
          "cohortYearTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_CandidateEducatorPreparationProgramAssociation_DegreeSpecialization": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year on which the Teacher Candidate first declared specialization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year on which the Teacher Candidate exited the declared specialization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "majorSpecialization": {
            "description": "The major area for a degree or area of specialization for a certificate.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "minorSpecialization": {
            "description": "The minor area for a degree or area of specialization for a certificate.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "majorSpecialization",
          "beginDate"
        ],
        "type": "object"
      },
      "TPDM_CandidateEducatorPreparationProgramAssociation_Reference": {
        "properties": {
          "beginDate": {
            "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "candidateIdentifier": {
            "description": "A unique alphanumeric code assigned to a candidate.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The name of the Educator Preparation Program.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "beginDate",
          "candidateIdentifier",
          "educationOrganizationId",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate": {
        "description": "A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.",
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Address"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "birthCity": {
            "description": "The city the student was born in.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "x-nullable": true
          },
          "birthCountryDescriptor": {
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "birthDate": {
            "description": "The month, day, and year on which an individual was born.",
            "format": "date",
            "type": "string"
          },
          "birthInternationalProvince": {
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "maxLength": 150,
            "type": "string",
            "x-nullable": true
          },
          "birthSexDescriptor": {
            "description": "A person\u0027s sex at birth.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "birthStateAbbreviationDescriptor": {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "candidateIdentifier": {
            "description": "A unique alphanumeric code assigned to a candidate.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "dateEnteredUS": {
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "disabilities": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Disability"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "displacementStatus": {
            "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "economicDisadvantaged": {
            "description": "An indication of inadequate financial condition of an individual\u0027s family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
            "type": "boolean",
            "x-nullable": true
          },
          "electronicMails": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_ElectronicMail"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "englishLanguageExamDescriptor": {
            "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "firstGenerationStudent": {
            "description": "Indicator of whether individual is a first generation college student.",
            "type": "boolean",
            "x-nullable": true
          },
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "genderDescriptor": {
            "description": "The gender of the candidate.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string",
            "x-nullable": true
          },
          "hispanicLatinoEthnicity": {
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \u0022Spanish origin,\u0022 can be used in addition to \u0022Hispanic or Latino.\u0022",
            "type": "boolean",
            "x-nullable": true
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Language"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "limitedEnglishProficiencyDescriptor": {
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "maidenName": {
            "description": "The individual\u0027s maiden name.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "multipleBirthStatus": {
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "type": "boolean",
            "x-nullable": true
          },
          "otherNames": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_OtherName"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-nullable": true
          },
          "personalIdentificationDocuments": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Name_PersonalIdentificationDocument"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string",
            "x-nullable": true
          },
          "preferredFirstName": {
            "description": "The first name the individual prefers, if different from their legal first name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "description": "The last name the individual prefers, if different from their legal last name",
            "maxLength": 75,
            "type": "string",
            "x-nullable": true
          },
          "races": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Race"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sexDescriptor": {
            "description": "The sex of the candidate.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "telephones": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Telephone"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "candidateIdentifier",
          "firstName",
          "lastSurname",
          "birthDate"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Address": {
        "properties": {
          "addressTypeDescriptor": {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "apartmentRoomSuiteNumber": {
            "description": "The apartment, room, or suite number of an address.",
            "maxLength": 50,
            "type": "string"
          },
          "buildingSiteNumber": {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "maxLength": 20,
            "type": "string"
          },
          "city": {
            "description": "The name of the city in which an address is located.",
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          },
          "congressionalDistrict": {
            "description": "The congressional district in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "countyFIPSCode": {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "doNotPublishIndicator": {
            "description": "An indication that the address should not be published.",
            "type": "boolean"
          },
          "latitude": {
            "description": "The geographic latitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "localeDescriptor": {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "maxLength": 306,
            "type": "string"
          },
          "longitude": {
            "description": "The geographic longitude of the physical address.",
            "maxLength": 20,
            "type": "string"
          },
          "nameOfCounty": {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "maxLength": 30,
            "type": "string"
          },
          "periods": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_Period"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "postalCode": {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "maxLength": 17,
            "type": "string"
          },
          "stateAbbreviationDescriptor": {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "maxLength": 306,
            "type": "string"
          },
          "streetNumberName": {
            "description": "The street number and street name or post office box number of an address.",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "streetNumberName",
          "city",
          "stateAbbreviationDescriptor",
          "postalCode",
          "addressTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Disability": {
        "properties": {
          "designations": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_DisabilityDesignation"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "disabilityDescriptor": {
            "description": "A disability category that describes a individual\u0027s impairment.",
            "maxLength": 306,
            "type": "string"
          },
          "disabilityDeterminationSourceTypeDescriptor": {
            "description": "The source that provided the disability determination.",
            "maxLength": 306,
            "type": "string"
          },
          "disabilityDiagnosis": {
            "description": "A description of the disability diagnosis.",
            "maxLength": 80,
            "type": "string"
          },
          "orderOfDisability": {
            "description": "The order by severity of individual\u0027s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
            "type": "integer"
          }
        },
        "required": [
          "disabilityDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_DisabilityDesignation": {
        "properties": {
          "disabilityDesignationDescriptor": {
            "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "disabilityDesignationDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_ElectronicMail": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the electronic email address should not be published.",
            "type": "boolean"
          },
          "electronicMailAddress": {
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "maxLength": 128,
            "minLength": 7,
            "type": "string"
          },
          "electronicMailTypeDescriptor": {
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "maxLength": 306,
            "type": "string"
          },
          "primaryEmailAddressIndicator": {
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "type": "boolean"
          }
        },
        "required": [
          "electronicMailAddress",
          "electronicMailTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Language": {
        "properties": {
          "languageDescriptor": {
            "description": "A specification of which written or spoken communication is being used.",
            "maxLength": 306,
            "type": "string"
          },
          "uses": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Candidate_LanguageUse"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "languageDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_LanguageUse": {
        "properties": {
          "languageUseDescriptor": {
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Name_PersonalIdentificationDocument": {
        "properties": {
          "documentExpirationDate": {
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "type": "string"
          },
          "documentTitle": {
            "description": "The title of the document given by the issuer.",
            "maxLength": 60,
            "type": "string"
          },
          "identificationDocumentUseDescriptor": {
            "description": "The primary function of the document used for establishing identity.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerCountryDescriptor": {
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "maxLength": 306,
            "type": "string"
          },
          "issuerDocumentIdentificationCode": {
            "description": "The unique identifier on the issuer\u0027s identification system.",
            "maxLength": 60,
            "type": "string"
          },
          "issuerName": {
            "description": "Name of the entity or institution that issued the document.",
            "maxLength": 150,
            "type": "string"
          },
          "personalInformationVerificationDescriptor": {
            "description": "The category of the document relative to its purpose.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "personalInformationVerificationDescriptor",
          "identificationDocumentUseDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_OtherName": {
        "properties": {
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "generationCodeSuffix": {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "maxLength": 10,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "middleName": {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "maxLength": 75,
            "type": "string"
          },
          "otherNameTypeDescriptor": {
            "description": "The types of alternate names for an individual.",
            "maxLength": 306,
            "type": "string"
          },
          "personalTitlePrefix": {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastSurname",
          "otherNameTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Period": {
        "properties": {
          "beginDate": {
            "description": "The month, day, and year for the start of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          },
          "endDate": {
            "description": "The month, day, and year for the end of the period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "beginDate"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Race": {
        "properties": {
          "raceDescriptor": {
            "description": "The general racial category which most clearly reflects the individual\u0027s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "raceDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Reference": {
        "properties": {
          "candidateIdentifier": {
            "description": "A unique alphanumeric code assigned to a candidate.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "candidateIdentifier"
        ],
        "type": "object"
      },
      "TPDM_Candidate_Telephone": {
        "properties": {
          "doNotPublishIndicator": {
            "description": "An indication that the telephone number should not be published.",
            "type": "boolean"
          },
          "orderOfPriority": {
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "minimum": 1,
            "type": "integer"
          },
          "telephoneNumber": {
            "description": "The telephone number including the area code, and extension, if applicable.",
            "maxLength": 24,
            "type": "string"
          },
          "telephoneNumberTypeDescriptor": {
            "description": "The type of communication number listed for an individual or organization.",
            "maxLength": 306,
            "type": "string"
          },
          "textMessageCapabilityIndicator": {
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "type": "boolean"
          }
        },
        "required": [
          "telephoneNumber",
          "telephoneNumberTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Credential_StudentAcademicRecord": {
        "properties": {
          "studentAcademicRecordReference": {
            "$ref": "#/components/schemas/EdFi_StudentAcademicRecord_Reference"
          }
        },
        "required": [
          "studentAcademicRecordReference"
        ],
        "type": "object"
      },
      "EdFi_CredentialExtension": {
        "type": "object",
        "properties": {
          "tpdm": {
            "$ref": "#/components/schemas/tpdm_EdFi_CredentialExtension"
          }
        }
      },
      "tpdm_EdFi_CredentialExtension": {
        "description": "",
        "properties": {
          "boardCertificationIndicator": {
            "description": "Indicator that the credential was granted under the authority of a national Board Certification.",
            "type": "boolean",
            "x-nullable": true
          },
          "certificationRouteDescriptor": {
            "description": "The process, program, or pathway used to obtain certification.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "certificationTitle": {
            "description": "The title of the certification obtained by the educator.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "credentialStatusDate": {
            "description": "The month, day, and year on which the credential status was effective.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "credentialStatusDescriptor": {
            "description": "The current status of the credential (e.g., active, suspended, etc.).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educatorRoleDescriptor": {
            "description": "The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-nullable": true
          },
          "studentAcademicRecords": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Credential_StudentAcademicRecord"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "TPDM_EducatorPreparationProgram": {
        "description": "The\u00A0Educator\u00A0Preparation Program is designed to prepare students to become licensed educators.",
        "properties": {
          "accreditationStatusDescriptor": {
            "description": "The current accreditation status of the Educator Preparation Program.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram_GradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "programId": {
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "maxLength": 20,
            "type": "string",
            "x-nullable": true
          },
          "programName": {
            "description": "The name of the Educator Preparation Program.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationReference",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EducatorPreparationProgram_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels served at the EPP Program.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EducatorPreparationProgram_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "description": "The name of the Educator Preparation Program.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "description": "The type of program.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElementRating": {
        "description": "The lowest-level rating for an Evaluation Element for an individual educator.",
        "properties": {
          "areaOfRefinement": {
            "description": "Area identified for person to refine or improve as part of the evaluation.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "areaOfReinforcement": {
            "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "comments": {
            "description": "Any comments about the performance evaluation to be captured.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "elementRatingResults": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EvaluationElementRating_ElementRatingResult"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "evaluationElementRatingLevelDescriptor": {
            "description": "The rating level achieved based upon the rating or score.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "evaluationElementReference": {
            "$ref": "#/components/schemas/TPDM_EvaluationElement_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveRatingReference": {
            "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "feedback": {
            "description": "Feedback provided to the evaluated person.",
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "evaluationObjectiveRatingReference",
          "evaluationElementReference"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElementRating_ElementRatingResult": {
        "properties": {
          "rating": {
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "type": "number"
          },
          "ratingResultTitle": {
            "description": "The title of Rating Result.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingResultTitle",
          "rating",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElementRating_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "description": "The date for the person\u0027s evaluation.",
            "format": "date-time",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementTitle": {
            "description": "The name or title of the evaluation element.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "description": "The name or title of the evaluation Objective.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationElementTitle",
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "evaluationObjectiveTitle",
          "evaluationDate",
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElement": {
        "description": "The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.",
        "properties": {
          "evaluationElementTitle": {
            "description": "The name or title of the evaluation element.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveReference": {
            "$ref": "#/components/schemas/TPDM_EvaluationObjective_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTypeDescriptor": {
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "maxRating": {
            "description": "The maximum summary numerical rating or score for the evaluation element.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "minRating": {
            "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "ratingLevels": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EvaluationElement_ElementRatingLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sortOrder": {
            "description": "The sort order of this Evaluation Element.",
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "evaluationObjectiveReference",
          "evaluationElementTitle"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElement_ElementRatingLevel": {
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          },
          "maxRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElement_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementTitle": {
            "description": "The name or title of the evaluation element.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "description": "The name or title of the evaluation Objective.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationElementTitle",
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "evaluationObjectiveTitle"
        ],
        "type": "object"
      },
      "TPDM_EvaluationObjectiveRating": {
        "description": "The rating for the component Evaluation Objective for an individual educator.",
        "properties": {
          "comments": {
            "description": "Any comments about the performance evaluation to be captured.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "evaluationObjectiveReference": {
            "$ref": "#/components/schemas/TPDM_EvaluationObjective_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationRatingReference": {
            "$ref": "#/components/schemas/TPDM_EvaluationRating_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveRatingLevelDescriptor": {
            "description": "The rating level achieved based upon the rating or score.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "objectiveRatingResults": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating_ObjectiveRatingResult"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "evaluationRatingReference",
          "evaluationObjectiveReference"
        ],
        "type": "object"
      },
      "TPDM_EvaluationObjectiveRating_ObjectiveRatingResult": {
        "properties": {
          "rating": {
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "type": "number"
          },
          "ratingResultTitle": {
            "description": "The title of Rating Result.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingResultTitle",
          "rating",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationObjectiveRating_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "description": "The date for the person\u0027s evaluation.",
            "format": "date-time",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "description": "The name or title of the evaluation Objective.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "evaluationObjectiveTitle",
          "evaluationDate",
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationObjective": {
        "description": "A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.",
        "properties": {
          "evaluationObjectiveDescription": {
            "description": "The long description of the Evaluation Objective.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "evaluationObjectiveTitle": {
            "description": "The name or title of the evaluation Objective.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationReference": {
            "$ref": "#/components/schemas/TPDM_Evaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTypeDescriptor": {
            "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "maxRating": {
            "description": "The maximum summary numerical rating or score for the evaluation Objective.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "minRating": {
            "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "ratingLevels": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EvaluationObjective_ObjectiveRatingLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sortOrder": {
            "description": "The sort order of this Evaluation Objective.",
            "type": "integer",
            "x-nullable": true
          }
        },
        "required": [
          "evaluationReference",
          "evaluationObjectiveTitle"
        ],
        "type": "object"
      },
      "TPDM_EvaluationObjective_ObjectiveRatingLevel": {
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          },
          "maxRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationObjective_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "description": "The name or title of the evaluation Objective.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "evaluationObjectiveTitle"
        ],
        "type": "object"
      },
      "TPDM_EvaluationRating": {
        "description": "The summary weighting for the Evaluation instrument for an individual educator.",
        "properties": {
          "actualDuration": {
            "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          },
          "comments": {
            "description": "Any comments about the evaluation to be captured.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "evaluationDate": {
            "description": "The date for the person\u0027s evaluation.",
            "format": "date-time",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationRatingLevelDescriptor": {
            "description": "The rating level achieved based upon the rating or score.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "evaluationRatingStatusDescriptor": {
            "description": "The Status of the poerformance evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "evaluationReference": {
            "$ref": "#/components/schemas/TPDM_Evaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationRatingReference": {
            "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EvaluationRating_EvaluationRatingResult"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "reviewers": {
            "items": {
              "$ref": "#/components/schemas/TPDM_EvaluationRating_Reviewer"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "sectionReference": {
            "$ref": "#/components/schemas/EdFi_Section_Reference",
            "x-nullable": true
          }
        },
        "required": [
          "performanceEvaluationRatingReference",
          "evaluationReference",
          "evaluationDate"
        ],
        "type": "object"
      },
      "TPDM_EvaluationRating_EvaluationRatingResult": {
        "properties": {
          "rating": {
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "type": "number"
          },
          "ratingResultTitle": {
            "description": "The title of Rating Result.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingResultTitle",
          "rating",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationRating_ReceivedTraining": {
        "properties": {
          "interRaterReliabilityScore": {
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "type": "integer"
          },
          "receivedTrainingDate": {
            "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TPDM_EvaluationRating_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "description": "The date for the person\u0027s evaluation.",
            "format": "date-time",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "evaluationDate",
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object"
      },
      "TPDM_EvaluationRating_Reviewer": {
        "properties": {
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "receivedTraining": {
            "$ref": "#/components/schemas/TPDM_EvaluationRating_ReceivedTraining"
          },
          "reviewerPersonReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference"
          }
        },
        "required": [
          "firstName",
          "lastSurname"
        ],
        "type": "object"
      },
      "TPDM_Evaluation": {
        "description": "An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.",
        "properties": {
          "evaluationDescription": {
            "description": "The long description of the Evaluation.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTypeDescriptor": {
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "interRaterReliabilityScore": {
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "type": "integer",
            "x-nullable": true
          },
          "maxRating": {
            "description": "The maximum summary numerical rating or score for the evaluation.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "minRating": {
            "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "performanceEvaluationReference": {
            "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingLevels": {
            "items": {
              "$ref": "#/components/schemas/TPDM_Evaluation_EvaluationRatingLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "performanceEvaluationReference",
          "evaluationTitle"
        ],
        "type": "object"
      },
      "TPDM_Evaluation_EvaluationRatingLevel": {
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          },
          "maxRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object"
      },
      "TPDM_Evaluation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor"
        ],
        "type": "object"
      },
      "TPDM_FinancialAid": {
        "description": "This entity represents the financial aid a person is awarded.",
        "properties": {
          "aidAmount": {
            "description": "The amount of financial aid awarded to a person for the term/year.",
            "format": "double",
            "type": "number",
            "x-nullable": true
          },
          "aidConditionDescription": {
            "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "aidTypeDescriptor": {
            "description": "The classification of financial aid awarded to a person for the academic term/year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "description": "The date the award was removed.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "pellGrantRecipient": {
            "description": "Indicates a person who receives Pell Grant aid.",
            "type": "boolean",
            "x-nullable": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/EdFi_Student_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "studentReference",
          "beginDate",
          "aidTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_FinancialAid_Reference": {
        "properties": {
          "aidTypeDescriptor": {
            "description": "The classification of financial aid awarded to a person for the academic term/year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "format": "date",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "description": "A unique alphanumeric code assigned to a student.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "aidTypeDescriptor",
          "beginDate",
          "studentUniqueId"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluationRating": {
        "description": "The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.",
        "properties": {
          "actualDate": {
            "description": "The month, day, and year on which the performance evaluation was conducted.",
            "format": "date",
            "type": "string"
          },
          "actualDuration": {
            "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
            "minimum": 1,
            "type": "integer",
            "x-nullable": true
          },
          "actualTime": {
            "description": "An indication of the the time at which the performance evaluation was conducted.",
            "format": "time",
            "type": "string",
            "x-nullable": true
          },
          "announced": {
            "description": "An indicator of whether the performance evaluation was announced or not.",
            "type": "boolean",
            "x-nullable": true
          },
          "comments": {
            "description": "Any comments about the performance evaluation to be captured.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-nullable": true
          },
          "coteachingStyleObservedDescriptor": {
            "description": "A type of co-teaching observed as part of the performance evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "performanceEvaluationRatingLevelDescriptor": {
            "description": "The rating level achieved based upon the rating or score.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "performanceEvaluationReference": {
            "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_PerformanceEvaluationRatingResult"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "reviewers": {
            "items": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_Reviewer"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "scheduleDate": {
            "description": "The month, day, and year on which the performance evaluation was scheduled.",
            "format": "date",
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "personReference",
          "performanceEvaluationReference",
          "actualDate"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluationRating_PerformanceEvaluationRatingResult": {
        "properties": {
          "rating": {
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "type": "number"
          },
          "ratingResultTitle": {
            "description": "The title of Rating Result.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "resultDatatypeTypeDescriptor": {
            "description": "The datatype of the result.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "ratingResultTitle",
          "rating",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluationRating_ReceivedTraining": {
        "properties": {
          "interRaterReliabilityScore": {
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "type": "integer"
          },
          "receivedTrainingDate": {
            "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TPDM_PerformanceEvaluationRating_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluationRating_Reviewer": {
        "properties": {
          "firstName": {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "maxLength": 75,
            "type": "string"
          },
          "lastSurname": {
            "description": "The name borne in common by members of a family.",
            "maxLength": 75,
            "type": "string"
          },
          "receivedTraining": {
            "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating_ReceivedTraining"
          },
          "reviewerPersonReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference"
          }
        },
        "required": [
          "firstName",
          "lastSurname"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluation": {
        "description": "A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.",
        "properties": {
          "academicSubjectDescriptor": {
            "description": "The description of the content or subject area of a performance evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/EdFi_EducationOrganization_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "gradeLevels": {
            "items": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_GradeLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "performanceEvaluationDescription": {
            "description": "The long description of the Performance Evaluation.",
            "maxLength": 255,
            "type": "string",
            "x-nullable": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingLevels": {
            "items": {
              "$ref": "#/components/schemas/TPDM_PerformanceEvaluation_PerformanceEvaluationRatingLevel"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": false
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/EdFi_SchoolYearTypeReference",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "performanceEvaluationTitle",
          "termDescriptor",
          "performanceEvaluationTypeDescriptor",
          "schoolYearTypeReference",
          "evaluationPeriodDescriptor",
          "educationOrganizationReference"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluation_GradeLevel": {
        "properties": {
          "gradeLevelDescriptor": {
            "description": "The grade levels involved with the performance evaluation.",
            "maxLength": 306,
            "type": "string"
          }
        },
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluation_PerformanceEvaluationRatingLevel": {
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "maxLength": 306,
            "type": "string"
          },
          "maxRating": {
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          },
          "minRating": {
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluation_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor"
        ],
        "type": "object"
      },
      "TPDM_RubricDimension": {
        "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.",
        "properties": {
          "criterionDescription": {
            "description": "The criterion description for the rubric dimension.",
            "maxLength": 1024,
            "type": "string"
          },
          "dimensionOrder": {
            "description": "The order for the rubric dimension.",
            "type": "integer",
            "x-nullable": true
          },
          "evaluationElementReference": {
            "$ref": "#/components/schemas/TPDM_EvaluationElement_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "rubricRating": {
            "description": "The rating achieved for the rubric dimension.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "rubricRatingLevelDescriptor": {
            "description": "The rating level achieved for the rubric dimension.",
            "maxLength": 306,
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "evaluationElementReference",
          "rubricRating",
          "criterionDescription"
        ],
        "type": "object"
      },
      "TPDM_RubricDimension_Reference": {
        "properties": {
          "educationOrganizationId": {
            "description": "The identifier assigned to an education organization.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementTitle": {
            "description": "The name or title of the evaluation element.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "description": "The name or title of the evaluation Objective.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "description": "The period for the evaluation.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "description": "The name or title of the evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "description": "An assigned unique identifier for the performance evaluation.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "description": "The type of performance evaluation conducted.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "rubricRating": {
            "description": "The rating achieved for the rubric dimension.",
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "description": "A school year between 1900 and 2100",
            "maximum": 2100,
            "minimum": 1900,
            "type": "integer",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "description": "The term for the session during the school year.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "evaluationElementTitle",
          "evaluationTitle",
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor",
          "evaluationObjectiveTitle",
          "rubricRating"
        ],
        "type": "object"
      },
      "EdFi_SchoolExtension": {
        "type": "object",
        "properties": {
          "tpdm": {
            "$ref": "#/components/schemas/tpdm_EdFi_SchoolExtension"
          }
        }
      },
      "tpdm_EdFi_SchoolExtension": {
        "description": "",
        "properties": {
          "postSecondaryInstitutionReference": {
            "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution_Reference",
            "x-nullable": true
          }
        },
        "type": "object"
      },
      "TPDM_SurveyResponsePersonTargetAssociation": {
        "description": "The association provides information about the survey being taken and who the survey is about.",
        "properties": {
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveyResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveyResponseReference",
          "personReference"
        ],
        "type": "object"
      },
      "TPDM_SurveyResponsePersonTargetAssociation_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "personId",
          "sourceSystemDescriptor",
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier"
        ],
        "type": "object"
      },
      "EdFi_SurveyResponseExtension": {
        "type": "object",
        "properties": {
          "tpdm": {
            "$ref": "#/components/schemas/tpdm_EdFi_SurveyResponseExtension"
          }
        }
      },
      "tpdm_EdFi_SurveyResponseExtension": {
        "description": "",
        "properties": {
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-nullable": true
          }
        },
        "type": "object"
      },
      "TPDM_SurveySectionResponsePersonTargetAssociation": {
        "description": "This association provides information about the survey section and the person the survey section is about.",
        "properties": {
          "personReference": {
            "$ref": "#/components/schemas/EdFi_Person_Reference",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionResponseReference": {
            "$ref": "#/components/schemas/EdFi_SurveySectionResponse_Reference",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "surveySectionResponseReference",
          "personReference"
        ],
        "type": "object"
      },
      "TPDM_SurveySectionResponsePersonTargetAssociation_Reference": {
        "properties": {
          "namespace": {
            "description": "Namespace for the survey.",
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "description": "A unique alphanumeric code assigned to a person.",
            "maxLength": 32,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "description": "This descriptor defines the originating record source system for the person.",
            "maxLength": 306,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "description": "The unique survey identifier from the survey tool.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "description": "The identifier of the survey typically from the survey application.",
            "maxLength": 60,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "description": "The title or label for the survey section.",
            "maxLength": 255,
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          }
        },
        "required": [
          "personId",
          "sourceSystemDescriptor",
          "surveyResponseIdentifier",
          "namespace",
          "surveyIdentifier",
          "surveySectionTitle"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "oauth2_client_credentials": {
        "type": "oauth2",
        "description": "Ed-Fi DMS OAuth 2.0 Client Credentials Grant Type authorization",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "http://localhost:8045/realms/edfi/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "info": {
    "contact": {
      "url": "https://www.ed-fi.org/what-is-ed-fi/contact/"
    },
    "description": "The Ed-Fi DMS API enables applications to read and write education data stored in an Ed-Fi DMS through a secure REST interface. \n***\n \u003E *Note: Consumers of DMS information should sanitize all data for display and storage. DMS provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.* \n***\n",
    "title": "Ed-Fi Data Management Service API",
    "version": "1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/ed-fi/academicWeeks": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAcademicWeeks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The school label for the week.",
            "in": "query",
            "name": "weekIdentifier",
            "schema": {
              "maxLength": 80,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The start date for the academic week.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date for the academic week.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The total instructional days during the academic week.",
            "in": "query",
            "name": "totalInstructionalDays",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AcademicWeek"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "academicWeeks"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAcademicWeek",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AcademicWeek"
              }
            }
          },
          "description": "The JSON representation of the AcademicWeek resource to be created or updated.",
          "required": true,
          "x-bodyName": "AcademicWeek"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "academicWeeks"
        ]
      }
    },
    "/ed-fi/academicWeeks/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAcademicWeeksById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "academicWeeks"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAcademicWeeksById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AcademicWeek"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "academicWeeks"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAcademicWeek",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AcademicWeek"
              }
            }
          },
          "description": "The JSON representation of the AcademicWeek resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "academicWeeks"
        ]
      }
    },
    "/ed-fi/accountabilityRatings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAccountabilityRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The title of the rating.",
            "in": "query",
            "name": "ratingTitle",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "An accountability rating level, designation, or assessment.",
            "in": "query",
            "name": "rating",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "description": "The date the rating was awarded.",
            "in": "query",
            "name": "ratingDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The school year for which the accountability rating is assessed.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The organization that assessed the rating.",
            "in": "query",
            "name": "ratingOrganization",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "description": "The program associated with the accountability rating (e.g., NCLB, AEIS).",
            "in": "query",
            "name": "ratingProgram",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AccountabilityRating"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "accountabilityRatings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAccountabilityRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AccountabilityRating"
              }
            }
          },
          "description": "The JSON representation of the AccountabilityRating resource to be created or updated.",
          "required": true,
          "x-bodyName": "AccountabilityRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "accountabilityRatings"
        ]
      }
    },
    "/ed-fi/accountabilityRatings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAccountabilityRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "accountabilityRatings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAccountabilityRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AccountabilityRating"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "accountabilityRatings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAccountabilityRating",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AccountabilityRating"
              }
            }
          },
          "description": "The JSON representation of the AccountabilityRating resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "accountabilityRatings"
        ]
      }
    },
    "/ed-fi/assessmentAdministrationParticipations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentAdministrationParticipations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentAdministrationParticipation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentAdministrationParticipations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentAdministrationParticipation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentAdministrationParticipation"
              }
            }
          },
          "description": "The JSON representation of the AssessmentAdministrationParticipation resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentAdministrationParticipation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentAdministrationParticipations"
        ]
      }
    },
    "/ed-fi/assessmentAdministrationParticipations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentAdministrationParticipationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentAdministrationParticipations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentAdministrationParticipationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentAdministrationParticipation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentAdministrationParticipations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentAdministrationParticipation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentAdministrationParticipation"
              }
            }
          },
          "description": "The JSON representation of the AssessmentAdministrationParticipation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentAdministrationParticipations"
        ]
      }
    },
    "/ed-fi/assessmentAdministrations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentAdministrations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The title or name of the assessment in the context of its administration.",
            "in": "query",
            "name": "administrationIdentifier",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentAdministration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentAdministrations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentAdministration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentAdministration"
              }
            }
          },
          "description": "The JSON representation of the AssessmentAdministration resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentAdministration"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentAdministrations"
        ]
      }
    },
    "/ed-fi/assessmentAdministrations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentAdministrationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentAdministrations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentAdministrationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentAdministration"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentAdministrations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentAdministration",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentAdministration"
              }
            }
          },
          "description": "The JSON representation of the AssessmentAdministration resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentAdministrations"
        ]
      }
    },
    "/ed-fi/assessmentBatteryParts": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentBatteryParts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the part of an assessment battery.",
            "in": "query",
            "name": "assessmentBatteryPartName",
            "schema": {
              "maxLength": 65,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentBatteryParts"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentBatteryPart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart"
              }
            }
          },
          "description": "The JSON representation of the AssessmentBatteryPart resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentBatteryPart"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentBatteryParts"
        ]
      }
    },
    "/ed-fi/assessmentBatteryParts/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentBatteryPartsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentBatteryParts"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentBatteryPartsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentBatteryParts"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentBatteryPart",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentBatteryPart"
              }
            }
          },
          "description": "The JSON representation of the AssessmentBatteryPart resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentBatteryParts"
        ]
      }
    },
    "/ed-fi/assessmentItems": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "in": "query",
            "name": "identificationCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Category or type of the assessment item.",
            "in": "query",
            "name": "assessmentItemCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "in": "query",
            "name": "maxRawScore",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The text of the item.",
            "in": "query",
            "name": "itemText",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The duration allotted for the assessment item expressed in minutes.",
            "in": "query",
            "name": "expectedTimeAssessed",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "Reflects the specific nomenclature used for assessment item.",
            "in": "query",
            "name": "nomenclature",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "description": "The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.",
            "in": "query",
            "name": "assessmentItemURI",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentItem"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentItems"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentItem"
              }
            }
          },
          "description": "The JSON representation of the AssessmentItem resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentItem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentItems"
        ]
      }
    },
    "/ed-fi/assessmentItems/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentItemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentItems"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentItemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentItem"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentItems"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentItem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentItem"
              }
            }
          },
          "description": "The JSON representation of the AssessmentItem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentItems"
        ]
      }
    },
    "/ed-fi/assessmentScoreRangeLearningStandards": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentScoreRangeLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.",
            "in": "query",
            "name": "scoreRangeId",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).",
            "in": "query",
            "name": "assessmentReportingMethodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The minimum score in the score range.",
            "in": "query",
            "name": "minimumScore",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "description": "The maximum score in the score range.",
            "in": "query",
            "name": "maximumScore",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentScoreRangeLearningStandard"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentScoreRangeLearningStandard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentScoreRangeLearningStandard"
              }
            }
          },
          "description": "The JSON representation of the AssessmentScoreRangeLearningStandard resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentScoreRangeLearningStandard"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ]
      }
    },
    "/ed-fi/assessmentScoreRangeLearningStandards/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentScoreRangeLearningStandardsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentScoreRangeLearningStandardsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentScoreRangeLearningStandard"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentScoreRangeLearningStandard",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentScoreRangeLearningStandard"
              }
            }
          },
          "description": "The JSON representation of the AssessmentScoreRangeLearningStandard resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ]
      }
    },
    "/ed-fi/assessments": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "in": "query",
            "name": "assessmentIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The title or name of the assessment.",
            "in": "query",
            "name": "assessmentTitle",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The category of an assessment based on format and content.",
            "in": "query",
            "name": "assessmentCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The name of the content standard, for example Common Core.",
            "in": "query",
            "name": "title",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The version identifier for the content.",
            "in": "query",
            "name": "version",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "description": "An unambiguous reference to the standards using a network-resolvable URI.",
            "in": "query",
            "name": "uri",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The date on which this content was first published.",
            "in": "query",
            "name": "publicationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The year at which this content was first published.",
            "in": "query",
            "name": "publicationYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
            "in": "query",
            "name": "publicationStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The beginning of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.",
            "in": "query",
            "name": "assessmentForm",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The version identifier for the assessment.",
            "in": "query",
            "name": "assessmentVersion",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The month, day, and year that the conceptual design for the assessment was most recently revised substantially.",
            "in": "query",
            "name": "revisionDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "in": "query",
            "name": "maxRawScore",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Reflects the specific nomenclature used for assessment.",
            "in": "query",
            "name": "nomenclature",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "description": "The assessment family this assessment is a member of.",
            "in": "query",
            "name": "assessmentFamily",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "Namespace for the assessment.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Indicates that the assessment is adaptive.",
            "in": "query",
            "name": "adaptiveAssessment",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Assessment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessments"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Assessment"
              }
            }
          },
          "description": "The JSON representation of the Assessment resource to be created or updated.",
          "required": true,
          "x-bodyName": "Assessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessments"
        ]
      }
    },
    "/ed-fi/assessments/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessments"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Assessment"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessments"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Assessment"
              }
            }
          },
          "description": "The JSON representation of the Assessment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessments"
        ]
      }
    },
    "/ed-fi/balanceSheetDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBalanceSheetDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account balance sheet dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account balance sheet dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_BalanceSheetDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "balanceSheetDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBalanceSheetDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BalanceSheetDimension"
              }
            }
          },
          "description": "The JSON representation of the BalanceSheetDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "BalanceSheetDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "balanceSheetDimensions"
        ]
      }
    },
    "/ed-fi/balanceSheetDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteBalanceSheetDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "balanceSheetDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBalanceSheetDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_BalanceSheetDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "balanceSheetDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBalanceSheetDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BalanceSheetDimension"
              }
            }
          },
          "description": "The JSON representation of the BalanceSheetDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "balanceSheetDimensions"
        ]
      }
    },
    "/ed-fi/bellSchedules": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBellSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name or title of the bell schedule.",
            "in": "query",
            "name": "bellScheduleName",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "An alternate name for the day (e.g., Red, Blue).",
            "in": "query",
            "name": "alternateDayName",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "An indication of the time of day the bell schedule begins.",
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An indication of the time of day the bell schedule ends.",
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The total instructional time in minutes per day for the bell schedule.",
            "in": "query",
            "name": "totalInstructionalTime",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_BellSchedule"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "bellSchedules"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBellSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BellSchedule"
              }
            }
          },
          "description": "The JSON representation of the BellSchedule resource to be created or updated.",
          "required": true,
          "x-bodyName": "BellSchedule"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "bellSchedules"
        ]
      }
    },
    "/ed-fi/bellSchedules/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteBellSchedulesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "bellSchedules"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBellSchedulesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_BellSchedule"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "bellSchedules"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBellSchedule",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BellSchedule"
              }
            }
          },
          "description": "The JSON representation of the BellSchedule resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "bellSchedules"
        ]
      }
    },
    "/ed-fi/calendarDates": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendarDates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year of the calendar event.",
            "in": "query",
            "name": "date",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CalendarDate"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "calendarDates"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendarDate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CalendarDate"
              }
            }
          },
          "description": "The JSON representation of the CalendarDate resource to be created or updated.",
          "required": true,
          "x-bodyName": "CalendarDate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "calendarDates"
        ]
      }
    },
    "/ed-fi/calendarDates/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarDatesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "calendarDates"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarDatesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CalendarDate"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "calendarDates"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendarDate",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CalendarDate"
              }
            }
          },
          "description": "The JSON representation of the CalendarDate resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "calendarDates"
        ]
      }
    },
    "/ed-fi/calendars": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendars",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the calendar.",
            "in": "query",
            "name": "calendarCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Indicates the type of calendar.",
            "in": "query",
            "name": "calendarTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The identifier for the school year associated with the calendar.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Calendar"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "calendars"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Calendar"
              }
            }
          },
          "description": "The JSON representation of the Calendar resource to be created or updated.",
          "required": true,
          "x-bodyName": "Calendar"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "calendars"
        ]
      }
    },
    "/ed-fi/calendars/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "calendars"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Calendar"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "calendars"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendar",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Calendar"
              }
            }
          },
          "description": "The JSON representation of the Calendar resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "calendars"
        ]
      }
    },
    "/ed-fi/chartOfAccounts": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getChartOfAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "in": "query",
            "name": "accountIdentifier",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type of account used in accounting such as revenue, expenditure, or balance sheet.",
            "in": "query",
            "name": "accountTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A descriptive name for the account.",
            "in": "query",
            "name": "accountName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ChartOfAccount"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "chartOfAccounts"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postChartOfAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ChartOfAccount"
              }
            }
          },
          "description": "The JSON representation of the ChartOfAccount resource to be created or updated.",
          "required": true,
          "x-bodyName": "ChartOfAccount"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "chartOfAccounts"
        ]
      }
    },
    "/ed-fi/chartOfAccounts/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteChartOfAccountsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "chartOfAccounts"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getChartOfAccountsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ChartOfAccount"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "chartOfAccounts"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putChartOfAccount",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ChartOfAccount"
              }
            }
          },
          "description": "The JSON representation of the ChartOfAccount resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "chartOfAccounts"
        ]
      }
    },
    "/ed-fi/classPeriods": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getClassPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "in": "query",
            "name": "classPeriodName",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.",
            "in": "query",
            "name": "officialAttendancePeriod",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ClassPeriod"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "classPeriods"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postClassPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ClassPeriod"
              }
            }
          },
          "description": "The JSON representation of the ClassPeriod resource to be created or updated.",
          "required": true,
          "x-bodyName": "ClassPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "classPeriods"
        ]
      }
    },
    "/ed-fi/classPeriods/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteClassPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "classPeriods"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getClassPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ClassPeriod"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "classPeriods"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putClassPeriod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ClassPeriod"
              }
            }
          },
          "description": "The JSON representation of the ClassPeriod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "classPeriods"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/cohorts": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohorts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name or ID for the cohort.",
            "in": "query",
            "name": "cohortIdentifier",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the cohort and its purpose.",
            "in": "query",
            "name": "cohortDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The type of cohort (e.g., academic intervention, classroom breakout).",
            "in": "query",
            "name": "cohortTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The scope of cohort (e.g., school, district, classroom).",
            "in": "query",
            "name": "cohortScopeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The academic subject associated with an academic intervention.",
            "in": "query",
            "name": "academicSubjectDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Cohort"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "cohorts"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohort",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Cohort"
              }
            }
          },
          "description": "The JSON representation of the Cohort resource to be created or updated.",
          "required": true,
          "x-bodyName": "Cohort"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "cohorts"
        ]
      }
    },
    "/ed-fi/cohorts/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "cohorts"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Cohort"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "cohorts"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohort",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Cohort"
              }
            }
          },
          "description": "The JSON representation of the Cohort resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "cohorts"
        ]
      }
    },
    "/ed-fi/communityOrganizations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCommunityOrganizations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier assigned to a community organization. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "communityOrganizationId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CommunityOrganization"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "communityOrganizations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCommunityOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CommunityOrganization"
              }
            }
          },
          "description": "The JSON representation of the CommunityOrganization resource to be created or updated.",
          "required": true,
          "x-bodyName": "CommunityOrganization"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "communityOrganizations"
        ]
      }
    },
    "/ed-fi/communityOrganizations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCommunityOrganizationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "communityOrganizations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCommunityOrganizationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CommunityOrganization"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "communityOrganizations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCommunityOrganization",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CommunityOrganization"
              }
            }
          },
          "description": "The JSON representation of the CommunityOrganization resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "communityOrganizations"
        ]
      }
    },
    "/ed-fi/communityProviderLicenses": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCommunityProviderLicenses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier issued by the licensing organization.",
            "in": "query",
            "name": "licenseIdentifier",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The organization issuing the license.",
            "in": "query",
            "name": "licensingOrganization",
            "schema": {
              "maxLength": 75,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which a license is active or becomes effective.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "licenseEffectiveDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which a license will expire.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "licenseExpirationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which an active license was issued.",
            "in": "query",
            "name": "licenseIssueDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication of the status of the license.",
            "in": "query",
            "name": "licenseStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of the category of the license.",
            "in": "query",
            "name": "licenseTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.",
            "in": "query",
            "name": "authorizedFacilityCapacity",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The oldest age of children a provider is authorized or licensed to serve.",
            "in": "query",
            "name": "oldestAgeAuthorizedToServe",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The youngest age of children a provider is authorized or licensed to serve.",
            "in": "query",
            "name": "youngestAgeAuthorizedToServe",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CommunityProviderLicense"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "communityProviderLicenses"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCommunityProviderLicense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CommunityProviderLicense"
              }
            }
          },
          "description": "The JSON representation of the CommunityProviderLicense resource to be created or updated.",
          "required": true,
          "x-bodyName": "CommunityProviderLicense"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "communityProviderLicenses"
        ]
      }
    },
    "/ed-fi/communityProviderLicenses/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCommunityProviderLicensesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "communityProviderLicenses"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCommunityProviderLicensesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CommunityProviderLicense"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "communityProviderLicenses"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCommunityProviderLicense",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CommunityProviderLicense"
              }
            }
          },
          "description": "The JSON representation of the CommunityProviderLicense resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "communityProviderLicenses"
        ]
      }
    },
    "/ed-fi/communityProviders": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCommunityProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier assigned to a community provider. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "communityProviderId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Indicates the profitability status of the provider.",
            "in": "query",
            "name": "providerProfitabilityDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates the status of the provider.",
            "in": "query",
            "name": "providerStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates the category of the provider.",
            "in": "query",
            "name": "providerCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether the community provider is a school.",
            "in": "query",
            "name": "schoolIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication of whether the provider is exempt from having a license.",
            "in": "query",
            "name": "licenseExemptIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CommunityProvider"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "communityProviders"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCommunityProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CommunityProvider"
              }
            }
          },
          "description": "The JSON representation of the CommunityProvider resource to be created or updated.",
          "required": true,
          "x-bodyName": "CommunityProvider"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "communityProviders"
        ]
      }
    },
    "/ed-fi/communityProviders/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCommunityProvidersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "communityProviders"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCommunityProvidersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CommunityProvider"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "communityProviders"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCommunityProvider",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CommunityProvider"
              }
            }
          },
          "description": "The JSON representation of the CommunityProvider resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "communityProviders"
        ]
      }
    },
    "/ed-fi/competencyObjectives": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Identifier for the competency objective.",
            "in": "query",
            "name": "competencyObjectiveId",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The designated title of the competency objective.",
            "in": "query",
            "name": "objective",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the student competency objective.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The grade level for which the competency objective is targeted.",
            "in": "query",
            "name": "objectiveGradeLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.",
            "in": "query",
            "name": "successCriteria",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CompetencyObjective"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "competencyObjectives"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCompetencyObjective",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CompetencyObjective"
              }
            }
          },
          "description": "The JSON representation of the CompetencyObjective resource to be created or updated.",
          "required": true,
          "x-bodyName": "CompetencyObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "competencyObjectives"
        ]
      }
    },
    "/ed-fi/competencyObjectives/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCompetencyObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "competencyObjectives"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCompetencyObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CompetencyObjective"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "competencyObjectives"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCompetencyObjective",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CompetencyObjective"
              }
            }
          },
          "description": "The JSON representation of the CompetencyObjective resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "competencyObjectives"
        ]
      }
    },
    "/ed-fi/contacts": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique alphanumeric code assigned to a contact.",
            "in": "query",
            "name": "contactUniqueId",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "in": "query",
            "name": "personalTitlePrefix",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "in": "query",
            "name": "firstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "in": "query",
            "name": "middleName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The name borne in common by members of a family.",
            "in": "query",
            "name": "lastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "in": "query",
            "name": "generationCodeSuffix",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "description": "The individual\u0027s maiden name.",
            "in": "query",
            "name": "maidenName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The first name the individual prefers, if different from their legal first name",
            "in": "query",
            "name": "preferredFirstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The last name the individual prefers, if different from their legal last name",
            "in": "query",
            "name": "preferredLastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A person\u0027s birth sex.",
            "in": "query",
            "name": "sexDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The gender the contact identifies themselves as.",
            "in": "query",
            "name": "genderIdentity",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The login ID for the user; used for security access control interface.",
            "in": "query",
            "name": "loginId",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "in": "query",
            "name": "highestCompletedLevelOfEducationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Contact"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "contacts"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Contact"
              }
            }
          },
          "description": "The JSON representation of the Contact resource to be created or updated.",
          "required": true,
          "x-bodyName": "Contact"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "contacts"
        ]
      }
    },
    "/ed-fi/contacts/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteContactsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "contacts"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContactsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Contact"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "contacts"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContact",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Contact"
              }
            }
          },
          "description": "The JSON representation of the Contact resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "contacts"
        ]
      }
    },
    "/ed-fi/courseOfferings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseOfferings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "in": "query",
            "name": "localCourseCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The descriptive name given to a course of study offered in the school, if different from the course title.",
            "in": "query",
            "name": "localCourseTitle",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.",
            "in": "query",
            "name": "instructionalTimePlanned",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseOffering"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseOfferings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseOffering",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseOffering"
              }
            }
          },
          "description": "The JSON representation of the CourseOffering resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseOffering"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseOfferings"
        ]
      }
    },
    "/ed-fi/courseOfferings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseOfferingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseOfferings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseOfferingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseOffering"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseOfferings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseOffering",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseOffering"
              }
            }
          },
          "description": "The JSON representation of the CourseOffering resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseOfferings"
        ]
      }
    },
    "/ed-fi/courseTranscripts": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseTranscripts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The result from the student\u0027s attempt to take the course.",
            "in": "query",
            "name": "courseAttemptResultDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "attemptedCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "attemptedCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "attemptedCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "earnedCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "earnedCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "earnedCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Student\u0027s grade level at time of course.",
            "in": "query",
            "name": "whenTakenGradeLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The method the credits were earned.",
            "in": "query",
            "name": "methodCreditEarnedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "in": "query",
            "name": "finalLetterGradeEarned",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "in": "query",
            "name": "finalNumericGradeEarned",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student\u0027s academic grade average.",
            "in": "query",
            "name": "courseRepeatCodeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).",
            "in": "query",
            "name": "courseTitle",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The descriptive name given to a course of study offered in the school, if different from the CourseTitle.",
            "in": "query",
            "name": "alternativeCourseTitle",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.",
            "in": "query",
            "name": "externalEducationOrganizationNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The organization code or name assigning the course identification code.",
            "in": "query",
            "name": "assigningOrganizationIdentificationCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The URL for the course catalog that defines the course identification code.",
            "in": "query",
            "name": "courseCatalogURL",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseTranscript"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseTranscripts"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseTranscript",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseTranscript"
              }
            }
          },
          "description": "The JSON representation of the CourseTranscript resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseTranscript"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseTranscripts"
        ]
      }
    },
    "/ed-fi/courseTranscripts/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseTranscriptsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseTranscripts"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseTranscriptsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseTranscript"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseTranscripts"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseTranscript",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseTranscript"
              }
            }
          },
          "description": "The JSON representation of the CourseTranscript resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseTranscripts"
        ]
      }
    },
    "/ed-fi/courses": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique alphanumeric code assigned to a course.",
            "in": "query",
            "name": "courseCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).",
            "in": "query",
            "name": "courseTitle",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The number of parts identified for a course.",
            "in": "query",
            "name": "numberOfParts",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.",
            "in": "query",
            "name": "courseDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.",
            "in": "query",
            "name": "timeRequiredForCompletion",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Date the course was adopted by the education agency.",
            "in": "query",
            "name": "dateCourseAdopted",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication that this course may satisfy high school graduation requirements in the course\u0027s subject area.",
            "in": "query",
            "name": "highSchoolCourseRequirement",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indicator of whether or not the course being described is included in the computation of the student\u0027s grade point average, and if so, if it is weighted differently from regular courses.",
            "in": "query",
            "name": "courseGPAApplicabilityDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the course was defined by the SEA, LEA, School, or national organization.",
            "in": "query",
            "name": "courseDefinedByDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "minimumAvailableCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "minimumAvailableCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "minimumAvailableCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "maximumAvailableCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "maximumAvailableCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "maximumAvailableCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.",
            "in": "query",
            "name": "careerPathwayDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Designates how many times the course may be taken with credit received by the student.",
            "in": "query",
            "name": "maxCompletionsForCredit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Course"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courses"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Course"
              }
            }
          },
          "description": "The JSON representation of the Course resource to be created or updated.",
          "required": true,
          "x-bodyName": "Course"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courses"
        ]
      }
    },
    "/ed-fi/courses/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCoursesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courses"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCoursesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Course"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courses"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourse",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Course"
              }
            }
          },
          "description": "The JSON representation of the Course resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courses"
        ]
      }
    },
    "/ed-fi/credentials": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The year, month and day on which an active credential held by an individual was issued.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "effectiveDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which an active credential held by an individual will expire.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "expirationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The field of certification for the certificate (e.g., Mathematics, Music).",
            "in": "query",
            "name": "credentialFieldDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Identifier or serial number assigned to the credential.",
            "in": "query",
            "name": "credentialIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which an active credential was issued to an individual.",
            "in": "query",
            "name": "issuanceDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication of the category of credential an individual holds.",
            "in": "query",
            "name": "credentialTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "in": "query",
            "name": "stateOfIssueStateAbbreviationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "An indication of the category of a legal document giving authorization to perform teaching assignment services.",
            "in": "query",
            "name": "teachingCredentialDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of the pre-determined criteria for granting the teaching credential that an individual holds.",
            "in": "query",
            "name": "teachingCredentialBasisDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Namespace for the credential.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Credential"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "credentials"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Credential"
              }
            }
          },
          "description": "The JSON representation of the Credential resource to be created or updated.",
          "required": true,
          "x-bodyName": "Credential"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "credentials"
        ]
      }
    },
    "/ed-fi/credentials/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCredentialsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "credentials"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCredentialsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Credential"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "credentials"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCredential",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Credential"
              }
            }
          },
          "description": "The JSON representation of the Credential resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "credentials"
        ]
      }
    },
    "/ed-fi/crisisEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCrisisEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the crisis event that occurred. If there is no generally accepted name for this crisis event, the suggested format: Location \u002B Crisis type \u002B Year.",
            "in": "query",
            "name": "crisisEventName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type or category of crisis.",
            "in": "query",
            "name": "crisisTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Provides a textual description of the crisis event affecting the student. It may include details such as the nature of the crisis (e.g., natural disaster, conflict, medical emergency), its severity, location, and any other relevant information describing the crisis situation.",
            "in": "query",
            "name": "crisisDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The year, month and day on which the crisis affected the student. This date may not be the same as the date the crisis occurred if evacuation orders are implemented in anticipation of a crisis.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "crisisStartDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The date on which the crisis ceased to affect the student. Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "crisisEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CrisisEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "crisisEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCrisisEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CrisisEvent"
              }
            }
          },
          "description": "The JSON representation of the CrisisEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "CrisisEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "crisisEvents"
        ]
      }
    },
    "/ed-fi/crisisEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCrisisEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "crisisEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCrisisEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CrisisEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "crisisEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCrisisEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CrisisEvent"
              }
            }
          },
          "description": "The JSON representation of the CrisisEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "crisisEvents"
        ]
      }
    },
    "/ed-fi/descriptorMappings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDescriptorMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The descriptor value that is being mapped to another value.",
            "in": "query",
            "name": "value",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The namespace of the descriptor value that is being mapped to another value.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The descriptor value to which the from descriptor value is being mapped to.",
            "in": "query",
            "name": "mappedValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The namespace of the descriptor value to which the from descriptor value is mapped to.",
            "in": "query",
            "name": "mappedNamespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DescriptorMapping"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "descriptorMappings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDescriptorMapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DescriptorMapping"
              }
            }
          },
          "description": "The JSON representation of the DescriptorMapping resource to be created or updated.",
          "required": true,
          "x-bodyName": "DescriptorMapping"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "descriptorMappings"
        ]
      }
    },
    "/ed-fi/descriptorMappings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDescriptorMappingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "descriptorMappings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDescriptorMappingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DescriptorMapping"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "descriptorMappings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDescriptorMapping",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DescriptorMapping"
              }
            }
          },
          "description": "The JSON representation of the DescriptorMapping resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "descriptorMappings"
        ]
      }
    },
    "/ed-fi/disciplineActions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineActions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Identifier assigned by the education organization to the discipline action.",
            "in": "query",
            "name": "disciplineActionIdentifier",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The date of the discipline action.",
            "in": "query",
            "name": "disciplineDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The length of time in school days for the discipline action (e.g. removal, detention), if applicable.",
            "in": "query",
            "name": "disciplineActionLength",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicates the actual length in school days of a student\u0027s disciplinary assignment.",
            "in": "query",
            "name": "actualDisciplineActionLength",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicates the reason for the difference, if any, between the official and actual lengths of a student\u0027s disciplinary assignment.",
            "in": "query",
            "name": "disciplineActionLengthDifferenceReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.",
            "in": "query",
            "name": "relatedToZeroTolerancePolicy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student\u0027s Individualized Education Program (IEP) team to determine appropriate placement.",
            "in": "query",
            "name": "iepPlacementMeetingIndicator",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisciplineAction"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disciplineActions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineAction"
              }
            }
          },
          "description": "The JSON representation of the DisciplineAction resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisciplineAction"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disciplineActions"
        ]
      }
    },
    "/ed-fi/disciplineActions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineActionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disciplineActions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineActionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisciplineAction"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disciplineActions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineAction",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineAction"
              }
            }
          },
          "description": "The JSON representation of the DisciplineAction resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disciplineActions"
        ]
      }
    },
    "/ed-fi/disciplineIncidents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "in": "query",
            "name": "incidentIdentifier",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the discipline incident occurred.",
            "in": "query",
            "name": "incidentDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication of the time of day the incident took place.",
            "in": "query",
            "name": "incidentTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Identifies where the discipline incident occurred and whether or not it occurred on school.",
            "in": "query",
            "name": "incidentLocationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The description for an incident.",
            "in": "query",
            "name": "incidentDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., \u0022Counselor\u0022 rather than \u0022Professional Staff\u0022).",
            "in": "query",
            "name": "reporterDescriptionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Identifies the reporter of the discipline incident by name.",
            "in": "query",
            "name": "reporterName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the incident was reported to law enforcement.",
            "in": "query",
            "name": "reportedToLawEnforcement",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The case number assigned to the DisciplineIncident by law enforcement or other organization.",
            "in": "query",
            "name": "caseNumber",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.",
            "in": "query",
            "name": "incidentCost",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisciplineIncident"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disciplineIncidents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineIncident"
              }
            }
          },
          "description": "The JSON representation of the DisciplineIncident resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisciplineIncident"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disciplineIncidents"
        ]
      }
    },
    "/ed-fi/disciplineIncidents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineIncidentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disciplineIncidents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineIncidentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisciplineIncident"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disciplineIncidents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineIncident",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineIncident"
              }
            }
          },
          "description": "The JSON representation of the DisciplineIncident resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disciplineIncidents"
        ]
      }
    },
    "/ed-fi/educationContents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique identifier for the education content.",
            "in": "query",
            "name": "contentIdentifier",
            "schema": {
              "maxLength": 225,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "in": "query",
            "name": "learningResourceMetadataURI",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "A short description or name of the entity.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "An extended written representation of the education content.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation \u0022et al\u0022.",
            "in": "query",
            "name": "additionalAuthorsIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The organization credited with publishing the resource.",
            "in": "query",
            "name": "publisher",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "description": "Approximate or typical time that it takes to work with or through this learning resource for the typical intended target audience expressed in minutes.",
            "in": "query",
            "name": "timeRequired",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.",
            "in": "query",
            "name": "interactivityStyleDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The predominate type or kind characterizing the learning resource.",
            "in": "query",
            "name": "contentClassDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The URL where the owner specifies permissions for using the resource.",
            "in": "query",
            "name": "useRightsURL",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The date on which this content was first published.",
            "in": "query",
            "name": "publicationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The year at which this content was first published.",
            "in": "query",
            "name": "publicationYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The version identifier for the content.",
            "in": "query",
            "name": "version",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "description": "An amount that has to be paid or spent to buy or obtain the education content.",
            "in": "query",
            "name": "cost",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The rate by which the cost applies.",
            "in": "query",
            "name": "costRateDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Namespace for the education content.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationContent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationContents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationContent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationContent"
              }
            }
          },
          "description": "The JSON representation of the EducationContent resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationContent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationContents"
        ]
      }
    },
    "/ed-fi/educationContents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationContentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationContents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationContentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationContent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationContents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationContent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationContent"
              }
            }
          },
          "description": "The JSON representation of the EducationContent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationContents"
        ]
      }
    },
    "/ed-fi/educationOrganizationInterventionPrescriptionAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationInterventionPrescriptionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The begin date of the period during which the intervention prescription is available.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period during which the intervention prescription is available.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationInterventionPrescriptionAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationInterventionPrescriptionAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationInterventionPrescriptionAssociation"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationInterventionPrescriptionAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationInterventionPrescriptionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ]
      }
    },
    "/ed-fi/educationOrganizationInterventionPrescriptionAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationInterventionPrescriptionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationInterventionPrescriptionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationInterventionPrescriptionAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationInterventionPrescriptionAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationInterventionPrescriptionAssociation"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationInterventionPrescriptionAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ]
      }
    },
    "/ed-fi/educationOrganizationNetworkAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationNetworkAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date on which the education organization joined this network.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The date on which the education organization left this network.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationNetworkAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationNetworkAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationNetworkAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationNetworkAssociation"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationNetworkAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationNetworkAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationNetworkAssociations"
        ]
      }
    },
    "/ed-fi/educationOrganizationNetworkAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationNetworkAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationNetworkAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationNetworkAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationNetworkAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationNetworkAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationNetworkAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationNetworkAssociation"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationNetworkAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationNetworkAssociations"
        ]
      }
    },
    "/ed-fi/educationOrganizationNetworks": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationNetworks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier assigned to a network of education organizations. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "educationOrganizationNetworkId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The purpose(s) of the network (e.g., shared services, collective procurement).",
            "in": "query",
            "name": "networkPurposeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationNetwork"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationNetworks"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationNetwork"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationNetwork resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationNetwork"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationNetworks"
        ]
      }
    },
    "/ed-fi/educationOrganizationNetworks/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationNetworksById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationNetworks"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationNetworksById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationNetwork"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationNetworks"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationNetwork",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationNetwork"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationNetwork resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationNetworks"
        ]
      }
    },
    "/ed-fi/educationOrganizationPeerAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationPeerAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationPeerAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationPeerAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationPeerAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationPeerAssociation"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationPeerAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationPeerAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationPeerAssociations"
        ]
      }
    },
    "/ed-fi/educationOrganizationPeerAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationPeerAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationPeerAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationPeerAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationPeerAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationPeerAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationPeerAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationPeerAssociation"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationPeerAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationPeerAssociations"
        ]
      }
    },
    "/ed-fi/educationServiceCenters": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationServiceCenters",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier assigned to an education service center. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "educationServiceCenterId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationServiceCenter"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationServiceCenters"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationServiceCenter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationServiceCenter"
              }
            }
          },
          "description": "The JSON representation of the EducationServiceCenter resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationServiceCenter"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationServiceCenters"
        ]
      }
    },
    "/ed-fi/educationServiceCenters/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationServiceCentersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationServiceCenters"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationServiceCentersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationServiceCenter"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationServiceCenters"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationServiceCenter",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationServiceCenter"
              }
            }
          },
          "description": "The JSON representation of the EducationServiceCenter resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationServiceCenters"
        ]
      }
    },
    "/ed-fi/evaluationRubricDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The numeric rating associated with the evaluation rubric dimension.",
            "in": "query",
            "name": "evaluationRubricRating",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The evaluation criterion description for the evaluation rubric dimension.",
            "in": "query",
            "name": "evaluationCriterionDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The rating level achieved for the evaluation rubric dimension.",
            "in": "query",
            "name": "evaluationRubricRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The sort order of the rubric dimension.",
            "in": "query",
            "name": "rubricDimensionSortOrder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EvaluationRubricDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationRubricDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationRubricDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EvaluationRubricDimension"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRubricDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationRubricDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationRubricDimensions"
        ]
      }
    },
    "/ed-fi/evaluationRubricDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationRubricDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationRubricDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationRubricDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EvaluationRubricDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationRubricDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationRubricDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EvaluationRubricDimension"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRubricDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationRubricDimensions"
        ]
      }
    },
    "/ed-fi/feederSchoolAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFeederSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year of the first day of the feeder school association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year of the last day of the feeder school association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.",
            "in": "query",
            "name": "feederRelationshipDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_FeederSchoolAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "feederSchoolAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFeederSchoolAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FeederSchoolAssociation"
              }
            }
          },
          "description": "The JSON representation of the FeederSchoolAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "FeederSchoolAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "feederSchoolAssociations"
        ]
      }
    },
    "/ed-fi/feederSchoolAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteFeederSchoolAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "feederSchoolAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFeederSchoolAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_FeederSchoolAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "feederSchoolAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFeederSchoolAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FeederSchoolAssociation"
              }
            }
          },
          "description": "The JSON representation of the FeederSchoolAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "feederSchoolAssociations"
        ]
      }
    },
    "/ed-fi/functionDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFunctionDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account function dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account function dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account function dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_FunctionDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "functionDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFunctionDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FunctionDimension"
              }
            }
          },
          "description": "The JSON representation of the FunctionDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "FunctionDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "functionDimensions"
        ]
      }
    },
    "/ed-fi/functionDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteFunctionDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "functionDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFunctionDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_FunctionDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "functionDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFunctionDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FunctionDimension"
              }
            }
          },
          "description": "The JSON representation of the FunctionDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "functionDimensions"
        ]
      }
    },
    "/ed-fi/fundDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFundDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account fund dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account fund dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account fund dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_FundDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "fundDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFundDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FundDimension"
              }
            }
          },
          "description": "The JSON representation of the FundDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "FundDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "fundDimensions"
        ]
      }
    },
    "/ed-fi/fundDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteFundDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "fundDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFundDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_FundDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "fundDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFundDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FundDimension"
              }
            }
          },
          "description": "The JSON representation of the FundDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "fundDimensions"
        ]
      }
    },
    "/ed-fi/gradebookEntries": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "in": "query",
            "name": "gradebookEntryIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Namespace URI for the source of the gradebook entry.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The local identifier assigned to a section.",
            "in": "query",
            "name": "sourceSectionIdentifier",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The date the assignment, homework, or assessment was assigned or executed.",
            "in": "query",
            "name": "dateAssigned",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The name or title of the activity to be recorded in the gradebook entry.",
            "in": "query",
            "name": "title",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "description": "A description of the assignment, homework, or classroom assessment.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The date the assignment, homework, or assessment is due.",
            "in": "query",
            "name": "dueDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The time the assignment, homework, or assessment is due.",
            "in": "query",
            "name": "dueTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the gradebook entry.",
            "in": "query",
            "name": "gradebookEntryTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The maximum number of points  that can be earned for the submission.",
            "in": "query",
            "name": "maxPoints",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradebookEntry"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradebookEntries"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradebookEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradebookEntry"
              }
            }
          },
          "description": "The JSON representation of the GradebookEntry resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradebookEntry"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradebookEntries"
        ]
      }
    },
    "/ed-fi/gradebookEntries/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradebookEntriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradebookEntries"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradebookEntriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradebookEntry"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradebookEntries"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradebookEntry",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradebookEntry"
              }
            }
          },
          "description": "The JSON representation of the GradebookEntry resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradebookEntries"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/grades": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGrades",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "in": "query",
            "name": "letterGradeEarned",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "in": "query",
            "name": "numericGradeEarned",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "in": "query",
            "name": "diagnosticStatement",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "in": "query",
            "name": "gradeTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A conversion of the level to a standard set of performance levels.",
            "in": "query",
            "name": "performanceBaseConversionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indicator that the posted grade is an interim grade for the grading period and not the final grade.",
            "in": "query",
            "name": "currentGradeIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "As-Of date for a grade posted as the current grade.",
            "in": "query",
            "name": "currentGradeAsOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A description of the grade earned by the learner.",
            "in": "query",
            "name": "gradeEarnedDescription",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Grade"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "grades"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGrade",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Grade"
              }
            }
          },
          "description": "The JSON representation of the Grade resource to be created or updated.",
          "required": true,
          "x-bodyName": "Grade"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "grades"
        ]
      }
    },
    "/ed-fi/grades/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "grades"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Grade"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "grades"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGrade",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Grade"
              }
            }
          },
          "description": "The JSON representation of the Grade resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "grades"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/gradingPeriods": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradingPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The state\u0027s name of the period for which grades are reported.",
            "in": "query",
            "name": "gradingPeriodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The school\u0027s descriptive name of the grading period.",
            "in": "query",
            "name": "gradingPeriodName",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The sequential order of this period relative to other periods.",
            "in": "query",
            "name": "periodSequence",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The identifier for the grading period school year.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the first day of the grading period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Month, day, and year of the last day of the grading period.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Total days available for educational instruction during the grading period.",
            "in": "query",
            "name": "totalInstructionalDays",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradingPeriod"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradingPeriods"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradingPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradingPeriod"
              }
            }
          },
          "description": "The JSON representation of the GradingPeriod resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradingPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradingPeriods"
        ]
      }
    },
    "/ed-fi/gradingPeriods/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradingPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradingPeriods"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradingPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradingPeriod"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradingPeriods"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradingPeriod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradingPeriod"
              }
            }
          },
          "description": "The JSON representation of the GradingPeriod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradingPeriods"
        ]
      }
    },
    "/ed-fi/graduationPlans": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGraduationPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of academic plan the student is following for graduation.",
            "in": "query",
            "name": "graduationPlanTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "An indicator of whether the graduation plan is tailored for an individual.",
            "in": "query",
            "name": "individualPlan",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "totalRequiredCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "totalRequiredCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "totalRequiredCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The school year the student is expected to graduate.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GraduationPlan"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "graduationPlans"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGraduationPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GraduationPlan"
              }
            }
          },
          "description": "The JSON representation of the GraduationPlan resource to be created or updated.",
          "required": true,
          "x-bodyName": "GraduationPlan"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "graduationPlans"
        ]
      }
    },
    "/ed-fi/graduationPlans/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGraduationPlansById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "graduationPlans"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGraduationPlansById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GraduationPlan"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "graduationPlans"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGraduationPlan",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GraduationPlan"
              }
            }
          },
          "description": "The JSON representation of the GraduationPlan resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "graduationPlans"
        ]
      }
    },
    "/ed-fi/interventionPrescriptions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionPrescriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "in": "query",
            "name": "interventionClassDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
            "in": "query",
            "name": "deliveryMethodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "in": "query",
            "name": "interventionPrescriptionIdentificationCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The minimum duration of time in minutes that is recommended for the intervention.",
            "in": "query",
            "name": "minDosage",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum duration of time in minutes that is recommended for the intervention.",
            "in": "query",
            "name": "maxDosage",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Namespace for the intervention.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InterventionPrescription"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "interventionPrescriptions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionPrescription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionPrescription"
              }
            }
          },
          "description": "The JSON representation of the InterventionPrescription resource to be created or updated.",
          "required": true,
          "x-bodyName": "InterventionPrescription"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "interventionPrescriptions"
        ]
      }
    },
    "/ed-fi/interventionPrescriptions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionPrescriptionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "interventionPrescriptions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionPrescriptionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InterventionPrescription"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "interventionPrescriptions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionPrescription",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionPrescription"
              }
            }
          },
          "description": "The JSON representation of the InterventionPrescription resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "interventionPrescriptions"
        ]
      }
    },
    "/ed-fi/interventionStudies": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of participants observed in the study.",
            "in": "query",
            "name": "participants",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
            "in": "query",
            "name": "deliveryMethodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "in": "query",
            "name": "interventionClassDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to an intervention study.",
            "in": "query",
            "name": "interventionStudyIdentificationCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InterventionStudy"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "interventionStudies"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionStudy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionStudy"
              }
            }
          },
          "description": "The JSON representation of the InterventionStudy resource to be created or updated.",
          "required": true,
          "x-bodyName": "InterventionStudy"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "interventionStudies"
        ]
      }
    },
    "/ed-fi/interventionStudies/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionStudiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "interventionStudies"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionStudiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InterventionStudy"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "interventionStudies"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionStudy",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionStudy"
              }
            }
          },
          "description": "The JSON representation of the InterventionStudy resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "interventionStudies"
        ]
      }
    },
    "/ed-fi/interventions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "in": "query",
            "name": "interventionClassDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The way in which an intervention was implemented.",
            "in": "query",
            "name": "deliveryMethodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The start date for the intervention implementation.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date for the intervention implementation.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "in": "query",
            "name": "interventionIdentificationCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The minimum duration of time in minutes that may be assigned for the intervention.",
            "in": "query",
            "name": "minDosage",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum duration of time in minutes that may be assigned for the intervention.",
            "in": "query",
            "name": "maxDosage",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Namespace for the intervention.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Intervention"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "interventions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIntervention",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Intervention"
              }
            }
          },
          "description": "The JSON representation of the Intervention resource to be created or updated.",
          "required": true,
          "x-bodyName": "Intervention"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "interventions"
        ]
      }
    },
    "/ed-fi/interventions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "interventions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Intervention"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "interventions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIntervention",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Intervention"
              }
            }
          },
          "description": "The JSON representation of the Intervention resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "interventions"
        ]
      }
    },
    "/ed-fi/learningStandardEquivalenceAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardEquivalenceAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace of the organization that has created and owns the association.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The date that the association is considered to be applicable or effective.",
            "in": "query",
            "name": "effectiveDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A measure that indicates the strength or quality of the equivalence relationship.",
            "in": "query",
            "name": "learningStandardEquivalenceStrengthDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Captures supplemental information on the relationship. Recommended for use only when the match is partial.",
            "in": "query",
            "name": "learningStandardEquivalenceStrengthDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "learningStandardEquivalenceAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardEquivalenceAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceAssociation"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardEquivalenceAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "LearningStandardEquivalenceAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "learningStandardEquivalenceAssociations"
        ]
      }
    },
    "/ed-fi/learningStandardEquivalenceAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardEquivalenceAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "learningStandardEquivalenceAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardEquivalenceAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "learningStandardEquivalenceAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardEquivalenceAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceAssociation"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardEquivalenceAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "learningStandardEquivalenceAssociations"
        ]
      }
    },
    "/ed-fi/learningStandards": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The text of the statement. The textual content that either describes a specific competency such as \u0022Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions.\u0022 or describes a less granular group of competencies within the taxonomy of the standards document, e.g. \u0022Understand and apply the Pythagorean Theorem,\u0022 or \u0022Geometry\u0022.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).",
            "in": "query",
            "name": "learningStandardItemCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The name of the content standard, for example Common Core.",
            "in": "query",
            "name": "title",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The version identifier for the content.",
            "in": "query",
            "name": "version",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "description": "An unambiguous reference to the statement using a network-resolvable URI.",
            "in": "query",
            "name": "uri",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The date on which this content was first published.",
            "in": "query",
            "name": "publicationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The year at which this content was first published.",
            "in": "query",
            "name": "publicationYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
            "in": "query",
            "name": "publicationStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The beginning of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end of the period during which this learning standard document is intended for use.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The official course title with which this learning standard is associated.",
            "in": "query",
            "name": "courseTitle",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.",
            "in": "query",
            "name": "successCriteria",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "description": "The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "An additional classification of the type of a specific learning standard.",
            "in": "query",
            "name": "learningStandardCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.",
            "in": "query",
            "name": "learningStandardScopeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LearningStandard"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "learningStandards"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandard"
              }
            }
          },
          "description": "The JSON representation of the LearningStandard resource to be created or updated.",
          "required": true,
          "x-bodyName": "LearningStandard"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "learningStandards"
        ]
      }
    },
    "/ed-fi/learningStandards/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "learningStandards"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LearningStandard"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "learningStandards"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandard",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandard"
              }
            }
          },
          "description": "The JSON representation of the LearningStandard resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "learningStandards"
        ]
      }
    },
    "/ed-fi/localAccounts": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A descriptive name for the account.",
            "in": "query",
            "name": "accountName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalAccount"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localAccounts"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalAccount"
              }
            }
          },
          "description": "The JSON representation of the LocalAccount resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalAccount"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localAccounts"
        ]
      }
    },
    "/ed-fi/localAccounts/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalAccountsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localAccounts"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalAccountsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalAccount"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localAccounts"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalAccount",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalAccount"
              }
            }
          },
          "description": "The JSON representation of the LocalAccount resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localAccounts"
        ]
      }
    },
    "/ed-fi/localActuals": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalActuals",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date of the reported amount for the account.",
            "in": "query",
            "name": "asOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Current balance for the account.",
            "in": "query",
            "name": "amount",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The accounting period or grouping for which the amount is collected.",
            "in": "query",
            "name": "financialCollectionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalActual"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localActuals"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalActual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalActual"
              }
            }
          },
          "description": "The JSON representation of the LocalActual resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalActual"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localActuals"
        ]
      }
    },
    "/ed-fi/localActuals/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalActualsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localActuals"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalActualsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalActual"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localActuals"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalActual",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalActual"
              }
            }
          },
          "description": "The JSON representation of the LocalActual resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localActuals"
        ]
      }
    },
    "/ed-fi/localBudgets": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalBudgets",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date of the reported amount for the account.",
            "in": "query",
            "name": "asOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Current balance for the account.",
            "in": "query",
            "name": "amount",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The accounting period or grouping for which the amount is collected.",
            "in": "query",
            "name": "financialCollectionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalBudget"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localBudgets"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalBudget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalBudget"
              }
            }
          },
          "description": "The JSON representation of the LocalBudget resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalBudget"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localBudgets"
        ]
      }
    },
    "/ed-fi/localBudgets/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalBudgetsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localBudgets"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalBudgetsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalBudget"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localBudgets"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalBudget",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalBudget"
              }
            }
          },
          "description": "The JSON representation of the LocalBudget resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localBudgets"
        ]
      }
    },
    "/ed-fi/localContractedStaffs": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalContractedStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date of the reported amount for the account.",
            "in": "query",
            "name": "asOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Current balance for the account.",
            "in": "query",
            "name": "amount",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The accounting period or grouping for which the amount is collected.",
            "in": "query",
            "name": "financialCollectionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalContractedStaff"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localContractedStaffs"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalContractedStaff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalContractedStaff"
              }
            }
          },
          "description": "The JSON representation of the LocalContractedStaff resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalContractedStaff"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localContractedStaffs"
        ]
      }
    },
    "/ed-fi/localContractedStaffs/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalContractedStaffsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localContractedStaffs"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalContractedStaffsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalContractedStaff"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localContractedStaffs"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalContractedStaff",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalContractedStaff"
              }
            }
          },
          "description": "The JSON representation of the LocalContractedStaff resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localContractedStaffs"
        ]
      }
    },
    "/ed-fi/localEducationAgencies": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The category of local education agency/district.",
            "in": "query",
            "name": "localEducationAgencyCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "in": "query",
            "name": "charterStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalEducationAgency"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localEducationAgencies"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalEducationAgency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalEducationAgency"
              }
            }
          },
          "description": "The JSON representation of the LocalEducationAgency resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalEducationAgency"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localEducationAgencies"
        ]
      }
    },
    "/ed-fi/localEducationAgencies/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalEducationAgenciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localEducationAgencies"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalEducationAgenciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalEducationAgency"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localEducationAgencies"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalEducationAgency",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalEducationAgency"
              }
            }
          },
          "description": "The JSON representation of the LocalEducationAgency resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localEducationAgencies"
        ]
      }
    },
    "/ed-fi/localEncumbrances": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalEncumbrances",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date of the reported amount for the account.",
            "in": "query",
            "name": "asOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Current balance for the account.",
            "in": "query",
            "name": "amount",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The accounting period or grouping for which the amount is collected.",
            "in": "query",
            "name": "financialCollectionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalEncumbrance"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localEncumbrances"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalEncumbrance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalEncumbrance"
              }
            }
          },
          "description": "The JSON representation of the LocalEncumbrance resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalEncumbrance"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localEncumbrances"
        ]
      }
    },
    "/ed-fi/localEncumbrances/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalEncumbrancesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localEncumbrances"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalEncumbrancesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalEncumbrance"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localEncumbrances"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalEncumbrance",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalEncumbrance"
              }
            }
          },
          "description": "The JSON representation of the LocalEncumbrance resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localEncumbrances"
        ]
      }
    },
    "/ed-fi/localPayrolls": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalPayrolls",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date of the reported amount for the account.",
            "in": "query",
            "name": "asOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Current balance for the account.",
            "in": "query",
            "name": "amount",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The accounting period or grouping for which the amount is collected.",
            "in": "query",
            "name": "financialCollectionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalPayroll"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localPayrolls"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalPayroll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalPayroll"
              }
            }
          },
          "description": "The JSON representation of the LocalPayroll resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalPayroll"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localPayrolls"
        ]
      }
    },
    "/ed-fi/localPayrolls/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalPayrollsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localPayrolls"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalPayrollsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalPayroll"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localPayrolls"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalPayroll",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalPayroll"
              }
            }
          },
          "description": "The JSON representation of the LocalPayroll resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localPayrolls"
        ]
      }
    },
    "/ed-fi/locations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "in": "query",
            "name": "classroomIdentificationCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The most number of seats the class can maintain.",
            "in": "query",
            "name": "maximumNumberOfSeats",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of seats that is most favorable to the class.",
            "in": "query",
            "name": "optimalNumberOfSeats",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Location"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "locations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Location"
              }
            }
          },
          "description": "The JSON representation of the Location resource to be created or updated.",
          "required": true,
          "x-bodyName": "Location"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "locations"
        ]
      }
    },
    "/ed-fi/locations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "locations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Location"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "locations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Location"
              }
            }
          },
          "description": "The JSON representation of the Location resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "locations"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/objectDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getObjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account object dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account object dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account object dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ObjectDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "objectDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postObjectDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ObjectDimension"
              }
            }
          },
          "description": "The JSON representation of the ObjectDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "ObjectDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "objectDimensions"
        ]
      }
    },
    "/ed-fi/objectDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteObjectDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "objectDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getObjectDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ObjectDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "objectDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putObjectDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ObjectDimension"
              }
            }
          },
          "description": "The JSON representation of the ObjectDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "objectDimensions"
        ]
      }
    },
    "/ed-fi/objectiveAssessments": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getObjectiveAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "in": "query",
            "name": "maxRawScore",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The percentage of the assessment that tests this objective.",
            "in": "query",
            "name": "percentOfAssessment",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Reflects the specific nomenclature used for this level of objective assessment.",
            "in": "query",
            "name": "nomenclature",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "description": "The description of the objective assessment (e.g., vocabulary, measurement, or geometry).",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The subject area of the objective assessment.",
            "in": "query",
            "name": "academicSubjectDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ObjectiveAssessment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "objectiveAssessments"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postObjectiveAssessment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ObjectiveAssessment"
              }
            }
          },
          "description": "The JSON representation of the ObjectiveAssessment resource to be created or updated.",
          "required": true,
          "x-bodyName": "ObjectiveAssessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "objectiveAssessments"
        ]
      }
    },
    "/ed-fi/objectiveAssessments/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteObjectiveAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "objectiveAssessments"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getObjectiveAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ObjectiveAssessment"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "objectiveAssessments"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putObjectiveAssessment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ObjectiveAssessment"
              }
            }
          },
          "description": "The JSON representation of the ObjectiveAssessment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "objectiveAssessments"
        ]
      }
    },
    "/ed-fi/openStaffPositions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOpenStaffPositions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Reflects the type of employment or contract desired for the position.",
            "in": "query",
            "name": "employmentStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The titles of employment, official status, or rank of education staff.",
            "in": "query",
            "name": "staffClassificationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The descriptive name of an individual\u0027s position.",
            "in": "query",
            "name": "positionTitle",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "description": "The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.",
            "in": "query",
            "name": "requisitionNumber",
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The name of the program for which the open staff position will be assigned.",
            "in": "query",
            "name": "programAssignmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Date the open staff position was posted.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "datePosted",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The date the posting was removed or filled.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "datePostingRemoved",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indication of whether the OpenStaffPosition was filled or retired without filling.",
            "in": "query",
            "name": "postingResultDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_OpenStaffPosition"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "openStaffPositions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOpenStaffPosition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OpenStaffPosition"
              }
            }
          },
          "description": "The JSON representation of the OpenStaffPosition resource to be created or updated.",
          "required": true,
          "x-bodyName": "OpenStaffPosition"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "openStaffPositions"
        ]
      }
    },
    "/ed-fi/openStaffPositions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteOpenStaffPositionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "openStaffPositions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOpenStaffPositionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_OpenStaffPosition"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "openStaffPositions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOpenStaffPosition",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OpenStaffPosition"
              }
            }
          },
          "description": "The JSON representation of the OpenStaffPosition resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "openStaffPositions"
        ]
      }
    },
    "/ed-fi/operationalUnitDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOperationalUnitDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account operational unit dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account operational unit dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_OperationalUnitDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "operationalUnitDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOperationalUnitDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OperationalUnitDimension"
              }
            }
          },
          "description": "The JSON representation of the OperationalUnitDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "OperationalUnitDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "operationalUnitDimensions"
        ]
      }
    },
    "/ed-fi/operationalUnitDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteOperationalUnitDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "operationalUnitDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOperationalUnitDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_OperationalUnitDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "operationalUnitDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOperationalUnitDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OperationalUnitDimension"
              }
            }
          },
          "description": "The JSON representation of the OperationalUnitDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "operationalUnitDimensions"
        ]
      }
    },
    "/ed-fi/organizationDepartments": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOrganizationDepartments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identification code for the organization department. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "organizationDepartmentId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The intended major subject area of the department.",
            "in": "query",
            "name": "academicSubjectDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_OrganizationDepartment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "organizationDepartments"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOrganizationDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OrganizationDepartment"
              }
            }
          },
          "description": "The JSON representation of the OrganizationDepartment resource to be created or updated.",
          "required": true,
          "x-bodyName": "OrganizationDepartment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "organizationDepartments"
        ]
      }
    },
    "/ed-fi/organizationDepartments/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteOrganizationDepartmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "organizationDepartments"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOrganizationDepartmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_OrganizationDepartment"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "organizationDepartments"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOrganizationDepartment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OrganizationDepartment"
              }
            }
          },
          "description": "The JSON representation of the OrganizationDepartment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "organizationDepartments"
        ]
      }
    },
    "/ed-fi/people": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPeople",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique alphanumeric code assigned to a person.",
            "in": "query",
            "name": "personId",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "This descriptor defines the originating record source system for the person.",
            "in": "query",
            "name": "sourceSystemDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Person"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "people"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Person"
              }
            }
          },
          "description": "The JSON representation of the Person resource to be created or updated.",
          "required": true,
          "x-bodyName": "Person"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "people"
        ]
      }
    },
    "/ed-fi/people/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePeopleById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "people"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPeopleById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Person"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "people"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerson",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Person"
              }
            }
          },
          "description": "The JSON representation of the Person resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "people"
        ]
      }
    },
    "/ed-fi/postSecondaryEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date the event occurred or was recorded.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The post secondary event that is logged.",
            "in": "query",
            "name": "postSecondaryEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PostSecondaryEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "postSecondaryEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryEvent"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "PostSecondaryEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "postSecondaryEvents"
        ]
      }
    },
    "/ed-fi/postSecondaryEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "postSecondaryEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PostSecondaryEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "postSecondaryEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryEvent"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "postSecondaryEvents"
        ]
      }
    },
    "/ed-fi/postSecondaryInstitutions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryInstitutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "postSecondaryInstitutionId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A classification of whether a post secondary institution\u0027s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.",
            "in": "query",
            "name": "postSecondaryInstitutionLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).",
            "in": "query",
            "name": "administrativeFundingControlDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "postSecondaryInstitutions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryInstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryInstitution resource to be created or updated.",
          "required": true,
          "x-bodyName": "PostSecondaryInstitution"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "postSecondaryInstitutions"
        ]
      }
    },
    "/ed-fi/postSecondaryInstitutions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryInstitutionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "postSecondaryInstitutions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryInstitutionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "postSecondaryInstitutions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryInstitution",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryInstitution"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryInstitution resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "postSecondaryInstitutions"
        ]
      }
    },
    "/ed-fi/programDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account program dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account program dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account program dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramDimension"
              }
            }
          },
          "description": "The JSON representation of the ProgramDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programDimensions"
        ]
      }
    },
    "/ed-fi/programDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramDimension"
              }
            }
          },
          "description": "The JSON representation of the ProgramDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programDimensions"
        ]
      }
    },
    "/ed-fi/programEvaluationElements": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name or title of the program evaluation element.",
            "in": "query",
            "name": "programEvaluationElementTitle",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The long description of the program evaluation element.",
            "in": "query",
            "name": "programEvaluationElementDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The maximum summary numerical rating or score for the program evaluation element.",
            "in": "query",
            "name": "elementMaxNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The minimum summary numerical rating or score for the program evaluation element. If omitted, assumed to be 0.0.",
            "in": "query",
            "name": "elementMinNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The sort order of this program evaluation element.",
            "in": "query",
            "name": "elementSortOrder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programEvaluationElements"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationElement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationElement resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramEvaluationElement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programEvaluationElements"
        ]
      }
    },
    "/ed-fi/programEvaluationElements/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationElementsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programEvaluationElements"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationElementsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programEvaluationElements"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationElement",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationElement"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationElement resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programEvaluationElements"
        ]
      }
    },
    "/ed-fi/programEvaluationObjectives": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name or title of the program evaluation objective.",
            "in": "query",
            "name": "programEvaluationObjectiveTitle",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The long description of the program evaluation objective.",
            "in": "query",
            "name": "programEvaluationObjectiveDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The maximum summary numerical rating or score for the program evaluation objective.",
            "in": "query",
            "name": "objectiveMaxNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The minimum summary numerical rating or score for the program evaluation objective. If omitted, assumed to be 0.0",
            "in": "query",
            "name": "objectiveMinNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The sort order of this program evaluation objective.",
            "in": "query",
            "name": "objectiveSortOrder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programEvaluationObjectives"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationObjective",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationObjective resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramEvaluationObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programEvaluationObjectives"
        ]
      }
    },
    "/ed-fi/programEvaluationObjectives/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programEvaluationObjectives"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programEvaluationObjectives"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationObjective",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationObjective"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationObjective resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programEvaluationObjectives"
        ]
      }
    },
    "/ed-fi/programEvaluations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An assigned unique identifier for the student program evaluation.",
            "in": "query",
            "name": "programEvaluationTitle",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type of program evaluation conducted.",
            "in": "query",
            "name": "programEvaluationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The name of the period for the program evaluation.",
            "in": "query",
            "name": "programEvaluationPeriodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The long description of the program evaluation.",
            "in": "query",
            "name": "programEvaluationDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The maximum summary numerical rating or score for the program evaluation.",
            "in": "query",
            "name": "evaluationMaxNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The minimum summary numerical rating or score for the program evaluation. If omitted, assumed to be 0.0",
            "in": "query",
            "name": "evaluationMinNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramEvaluation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programEvaluations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluation"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluation resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramEvaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programEvaluations"
        ]
      }
    },
    "/ed-fi/programEvaluations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programEvaluations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramEvaluation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programEvaluations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluation"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programEvaluations"
        ]
      }
    },
    "/ed-fi/programs": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "in": "query",
            "name": "programId",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "in": "query",
            "name": "programName",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type of program.",
            "in": "query",
            "name": "programTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Program"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programs"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgram",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Program"
              }
            }
          },
          "description": "The JSON representation of the Program resource to be created or updated.",
          "required": true,
          "x-bodyName": "Program"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programs"
        ]
      }
    },
    "/ed-fi/programs/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programs"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Program"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programs"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgram",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Program"
              }
            }
          },
          "description": "The JSON representation of the Program resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programs"
        ]
      }
    },
    "/ed-fi/projectDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account project dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account project dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account project dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProjectDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "projectDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProjectDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProjectDimension"
              }
            }
          },
          "description": "The JSON representation of the ProjectDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProjectDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "projectDimensions"
        ]
      }
    },
    "/ed-fi/projectDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProjectDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "projectDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProjectDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProjectDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "projectDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProjectDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProjectDimension"
              }
            }
          },
          "description": "The JSON representation of the ProjectDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "projectDimensions"
        ]
      }
    },
    "/ed-fi/reportCards": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReportCards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of days an individual is absent when school is in session during a given reporting period.",
            "in": "query",
            "name": "numberOfDaysAbsent",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The number of days an individual is present when school is in session during a given reporting period.",
            "in": "query",
            "name": "numberOfDaysInAttendance",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The number of days an individual is tardy during a given reporting period.",
            "in": "query",
            "name": "numberOfDaysTardy",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ReportCard"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "reportCards"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReportCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReportCard"
              }
            }
          },
          "description": "The JSON representation of the ReportCard resource to be created or updated.",
          "required": true,
          "x-bodyName": "ReportCard"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "reportCards"
        ]
      }
    },
    "/ed-fi/reportCards/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteReportCardsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "reportCards"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReportCardsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ReportCard"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "reportCards"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReportCard",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReportCard"
              }
            }
          },
          "description": "The JSON representation of the ReportCard resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "reportCards"
        ]
      }
    },
    "/ed-fi/restraintEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRestraintEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.",
            "in": "query",
            "name": "restraintEventIdentifier",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the restraint event.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The setting where the RestraintEvent was exercised.",
            "in": "query",
            "name": "educationalEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RestraintEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "restraintEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRestraintEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RestraintEvent"
              }
            }
          },
          "description": "The JSON representation of the RestraintEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "RestraintEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "restraintEvents"
        ]
      }
    },
    "/ed-fi/restraintEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRestraintEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "restraintEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRestraintEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RestraintEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "restraintEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRestraintEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RestraintEvent"
              }
            }
          },
          "description": "The JSON representation of the RestraintEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "restraintEvents"
        ]
      }
    },
    "/ed-fi/schoolYearTypes": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolYears",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SchoolYear"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schoolYearTypes"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolYear",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolYear"
              }
            }
          },
          "description": "The JSON representation of the SchoolYear resource to be created or updated.",
          "required": true,
          "x-bodyName": "SchoolYear"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schoolYearTypes"
        ]
      }
    },
    "/ed-fi/schoolYearTypes/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolYearsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schoolYearTypes"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolYearsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SchoolYear"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schoolYearTypes"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolYear",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolYear"
              }
            }
          },
          "description": "The JSON representation of the SchoolYear resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schoolYearTypes"
        ]
      }
    },
    "/ed-fi/schools": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier assigned to a school. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "schoolId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type of education institution as classified by its primary focus.",
            "in": "query",
            "name": "schoolTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "in": "query",
            "name": "charterStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Denotes the Title I Part A designation for the school.",
            "in": "query",
            "name": "titleIPartASchoolDesignationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).",
            "in": "query",
            "name": "magnetSpecialProgramEmphasisSchoolDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The type of education institution as classified by its funding source, for example public or private.",
            "in": "query",
            "name": "administrativeFundingControlDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The type of Internet access available.",
            "in": "query",
            "name": "internetAccessDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The type of agency that approved the establishment or continuation of a charter school.",
            "in": "query",
            "name": "charterApprovalAgencyTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The school year in which a charter school was initially approved.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_School"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schools"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_School"
              }
            }
          },
          "description": "The JSON representation of the School resource to be created or updated.",
          "required": true,
          "x-bodyName": "School"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schools"
        ]
      }
    },
    "/ed-fi/schools/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schools"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_School"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schools"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchool",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_School"
              }
            }
          },
          "description": "The JSON representation of the School resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schools"
        ]
      }
    },
    "/ed-fi/sectionAttendanceTakenEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSectionAttendanceTakenEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date the section attendance taken event was submitted, which could be a different date than the instructional day.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SectionAttendanceTakenEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sectionAttendanceTakenEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSectionAttendanceTakenEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SectionAttendanceTakenEvent"
              }
            }
          },
          "description": "The JSON representation of the SectionAttendanceTakenEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "SectionAttendanceTakenEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sectionAttendanceTakenEvents"
        ]
      }
    },
    "/ed-fi/sectionAttendanceTakenEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionAttendanceTakenEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sectionAttendanceTakenEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionAttendanceTakenEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SectionAttendanceTakenEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sectionAttendanceTakenEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSectionAttendanceTakenEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SectionAttendanceTakenEvent"
              }
            }
          },
          "description": "The JSON representation of the SectionAttendanceTakenEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sectionAttendanceTakenEvents"
        ]
      }
    },
    "/ed-fi/sections": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The local identifier assigned to a section.",
            "in": "query",
            "name": "sectionIdentifier",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Specifies whether the section is for attendance only, credit only, or both.",
            "in": "query",
            "name": "sectionTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.",
            "in": "query",
            "name": "sequenceOfCourse",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The setting in which a student receives education and related services.",
            "in": "query",
            "name": "educationalEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.",
            "in": "query",
            "name": "mediumOfInstructionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The type of students the section is offered and tailored to.",
            "in": "query",
            "name": "populationServedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "availableCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "availableCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "availableCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The primary language of instruction. If omitted, English is assumed.",
            "in": "query",
            "name": "instructionLanguageDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.",
            "in": "query",
            "name": "officialAttendancePeriod",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.",
            "in": "query",
            "name": "sectionName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Section"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sections"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Section"
              }
            }
          },
          "description": "The JSON representation of the Section resource to be created or updated.",
          "required": true,
          "x-bodyName": "Section"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sections"
        ]
      }
    },
    "/ed-fi/sections/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sections"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Section"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sections"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSection",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Section"
              }
            }
          },
          "description": "The JSON representation of the Section resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sections"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/sessions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the calendar for the academic session.",
            "in": "query",
            "name": "sessionName",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The identifier for the school year.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the first day of the session.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Month, day and year of the last day of the session.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A descriptor value to indicate the term that the session is associated with.",
            "in": "query",
            "name": "termDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The total number of instructional days in the school calendar.",
            "in": "query",
            "name": "totalInstructionalDays",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Session"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sessions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Session"
              }
            }
          },
          "description": "The JSON representation of the Session resource to be created or updated.",
          "required": true,
          "x-bodyName": "Session"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sessions"
        ]
      }
    },
    "/ed-fi/sessions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSessionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sessions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSessionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Session"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sessions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSession",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Session"
              }
            }
          },
          "description": "The JSON representation of the Session resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sessions"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/sourceDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSourceDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The code representation of the account source dimension.",
            "in": "query",
            "name": "code",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The fiscal year for which the account source dimension is valid.",
            "in": "query",
            "name": "fiscalYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A description of the account source dimension.",
            "in": "query",
            "name": "codeName",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SourceDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sourceDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSourceDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SourceDimension"
              }
            }
          },
          "description": "The JSON representation of the SourceDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "SourceDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sourceDimensions"
        ]
      }
    },
    "/ed-fi/sourceDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSourceDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sourceDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSourceDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SourceDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sourceDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSourceDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SourceDimension"
              }
            }
          },
          "description": "The JSON representation of the SourceDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sourceDimensions"
        ]
      }
    },
    "/ed-fi/staffAbsenceEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffAbsenceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date for this leave event.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The code describing the type of absence.",
            "in": "query",
            "name": "absenceEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Expanded reason for the staff absence.",
            "in": "query",
            "name": "absenceEventReason",
            "schema": {
              "maxLength": 40,
              "type": "string"
            }
          },
          {
            "description": "The hours the staff was absent, if not the entire working day.",
            "in": "query",
            "name": "hoursAbsent",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffAbsenceEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffAbsenceEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffAbsenceEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffAbsenceEvent"
              }
            }
          },
          "description": "The JSON representation of the StaffAbsenceEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffAbsenceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffAbsenceEvents"
        ]
      }
    },
    "/ed-fi/staffAbsenceEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffAbsenceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffAbsenceEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffAbsenceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffAbsenceEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffAbsenceEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffAbsenceEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffAbsenceEvent"
              }
            }
          },
          "description": "The JSON representation of the StaffAbsenceEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffAbsenceEvents"
        ]
      }
    },
    "/ed-fi/staffCohortAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start date for the association of staff to this cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "End date for the association of staff to this cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "in": "query",
            "name": "studentRecordAccess",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffCohortAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffCohortAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffCohortAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffCohortAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffCohortAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffCohortAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffCohortAssociations"
        ]
      }
    },
    "/ed-fi/staffCohortAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffCohortAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffCohortAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffCohortAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffCohortAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffCohortAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffCohortAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffCohortAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffCohortAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffCohortAssociations"
        ]
      }
    },
    "/ed-fi/staffDisciplineIncidentAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffDisciplineIncidentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffDisciplineIncidentAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffDisciplineIncidentAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffDisciplineIncidentAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffDisciplineIncidentAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffDisciplineIncidentAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffDisciplineIncidentAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffDisciplineIncidentAssociations"
        ]
      }
    },
    "/ed-fi/staffDisciplineIncidentAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffDisciplineIncidentAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffDisciplineIncidentAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffDisciplineIncidentAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffDisciplineIncidentAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffDisciplineIncidentAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffDisciplineIncidentAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffDisciplineIncidentAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffDisciplineIncidentAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffDisciplineIncidentAssociations"
        ]
      }
    },
    "/ed-fi/staffEducationOrganizationAssignmentAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffEducationOrganizationAssignmentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The titles of employment, official status, or rank of education staff.",
            "in": "query",
            "name": "staffClassificationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The descriptive name of an individual\u0027s position.",
            "in": "query",
            "name": "positionTitle",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "description": "Month, day, and year of the start or effective date of a staff member\u0027s employment, contract, or relationship with the education organization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the end or termination date of a staff member\u0027s employment, contract, or relationship with the education organization.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Describes whether the assignment is this the staff member\u0027s primary assignment, secondary assignment, etc.",
            "in": "query",
            "name": "orderOfAssignment",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "in": "query",
            "name": "fullTimeEquivalency",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationAssignmentAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffEducationOrganizationAssignmentAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationAssignmentAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffEducationOrganizationAssignmentAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffEducationOrganizationAssignmentAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ]
      }
    },
    "/ed-fi/staffEducationOrganizationAssignmentAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffEducationOrganizationAssignmentAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffEducationOrganizationAssignmentAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationAssignmentAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffEducationOrganizationAssignmentAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationAssignmentAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffEducationOrganizationAssignmentAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ]
      }
    },
    "/ed-fi/staffEducationOrganizationContactAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffEducationOrganizationContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The street number and street name or post office box number of an address.",
            "in": "query",
            "name": "streetNumberName",
            "schema": {
              "maxLength": 150,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The apartment, room, or suite number of an address.",
            "in": "query",
            "name": "apartmentRoomSuiteNumber",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "in": "query",
            "name": "buildingSiteNumber",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The name of the city in which an address is located.",
            "in": "query",
            "name": "city",
            "schema": {
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "in": "query",
            "name": "stateAbbreviationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "in": "query",
            "name": "postalCode",
            "schema": {
              "maxLength": 17,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.",
            "in": "query",
            "name": "nameOfCounty",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \u0022first-order subdivisions\u0022 of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "in": "query",
            "name": "countyFIPSCode",
            "schema": {
              "maxLength": 5,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "description": "The geographic latitude of the physical address.",
            "in": "query",
            "name": "latitude",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The geographic longitude of the physical address.",
            "in": "query",
            "name": "longitude",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "in": "query",
            "name": "addressTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "An indication that the address should not be published.",
            "in": "query",
            "name": "doNotPublishIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The congressional district in which an address is located.",
            "in": "query",
            "name": "congressionalDistrict",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "in": "query",
            "name": "localeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The title of the contact in the context of the education organization.",
            "in": "query",
            "name": "contactTitle",
            "schema": {
              "maxLength": 75,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Indicates the type for the contact information.",
            "in": "query",
            "name": "contactTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The email for the contact associated with the education organization.",
            "in": "query",
            "name": "electronicMailAddress",
            "schema": {
              "maxLength": 128,
              "minLength": 7,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffEducationOrganizationContactAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffEducationOrganizationContactAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffEducationOrganizationContactAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ]
      }
    },
    "/ed-fi/staffEducationOrganizationContactAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffEducationOrganizationContactAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffEducationOrganizationContactAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffEducationOrganizationContactAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationContactAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffEducationOrganizationContactAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ]
      }
    },
    "/ed-fi/staffEducationOrganizationEmploymentAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffEducationOrganizationEmploymentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Reflects the type of employment or contract.",
            "in": "query",
            "name": "employmentStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which an individual was hired for a position.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "hireDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Type of employment separation.",
            "in": "query",
            "name": "separationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Reason for terminating the employment.",
            "in": "query",
            "name": "separationReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The department or suborganization the employee/contractor is associated with in the education organization.",
            "in": "query",
            "name": "department",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "in": "query",
            "name": "fullTimeEquivalency",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Date at which the staff member was made an official offer for this employment.",
            "in": "query",
            "name": "offerDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Hourly wage associated with the employment position being reported.",
            "in": "query",
            "name": "hourlyWage",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Annual wage associated with the employment position being reported.",
            "in": "query",
            "name": "annualWage",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationEmploymentAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffEducationOrganizationEmploymentAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationEmploymentAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffEducationOrganizationEmploymentAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffEducationOrganizationEmploymentAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ]
      }
    },
    "/ed-fi/staffEducationOrganizationEmploymentAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffEducationOrganizationEmploymentAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffEducationOrganizationEmploymentAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationEmploymentAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffEducationOrganizationEmploymentAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffEducationOrganizationEmploymentAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffEducationOrganizationEmploymentAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ]
      }
    },
    "/ed-fi/staffLeaves": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffLeaves",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The begin date of the staff leave.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The end date of the staff leave.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The code describing the type of leave taken.",
            "in": "query",
            "name": "staffLeaveEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Expanded reason for the staff leave.",
            "in": "query",
            "name": "reason",
            "schema": {
              "maxLength": 40,
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether a substitute was assigned during the period of staff leave.",
            "in": "query",
            "name": "substituteAssigned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffLeave"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffLeaves"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffLeave",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffLeave"
              }
            }
          },
          "description": "The JSON representation of the StaffLeave resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffLeave"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffLeaves"
        ]
      }
    },
    "/ed-fi/staffLeaves/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffLeavesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffLeaves"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffLeavesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffLeave"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffLeaves"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffLeave",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffLeave"
              }
            }
          },
          "description": "The JSON representation of the StaffLeave resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffLeaves"
        ]
      }
    },
    "/ed-fi/staffProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start date for the association of staff to this program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "End date for the association of staff to this program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "in": "query",
            "name": "studentRecordAccess",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffProgramAssociations"
        ]
      }
    },
    "/ed-fi/staffProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffProgramAssociations"
        ]
      }
    },
    "/ed-fi/staffSchoolAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the program for which the individual is assigned.",
            "in": "query",
            "name": "programAssignmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffSchoolAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffSchoolAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffSchoolAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffSchoolAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffSchoolAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffSchoolAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffSchoolAssociations"
        ]
      }
    },
    "/ed-fi/staffSchoolAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffSchoolAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffSchoolAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffSchoolAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffSchoolAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffSchoolAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffSchoolAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffSchoolAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffSchoolAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffSchoolAssociations"
        ]
      }
    },
    "/ed-fi/staffSectionAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of position the staff member holds in the specific class/section.",
            "in": "query",
            "name": "classroomPositionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Month, day, and year of a teacher\u0027s assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the last day of a staff member\u0027s assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.",
            "in": "query",
            "name": "highlyQualifiedTeacher",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "in": "query",
            "name": "teacherStudentDataLinkExclusion",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.",
            "in": "query",
            "name": "percentageContribution",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffSectionAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffSectionAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffSectionAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffSectionAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffSectionAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffSectionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffSectionAssociations"
        ]
      }
    },
    "/ed-fi/staffSectionAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffSectionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffSectionAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffSectionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffSectionAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffSectionAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffSectionAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffSectionAssociation"
              }
            }
          },
          "description": "The JSON representation of the StaffSectionAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffSectionAssociations"
        ]
      }
    },
    "/ed-fi/staffs": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique alphanumeric code assigned to a staff.",
            "in": "query",
            "name": "staffUniqueId",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "in": "query",
            "name": "personalTitlePrefix",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "in": "query",
            "name": "firstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "in": "query",
            "name": "middleName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The name borne in common by members of a family.",
            "in": "query",
            "name": "lastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "in": "query",
            "name": "generationCodeSuffix",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "description": "The individual\u0027s maiden name.",
            "in": "query",
            "name": "maidenName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The first name the individual prefers, if different from their legal first name",
            "in": "query",
            "name": "preferredFirstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The last name the individual prefers, if different from their legal last name",
            "in": "query",
            "name": "preferredLastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The birth sex of the staff member.",
            "in": "query",
            "name": "sexDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The gender the staff member identifies themselves as.",
            "in": "query",
            "name": "genderIdentity",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which an individual was born.",
            "in": "query",
            "name": "birthDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \u0022Spanish origin,\u0022 can be used in addition to \u0022Hispanic or Latino.\u0022",
            "in": "query",
            "name": "hispanicLatinoEthnicity",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "in": "query",
            "name": "citizenshipStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "in": "query",
            "name": "highestCompletedLevelOfEducationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.",
            "in": "query",
            "name": "yearsOfPriorProfessionalExperience",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.",
            "in": "query",
            "name": "yearsOfPriorTeachingExperience",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The login ID for the user; used for security access control interface.",
            "in": "query",
            "name": "loginId",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.",
            "in": "query",
            "name": "highlyQualifiedTeacher",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Staff"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffs"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Staff"
              }
            }
          },
          "description": "The JSON representation of the Staff resource to be created or updated.",
          "required": true,
          "x-bodyName": "Staff"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffs"
        ]
      }
    },
    "/ed-fi/staffs/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffs"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Staff"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffs"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaff",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Staff"
              }
            }
          },
          "description": "The JSON representation of the Staff resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffs"
        ]
      }
    },
    "/ed-fi/stateEducationAgencies": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStateEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier assigned to a state education agency. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.",
            "in": "query",
            "name": "stateEducationAgencyId",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The full, legally accepted name of the institution.",
            "in": "query",
            "name": "nameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A short name for the institution.",
            "in": "query",
            "name": "shortNameOfInstitution",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The public web site address (URL) for the education organization.",
            "in": "query",
            "name": "webSite",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            }
          },
          {
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "in": "query",
            "name": "operationalStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StateEducationAgency"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "stateEducationAgencies"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStateEducationAgency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StateEducationAgency"
              }
            }
          },
          "description": "The JSON representation of the StateEducationAgency resource to be created or updated.",
          "required": true,
          "x-bodyName": "StateEducationAgency"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "stateEducationAgencies"
        ]
      }
    },
    "/ed-fi/stateEducationAgencies/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStateEducationAgenciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "stateEducationAgencies"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStateEducationAgenciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StateEducationAgency"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "stateEducationAgencies"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStateEducationAgency",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StateEducationAgency"
              }
            }
          },
          "description": "The JSON representation of the StateEducationAgency resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "stateEducationAgencies"
        ]
      }
    },
    "/ed-fi/studentAcademicRecords": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAcademicRecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "cumulativeEarnedCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "cumulativeEarnedCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "cumulativeEarnedCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "cumulativeAttemptedCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "cumulativeAttemptedCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "cumulativeAttemptedCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).",
            "in": "query",
            "name": "classRank",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The total number of students in the student\u0027s graduating class.",
            "in": "query",
            "name": "totalNumberInClass",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).",
            "in": "query",
            "name": "percentageRanking",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Date class ranking was determined.",
            "in": "query",
            "name": "classRankingDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month and year the student is projected to graduate.",
            "in": "query",
            "name": "projectedGraduationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "sessionEarnedCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "sessionEarnedCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "sessionEarnedCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "sessionAttemptedCredits",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "in": "query",
            "name": "sessionAttemptedCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "in": "query",
            "name": "sessionAttemptedCreditConversion",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The identifier for the school year.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The term for the session during the school year.",
            "in": "query",
            "name": "termDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentAcademicRecord"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentAcademicRecords"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAcademicRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAcademicRecord"
              }
            }
          },
          "description": "The JSON representation of the StudentAcademicRecord resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentAcademicRecord"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentAcademicRecords"
        ]
      }
    },
    "/ed-fi/studentAcademicRecords/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAcademicRecordsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentAcademicRecords"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAcademicRecordsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentAcademicRecord"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentAcademicRecords"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAcademicRecord",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAcademicRecord"
              }
            }
          },
          "description": "The JSON representation of the StudentAcademicRecord resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentAcademicRecords"
        ]
      }
    },
    "/ed-fi/studentAssessmentEducationOrganizationAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAssessmentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of association being represented.",
            "in": "query",
            "name": "educationOrganizationAssociationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The school year associated with the association..",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentAssessmentEducationOrganizationAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAssessmentEducationOrganizationAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessmentEducationOrganizationAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessmentEducationOrganizationAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentAssessmentEducationOrganizationAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ]
      }
    },
    "/ed-fi/studentAssessmentEducationOrganizationAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAssessmentEducationOrganizationAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAssessmentEducationOrganizationAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentAssessmentEducationOrganizationAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAssessmentEducationOrganizationAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessmentEducationOrganizationAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessmentEducationOrganizationAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ]
      }
    },
    "/ed-fi/studentAssessmentRegistrationBatteryPartAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAssessmentRegistrationBatteryPartAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistrationBatteryPartAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentAssessmentRegistrationBatteryPartAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAssessmentRegistrationBatteryPartAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistrationBatteryPartAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessmentRegistrationBatteryPartAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentAssessmentRegistrationBatteryPartAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentAssessmentRegistrationBatteryPartAssociations"
        ]
      }
    },
    "/ed-fi/studentAssessmentRegistrationBatteryPartAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAssessmentRegistrationBatteryPartAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentAssessmentRegistrationBatteryPartAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAssessmentRegistrationBatteryPartAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistrationBatteryPartAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentAssessmentRegistrationBatteryPartAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAssessmentRegistrationBatteryPartAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistrationBatteryPartAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessmentRegistrationBatteryPartAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentAssessmentRegistrationBatteryPartAssociations"
        ]
      }
    },
    "/ed-fi/studentAssessmentRegistrations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAssessmentRegistrations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The environment or format in which the assessment is expected to be administered.",
            "in": "query",
            "name": "platformTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The grade level or primary instructional level at which the student is to be assessed.",
            "in": "query",
            "name": "assessmentGradeLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentAssessmentRegistrations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAssessmentRegistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessmentRegistration resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentAssessmentRegistration"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentAssessmentRegistrations"
        ]
      }
    },
    "/ed-fi/studentAssessmentRegistrations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAssessmentRegistrationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentAssessmentRegistrations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAssessmentRegistrationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentAssessmentRegistrations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAssessmentRegistration",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessmentRegistration"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessmentRegistration resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentAssessmentRegistrations"
        ]
      }
    },
    "/ed-fi/studentAssessments": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "in": "query",
            "name": "studentAssessmentIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.",
            "in": "query",
            "name": "administrationDate",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date and time an assessment administration ended.",
            "in": "query",
            "name": "administrationEndDate",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The unique number for the assessment form or answer document.",
            "in": "query",
            "name": "serialNumber",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The language in which an assessment is written and/or administered.",
            "in": "query",
            "name": "administrationLanguageDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The environment in which the test was administered.",
            "in": "query",
            "name": "administrationEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicator if the test was a retake.",
            "in": "query",
            "name": "retestIndicatorDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The primary reason student is not tested.",
            "in": "query",
            "name": "reasonNotTestedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The grade level of a student when assessed.",
            "in": "query",
            "name": "whenAssessedGradeLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.",
            "in": "query",
            "name": "eventCircumstanceDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Describes special events that occur before during or after the assessment session that may impact use of results.",
            "in": "query",
            "name": "eventDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The platform with which the assessment was delivered to the student during the assessment session.",
            "in": "query",
            "name": "platformTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).",
            "in": "query",
            "name": "assessmentPeriodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The first date the assessment is to be administered.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The last date the assessment is to be administered.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Reported time student was assessed in minutes.",
            "in": "query",
            "name": "assessedMinutes",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.",
            "in": "query",
            "name": "reportedSchoolIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentAssessment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentAssessments"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAssessment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessment"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessment resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentAssessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentAssessments"
        ]
      }
    },
    "/ed-fi/studentAssessments/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentAssessments"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentAssessment"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentAssessments"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAssessment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentAssessment"
              }
            }
          },
          "description": "The JSON representation of the StudentAssessment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentAssessments"
        ]
      }
    },
    "/ed-fi/studentCTEProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCTEProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.",
            "in": "query",
            "name": "nonTraditionalGenderStatus",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.",
            "in": "query",
            "name": "privateCTEProgram",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Results of technical skills assessment aligned with industry recognized standards.",
            "in": "query",
            "name": "technicalSkillsAssessmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentCTEProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentCTEProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCTEProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCTEProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentCTEProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentCTEProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentCTEProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentCTEProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCTEProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentCTEProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCTEProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentCTEProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentCTEProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCTEProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCTEProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentCTEProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentCTEProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentCohortAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the student was first identified as part of the cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student was removed as part of the cohort.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentCohortAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentCohortAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCohortAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCohortAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentCohortAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentCohortAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentCohortAssociations"
        ]
      }
    },
    "/ed-fi/studentCohortAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCohortAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentCohortAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCohortAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentCohortAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentCohortAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCohortAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCohortAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentCohortAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentCohortAssociations"
        ]
      }
    },
    "/ed-fi/studentCompetencyObjectives": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The competency level assessed for the student for the referenced competency objective.",
            "in": "query",
            "name": "competencyLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "in": "query",
            "name": "diagnosticStatement",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentCompetencyObjectives"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCompetencyObjective",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective"
              }
            }
          },
          "description": "The JSON representation of the StudentCompetencyObjective resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentCompetencyObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentCompetencyObjectives"
        ]
      }
    },
    "/ed-fi/studentCompetencyObjectives/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCompetencyObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentCompetencyObjectives"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCompetencyObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentCompetencyObjectives"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCompetencyObjective",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCompetencyObjective"
              }
            }
          },
          "description": "The JSON representation of the StudentCompetencyObjective resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentCompetencyObjectives"
        ]
      }
    },
    "/ed-fi/studentContactAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The nature of an individual\u0027s relationship to a student, primarily used to capture family relationships.",
            "in": "query",
            "name": "relationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the person is a primary contact for the student.",
            "in": "query",
            "name": "primaryContactStatus",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicator of whether the student lives with the associated contact.",
            "in": "query",
            "name": "livesWith",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicator of whether the person is a designated emergency contact for the student.",
            "in": "query",
            "name": "emergencyContactStatus",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The numeric order of the preferred sequence or priority of contact.",
            "in": "query",
            "name": "contactPriority",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).",
            "in": "query",
            "name": "contactRestrictions",
            "schema": {
              "maxLength": 250,
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the person is a legal guardian for the student.",
            "in": "query",
            "name": "legalGuardian",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentContactAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentContactAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentContactAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentContactAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentContactAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentContactAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentContactAssociations"
        ]
      }
    },
    "/ed-fi/studentContactAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentContactAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentContactAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentContactAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentContactAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentContactAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentContactAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentContactAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentContactAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentContactAssociations"
        ]
      }
    },
    "/ed-fi/studentDisciplineIncidentBehaviorAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentDisciplineIncidentBehaviorAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Describes behavior by category.",
            "in": "query",
            "name": "behaviorDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Specifies a more granular level of detail of a behavior involved in the incident.",
            "in": "query",
            "name": "behaviorDetailedDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentDisciplineIncidentBehaviorAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentDisciplineIncidentBehaviorAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentDisciplineIncidentBehaviorAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ]
      }
    },
    "/ed-fi/studentDisciplineIncidentBehaviorAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentDisciplineIncidentBehaviorAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentDisciplineIncidentBehaviorAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentDisciplineIncidentBehaviorAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentBehaviorAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentDisciplineIncidentBehaviorAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ]
      }
    },
    "/ed-fi/studentDisciplineIncidentNonOffenderAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentDisciplineIncidentNonOffenderAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentNonOffenderAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentDisciplineIncidentNonOffenderAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentNonOffenderAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentDisciplineIncidentNonOffenderAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentDisciplineIncidentNonOffenderAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ]
      }
    },
    "/ed-fi/studentDisciplineIncidentNonOffenderAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentDisciplineIncidentNonOffenderAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentDisciplineIncidentNonOffenderAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentNonOffenderAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentDisciplineIncidentNonOffenderAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentDisciplineIncidentNonOffenderAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentDisciplineIncidentNonOffenderAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ]
      }
    },
    "/ed-fi/studentEducationOrganizationAssessmentAccommodations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentEducationOrganizationAssessmentAccommodations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssessmentAccommodation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentEducationOrganizationAssessmentAccommodations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentEducationOrganizationAssessmentAccommodation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssessmentAccommodation"
              }
            }
          },
          "description": "The JSON representation of the StudentEducationOrganizationAssessmentAccommodation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentEducationOrganizationAssessmentAccommodation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentEducationOrganizationAssessmentAccommodations"
        ]
      }
    },
    "/ed-fi/studentEducationOrganizationAssessmentAccommodations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentEducationOrganizationAssessmentAccommodationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentEducationOrganizationAssessmentAccommodations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentEducationOrganizationAssessmentAccommodationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssessmentAccommodation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentEducationOrganizationAssessmentAccommodations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentEducationOrganizationAssessmentAccommodation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssessmentAccommodation"
              }
            }
          },
          "description": "The JSON representation of the StudentEducationOrganizationAssessmentAccommodation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentEducationOrganizationAssessmentAccommodations"
        ]
      }
    },
    "/ed-fi/studentEducationOrganizationAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The student\u0027s birth sex as reported to the education organization.",
            "in": "query",
            "name": "sexDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The student\u0027s gender as last reported to the education organization.",
            "in": "query",
            "name": "genderIdentity",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "Locator reference for the student photo. The specification for that reference is left to local definition.",
            "in": "query",
            "name": "profileThumbnail",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \u0022Spanish origin,\u0022 can be used in addition to \u0022Hispanic or Latino.\u0022",
            "in": "query",
            "name": "hispanicLatinoEthnicity",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "in": "query",
            "name": "limitedEnglishProficiencyDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The login ID for the user; used for security access control interface.",
            "in": "query",
            "name": "loginId",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "description": "The type of device the student uses most often to complete learning activities away from school.",
            "in": "query",
            "name": "primaryLearningDeviceAwayFromSchoolDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether the primary learning device is shared or not shared with another individual.",
            "in": "query",
            "name": "primaryLearningDeviceAccessDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The provider of the primary learning device.",
            "in": "query",
            "name": "primaryLearningDeviceProviderDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether the student is able to access the internet in their primary place of residence.",
            "in": "query",
            "name": "internetAccessInResidence",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication of the barrier to having internet access in the student\u2019s primary place of residence.",
            "in": "query",
            "name": "barrierToInternetAccessInResidenceDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The primary type of internet service used in the student\u2019s primary place of residence.",
            "in": "query",
            "name": "internetAccessTypeInResidenceDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.",
            "in": "query",
            "name": "internetPerformanceInResidenceDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Military connection of the person/people whom the student is a dependent of.",
            "in": "query",
            "name": "supporterMilitaryConnectionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentEducationOrganizationAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentEducationOrganizationAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentEducationOrganizationAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentEducationOrganizationAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentEducationOrganizationAssociations"
        ]
      }
    },
    "/ed-fi/studentEducationOrganizationAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentEducationOrganizationAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentEducationOrganizationAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentEducationOrganizationAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentEducationOrganizationAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentEducationOrganizationAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentEducationOrganizationAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentEducationOrganizationAssociations"
        ]
      }
    },
    "/ed-fi/studentEducationOrganizationResponsibilityAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentEducationOrganizationResponsibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indications of an education organization\u0027s responsibility for a student, such as accountability, attendance, funding, etc.",
            "in": "query",
            "name": "responsibilityDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the start date of an education organization\u0027s responsibility for a student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the end date of an education organization\u0027s responsibility for a student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationResponsibilityAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentEducationOrganizationResponsibilityAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationResponsibilityAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentEducationOrganizationResponsibilityAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentEducationOrganizationResponsibilityAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ]
      }
    },
    "/ed-fi/studentEducationOrganizationResponsibilityAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentEducationOrganizationResponsibilityAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentEducationOrganizationResponsibilityAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationResponsibilityAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentEducationOrganizationResponsibilityAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentEducationOrganizationResponsibilityAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentEducationOrganizationResponsibilityAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ]
      }
    },
    "/ed-fi/studentGradebookEntries": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The competency level assessed for the student for the referenced learning objective.",
            "in": "query",
            "name": "competencyLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The date an assignment was turned in or the date of an assessment.",
            "in": "query",
            "name": "dateFulfilled",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The time an assignment was turned in on the date fulfilled.",
            "in": "query",
            "name": "timeFulfilled",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "in": "query",
            "name": "diagnosticStatement",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The points earned for the submission. With extra credit, the points earned may exceed the max points.",
            "in": "query",
            "name": "pointsEarned",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "in": "query",
            "name": "letterGradeEarned",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "in": "query",
            "name": "numericGradeEarned",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The status of the student\u0027s submission.",
            "in": "query",
            "name": "submissionStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Status of whether the assignment was submitted after the due date and/or marked as.",
            "in": "query",
            "name": "assignmentLateStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentGradebookEntry"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentGradebookEntries"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentGradebookEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentGradebookEntry"
              }
            }
          },
          "description": "The JSON representation of the StudentGradebookEntry resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentGradebookEntry"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentGradebookEntries"
        ]
      }
    },
    "/ed-fi/studentGradebookEntries/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentGradebookEntriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentGradebookEntries"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentGradebookEntriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentGradebookEntry"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentGradebookEntries"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentGradebookEntry",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentGradebookEntry"
              }
            }
          },
          "description": "The JSON representation of the StudentGradebookEntry resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentGradebookEntries"
        ]
      }
    },
    "/ed-fi/studentHealths": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentHealths",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date of last update of the student\u0027s health record.",
            "in": "query",
            "name": "asOfDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The type of nonmedical exemption from vaccination claimed by the student\u0027s parent or guardian.",
            "in": "query",
            "name": "nonMedicalImmunizationExemptionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The year, month and day of the nonmedical exemption from vaccination claimed by the student\u0027s parent or guardian.",
            "in": "query",
            "name": "nonMedicalImmunizationExemptionDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentHealth"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentHealths"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentHealth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentHealth"
              }
            }
          },
          "description": "The JSON representation of the StudentHealth resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentHealth"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentHealths"
        ]
      }
    },
    "/ed-fi/studentHealths/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentHealthsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentHealths"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentHealthsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentHealth"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentHealths"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentHealth",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentHealth"
              }
            }
          },
          "description": "The JSON representation of the StudentHealth resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentHealths"
        ]
      }
    },
    "/ed-fi/studentHomelessProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentHomelessProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The primary nighttime residence of the student at the time the student is identified as homeless.",
            "in": "query",
            "name": "homelessPrimaryNighttimeResidenceDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "State defined definition for awaiting foster care.",
            "in": "query",
            "name": "awaitingFosterCare",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.",
            "in": "query",
            "name": "homelessUnaccompaniedYouth",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentHomelessProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentHomelessProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentHomelessProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentHomelessProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentHomelessProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentHomelessProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentHomelessProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentHomelessProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentHomelessProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentHomelessProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentHomelessProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentHomelessProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentHomelessProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentHomelessProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentHomelessProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentHomelessProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentHomelessProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentInterventionAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentInterventionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.",
            "in": "query",
            "name": "diagnosticStatement",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The duration of time in minutes for which the student was assigned to participate in the intervention.",
            "in": "query",
            "name": "dosage",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentInterventionAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentInterventionAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentInterventionAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentInterventionAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentInterventionAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentInterventionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentInterventionAssociations"
        ]
      }
    },
    "/ed-fi/studentInterventionAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentInterventionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentInterventionAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentInterventionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentInterventionAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentInterventionAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentInterventionAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentInterventionAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentInterventionAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentInterventionAssociations"
        ]
      }
    },
    "/ed-fi/studentInterventionAttendanceEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentInterventionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date for this attendance event.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "in": "query",
            "name": "attendanceEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The reported reason for a student\u0027s absence.",
            "in": "query",
            "name": "attendanceEventReason",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "in": "query",
            "name": "educationalEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "in": "query",
            "name": "eventDuration",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The duration in minutes of the intervention attendance event.",
            "in": "query",
            "name": "interventionDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentInterventionAttendanceEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentInterventionAttendanceEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentInterventionAttendanceEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentInterventionAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentInterventionAttendanceEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentInterventionAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentInterventionAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentInterventionAttendanceEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentInterventionAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentInterventionAttendanceEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentInterventionAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentInterventionAttendanceEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentInterventionAttendanceEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentInterventionAttendanceEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentInterventionAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentInterventionAttendanceEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentInterventionAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentLanguageInstructionProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentLanguageInstructionProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.",
            "in": "query",
            "name": "englishLearnerParticipation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The duration of time in minutes for which the student was assigned to participate in the program.",
            "in": "query",
            "name": "dosage",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentLanguageInstructionProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentLanguageInstructionProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentLanguageInstructionProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentLanguageInstructionProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentLanguageInstructionProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentLanguageInstructionProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentLanguageInstructionProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentLanguageInstructionProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentLanguageInstructionProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentLanguageInstructionProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentLanguageInstructionProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentLanguageInstructionProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentMigrantEducationProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentMigrantEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Report migratory children who are classified as having \u0022priority for services\u0022 because they are failing, or most at risk of failing to meet the state\u0027s challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.",
            "in": "query",
            "name": "priorityForServices",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Date the last qualifying move occurred; used to compute MEP status.",
            "in": "query",
            "name": "lastQualifyingMove",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The \u0022continuation of services\u0022 provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).",
            "in": "query",
            "name": "continuationOfServicesReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the student first entered the U.S.",
            "in": "query",
            "name": "usInitialEntry",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year of the student\u0027s most recent entry into the U.S.",
            "in": "query",
            "name": "usMostRecentEntry",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the student first entered a U.S. school.",
            "in": "query",
            "name": "usInitialSchoolEntry",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child\u0027s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.",
            "in": "query",
            "name": "qualifyingArrivalDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The verified state residency for the student.",
            "in": "query",
            "name": "stateResidencyDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The eligibility expiration date is used to determine end of eligibility and to account for a child\u0027s eligibility expiring earlier than 36 months from the child\u0027s QAD. A child\u0027s eligibility would end earlier than 36 months from the child\u0027s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states\u0027 requirements), or if the child passes away.",
            "in": "query",
            "name": "eligibilityExpirationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentMigrantEducationProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentMigrantEducationProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentMigrantEducationProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentMigrantEducationProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentMigrantEducationProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentMigrantEducationProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentMigrantEducationProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentMigrantEducationProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentMigrantEducationProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentMigrantEducationProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentMigrantEducationProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentMigrantEducationProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentNeglectedOrDelinquentProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentNeglectedOrDelinquentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).",
            "in": "query",
            "name": "neglectedOrDelinquentProgramDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The progress measured from pre- to post- test for ELA.",
            "in": "query",
            "name": "elaProgressLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The progress measured from pre- to post-test for Mathematics.",
            "in": "query",
            "name": "mathematicsProgressLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentNeglectedOrDelinquentProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentNeglectedOrDelinquentProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentNeglectedOrDelinquentProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentNeglectedOrDelinquentProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentNeglectedOrDelinquentProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentNeglectedOrDelinquentProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentNeglectedOrDelinquentProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentNeglectedOrDelinquentProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentNeglectedOrDelinquentProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentNeglectedOrDelinquentProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentNeglectedOrDelinquentProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentNeglectedOrDelinquentProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentProgramAttendanceEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentProgramAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date for this attendance event.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "in": "query",
            "name": "attendanceEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The reported reason for a student\u0027s absence.",
            "in": "query",
            "name": "attendanceEventReason",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "in": "query",
            "name": "educationalEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "in": "query",
            "name": "eventDuration",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The duration in minutes of the program attendance event.",
            "in": "query",
            "name": "programAttendanceDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentProgramAttendanceEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentProgramAttendanceEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentProgramAttendanceEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentProgramAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentProgramAttendanceEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentProgramAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentProgramAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentProgramAttendanceEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentProgramAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentProgramAttendanceEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentProgramAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentProgramAttendanceEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentProgramAttendanceEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentProgramAttendanceEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentProgramAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentProgramAttendanceEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentProgramAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentProgramEvaluations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the evaluation was conducted.",
            "in": "query",
            "name": "evaluationDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The actual number of minutes to conduct the evaluation.",
            "in": "query",
            "name": "evaluationDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The numerical summary rating or score for the evaluation.",
            "in": "query",
            "name": "summaryEvaluationNumericRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The summary rating level achieved based upon the rating or score.",
            "in": "query",
            "name": "summaryEvaluationRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Any comments about the summary evaluation to be captured.",
            "in": "query",
            "name": "summaryEvaluationComment",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentProgramEvaluations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentProgramEvaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation"
              }
            }
          },
          "description": "The JSON representation of the StudentProgramEvaluation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentProgramEvaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentProgramEvaluations"
        ]
      }
    },
    "/ed-fi/studentProgramEvaluations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentProgramEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentProgramEvaluations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentProgramEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentProgramEvaluations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentProgramEvaluation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentProgramEvaluation"
              }
            }
          },
          "description": "The JSON representation of the StudentProgramEvaluation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentProgramEvaluations"
        ]
      }
    },
    "/ed-fi/studentSchoolAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates if a given enrollment record should be considered the primary record for a student.",
            "in": "query",
            "name": "primarySchool",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The month, day, and year on which an individual enters and begins to receive instructional services in a school for each school year. The EntryDate value should be the date the student enrolled, or when the student\u0027s enrollment materially changed, such as with a grade promotion.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "entryDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.",
            "in": "query",
            "name": "entryGradeLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.",
            "in": "query",
            "name": "entryGradeLevelReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The process by which a student enters a school during a given academic session.",
            "in": "query",
            "name": "entryTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.",
            "in": "query",
            "name": "repeatGradeIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.",
            "in": "query",
            "name": "schoolChoiceTransfer",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The recorded exit or withdraw date for the student.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "exitWithdrawDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The circumstances under which the student exited from membership in an educational institution.",
            "in": "query",
            "name": "exitWithdrawTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.",
            "in": "query",
            "name": "residencyStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.",
            "in": "query",
            "name": "employedWhileEnrolled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The full-time equivalent ratio for the student\u2019s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.",
            "in": "query",
            "name": "fullTimeEquivalency",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Idicates whether or not a student completed the most recent school term.",
            "in": "query",
            "name": "termCompletionIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The anticipated grade level for the student for the next school year.",
            "in": "query",
            "name": "nextYearGradeLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication of whether the student enrolled in this school under the provisions for public school choice",
            "in": "query",
            "name": "schoolChoice",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state",
            "in": "query",
            "name": "schoolChoiceBasisDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The type of enrollment reflected by the StudentSchoolAssociation.",
            "in": "query",
            "name": "enrollmentTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSchoolAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSchoolAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSchoolAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSchoolAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSchoolAssociations"
        ]
      }
    },
    "/ed-fi/studentSchoolAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSchoolAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSchoolAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSchoolAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSchoolAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSchoolAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSchoolAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSchoolAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSchoolAssociations"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/studentSchoolAttendanceEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSchoolAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date for this attendance event.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "in": "query",
            "name": "attendanceEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The reported reason for a student\u0027s absence.",
            "in": "query",
            "name": "attendanceEventReason",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "in": "query",
            "name": "educationalEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "in": "query",
            "name": "eventDuration",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The duration in minutes of the school attendance event.",
            "in": "query",
            "name": "schoolAttendanceDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "in": "query",
            "name": "arrivalTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "in": "query",
            "name": "departureTime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSchoolAttendanceEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSchoolAttendanceEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSchoolAttendanceEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSchoolAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentSchoolAttendanceEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSchoolAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSchoolAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentSchoolAttendanceEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSchoolAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSchoolAttendanceEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSchoolAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSchoolAttendanceEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSchoolAttendanceEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSchoolAttendanceEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSchoolAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentSchoolAttendanceEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSchoolAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentSchoolFoodServiceProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSchoolFoodServiceProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates that the student\u0027s National School Lunch Program (NSLP) eligibility has been determined through direct certification.",
            "in": "query",
            "name": "directCertification",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSchoolFoodServiceProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSchoolFoodServiceProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSchoolFoodServiceProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSchoolFoodServiceProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSchoolFoodServiceProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentSchoolFoodServiceProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSchoolFoodServiceProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSchoolFoodServiceProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSchoolFoodServiceProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSchoolFoodServiceProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSchoolFoodServiceProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSchoolFoodServiceProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentSection504ProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSection504ProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether student has a disability, either temporary or permenant, that qualifies student for Section 504 consideration. Selection of FALSE for this boolean is equivalent to marking student as \u0027Did Not Qualify\u0027.",
            "in": "query",
            "name": "section504Eligibility",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether student has a Section 504 accommodation plan.",
            "in": "query",
            "name": "accommodationPlan",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Defines one or more disabilities student has that qualifies them for a Section 504 plan.",
            "in": "query",
            "name": "section504DisabilityDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the meeting with student\u0027s parent/guardian held to discuss the 504 eligibility of the student.",
            "in": "query",
            "name": "section504MeetingDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the Section 504 eligibility decision is made.",
            "in": "query",
            "name": "section504EligibilityDecisionDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSection504ProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSection504ProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSection504ProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSection504ProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSection504ProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSection504ProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSection504ProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentSection504ProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSection504ProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSection504ProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSection504ProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSection504ProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSection504ProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSection504ProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSection504ProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSection504ProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSection504ProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentSectionAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Month, day, and year of the student\u0027s entry or assignment to the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Month, day, and year of the withdrawal or exit of the student from the section.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicates the section is the student\u0027s homeroom. Homeroom period may the convention for taking daily attendance.",
            "in": "query",
            "name": "homeroomIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication as to whether a student has previously taken a given course.",
            "in": "query",
            "name": "repeatIdentifierDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "in": "query",
            "name": "teacherStudentDataLinkExclusion",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication of the student\u0027s completion status for the section.",
            "in": "query",
            "name": "attemptStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student assigned to the section is to receive dual credit upon successful completion.",
            "in": "query",
            "name": "dualCreditIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "For a student taking a dual credit course in a college or high school setting, indicates the type of dual credit program.",
            "in": "query",
            "name": "dualCreditTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether successful completion of the course will result in credits toward high school graduation.",
            "in": "query",
            "name": "dualHighSchoolCreditIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Descriptor for the postsecondary institution offering college credit. This descriptor may be used to select a postsecondary institution that is not defined as an education organization, and/or select a general type of postsecondary institution.",
            "in": "query",
            "name": "dualCreditInstitutionDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSectionAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSectionAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSectionAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSectionAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSectionAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSectionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSectionAssociations"
        ]
      }
    },
    "/ed-fi/studentSectionAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSectionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSectionAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSectionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSectionAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSectionAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSectionAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSectionAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSectionAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSectionAssociations"
        ],
        "x-Ed-Fi-isUpdatable": true
      }
    },
    "/ed-fi/studentSectionAttendanceEvents": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSectionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date for this attendance event.",
            "in": "query",
            "name": "eventDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A code describing the attendance event, for example:\r\n        Present\r\n        Unexcused absence\r\n        Excused absence\r\n        Tardy.",
            "in": "query",
            "name": "attendanceEventCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The reported reason for a student\u0027s absence.",
            "in": "query",
            "name": "attendanceEventReason",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "in": "query",
            "name": "educationalEnvironmentDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The amount of time in days for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "in": "query",
            "name": "eventDuration",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The duration in minutes of the section attendance event.",
            "in": "query",
            "name": "sectionAttendanceDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "in": "query",
            "name": "arrivalTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "in": "query",
            "name": "departureTime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSectionAttendanceEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSectionAttendanceEvents"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSectionAttendanceEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSectionAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentSectionAttendanceEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSectionAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSectionAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentSectionAttendanceEvents/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSectionAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSectionAttendanceEvents"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSectionAttendanceEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSectionAttendanceEvent"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSectionAttendanceEvents"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSectionAttendanceEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSectionAttendanceEvent"
              }
            }
          },
          "description": "The JSON representation of the StudentSectionAttendanceEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSectionAttendanceEvents"
        ]
      }
    },
    "/ed-fi/studentSpecialEducationProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSpecialEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).",
            "in": "query",
            "name": "ideaEligibility",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The major instructional setting (more than 50 percent of a student\u0027s special education program).",
            "in": "query",
            "name": "specialEducationSettingDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The number of hours per week for special education instruction and therapy.",
            "in": "query",
            "name": "specialEducationHoursPerWeek",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicate the total number of hours of instructional time per week for the school that the student attends.",
            "in": "query",
            "name": "schoolHoursPerWeek",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicator that the student\u0027s IEP requires a shortened school day.",
            "in": "query",
            "name": "shortenedSchoolDayIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Records the number of hours reduced for the shortened school day for the IEP student as compared to peers in regular education.",
            "in": "query",
            "name": "reductionInHoursPerWeekComparedToPeers",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.",
            "in": "query",
            "name": "multiplyDisabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.",
            "in": "query",
            "name": "medicallyFragile",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The date of the last special education evaluation.",
            "in": "query",
            "name": "lastEvaluationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The date of the last IEP review.",
            "in": "query",
            "name": "iepReviewDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The effective date of the most recent IEP.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "iepBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the most recent IEP.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "iepEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The  month, day and year on which a person stops receiving special education services.",
            "in": "query",
            "name": "specialEducationExitDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason why a person stops receiving special education services.",
            "in": "query",
            "name": "specialEducationExitReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Explanation on why a person stops receiving special education services.",
            "in": "query",
            "name": "specialEducationExitExplained",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSpecialEducationProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSpecialEducationProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSpecialEducationProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentSpecialEducationProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSpecialEducationProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSpecialEducationProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSpecialEducationProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSpecialEducationProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentSpecialEducationProgramEligibilityAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSpecialEducationProgramEligibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates the date on which the local education agency received written consent for the evaluation from the student\u0027s parent or guardian. This is the first day of the evaluation timeframe.",
            "in": "query",
            "name": "consentToEvaluationReceivedDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, date, and year when an infant or toddler, from birth through age 2, began participating in the early childhood intervention (ECI) program.",
            "in": "query",
            "name": "originalECIServicesDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicates if the evaluation is done under Part B IDEA or Part C IDEA.",
            "in": "query",
            "name": "ideaPartDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The date on which the student\u0027s parent gave a consent (Parent Consent Date).",
            "in": "query",
            "name": "consentToEvaluationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicates the evaluation completed status.",
            "in": "query",
            "name": "evaluationCompleteIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates the month, day, and year when the written individual evaluation report was completed.",
            "in": "query",
            "name": "eligibilityEvaluationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicates if this is an initial evaluation or a reevaluation.",
            "in": "query",
            "name": "eligibilityEvaluationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe. This descriptor field will have allowed reasons as descriptor values.",
            "in": "query",
            "name": "evaluationDelayReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Refers to additional information for delay in doing the evaluation.",
            "in": "query",
            "name": "evaluationLateReason",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "Indicates the number of student absences, if any, beginning the first instructional day following the date on which the local education agency (LEA) received written parental or guardian consent for the evaluation.",
            "in": "query",
            "name": "evaluationDelayDays",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates the month, day, and year the local education agency (LEA) held the admission, review, and dismissal committee meeting regarding the child\u0027s eligibility determination for special education and related services. An individualized education plan (IEP) would be developed and implemented for a child admitted into special education on this same date.",
            "in": "query",
            "name": "eligibilityDeterminationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicates whether or not the student was determined eligible as a result of an evaluation.",
            "in": "query",
            "name": "ideaIndicator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The reason why the eligibility determination was completed beyond the required timeframe.",
            "in": "query",
            "name": "eligibilityDelayReasonDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates the month, day, and year the LEA Notification of Potentially Eligible for Special Education Services was sent by the early childhood intervention (ECI) contractor to the local education agency (LEA) to notify them that a child enrolled in ECI will shortly reach the age of eligibility for Part B services and the child is potentially eligible for services under Part B, early childhood special education (ECSE). The LEA Notification constitutes a referral to the LEA for an initial evaluation and eligibility determination of the child which the parent or guardian may opt out from the referral.",
            "in": "query",
            "name": "transitionNotificationDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicates the month, day, and year when the transition conference was held (for a child receiving early childhood intervention (ECI) services) among the lead agency, the family, and the local education agency (LEA) where the child resides to discuss the child\u0027s potential eligibility for early childhood special education (ECSE) services.",
            "in": "query",
            "name": "transitionConferenceDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year when the eligibility conference is held between the parent(s)/guardian(s) and the educational organization responsible staff member(s) to review and make decision on special education related services eligibility.",
            "in": "query",
            "name": "eligibilityConferenceDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramEligibilityAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSpecialEducationProgramEligibilityAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramEligibilityAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSpecialEducationProgramEligibilityAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentSpecialEducationProgramEligibilityAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ]
      }
    },
    "/ed-fi/studentSpecialEducationProgramEligibilityAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSpecialEducationProgramEligibilityAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSpecialEducationProgramEligibilityAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramEligibilityAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSpecialEducationProgramEligibilityAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentSpecialEducationProgramEligibilityAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentSpecialEducationProgramEligibilityAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ]
      }
    },
    "/ed-fi/studentTitleIPartAProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentTitleIPartAProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.",
            "in": "query",
            "name": "titleIPartAParticipantDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The reason the student left the program within a school or district.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "in": "query",
            "name": "servedOutsideOfRegularSession",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentTitleIPartAProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentTitleIPartAProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentTitleIPartAProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentTitleIPartAProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentTitleIPartAProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentTitleIPartAProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentTitleIPartAProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentTitleIPartAProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentTitleIPartAProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentTitleIPartAProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentTitleIPartAProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the StudentTitleIPartAProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ]
      }
    },
    "/ed-fi/studentTransportations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentTransportations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The primary type of eligibility for transporting a student at public expense.",
            "in": "query",
            "name": "transportationPublicExpenseEligibilityTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The mode or type of transportation utilized by a student to commute to and from school",
            "in": "query",
            "name": "transportationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Specific requirements needed to accommodate a student\u0027s physical needs which may include special equipment installed in a vehicle or a special arrangement for transportation.",
            "in": "query",
            "name": "specialAccomodationRequirements",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The unique identifier assigned to the bus used for transporting the student.",
            "in": "query",
            "name": "busNumber",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Identifies the specific route taken by a bus for student transportation.",
            "in": "query",
            "name": "busRouteDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The distance, typically measured in miles, that a student was transported along the route of the bus during a single trip.",
            "in": "query",
            "name": "mileage",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentTransportation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentTransportations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentTransportation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentTransportation"
              }
            }
          },
          "description": "The JSON representation of the StudentTransportation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentTransportation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentTransportations"
        ]
      }
    },
    "/ed-fi/studentTransportations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentTransportationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentTransportations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentTransportationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentTransportation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentTransportations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentTransportation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentTransportation"
              }
            }
          },
          "description": "The JSON representation of the StudentTransportation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentTransportations"
        ]
      }
    },
    "/ed-fi/students": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique alphanumeric code assigned to a student.",
            "in": "query",
            "name": "studentUniqueId",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "in": "query",
            "name": "personalTitlePrefix",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "in": "query",
            "name": "firstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "in": "query",
            "name": "middleName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The name borne in common by members of a family.",
            "in": "query",
            "name": "lastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "in": "query",
            "name": "generationCodeSuffix",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "description": "The individual\u0027s maiden name.",
            "in": "query",
            "name": "maidenName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The first name the individual prefers, if different from their legal first name",
            "in": "query",
            "name": "preferredFirstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The last name the individual prefers, if different from their legal last name",
            "in": "query",
            "name": "preferredLastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which an individual was born.",
            "in": "query",
            "name": "birthDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The city the student was born in.",
            "in": "query",
            "name": "birthCity",
            "schema": {
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "in": "query",
            "name": "birthStateAbbreviationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "in": "query",
            "name": "birthInternationalProvince",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "in": "query",
            "name": "birthCountryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "in": "query",
            "name": "dateEnteredUS",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "in": "query",
            "name": "multipleBirthStatus",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A person\u0027s sex at birth.",
            "in": "query",
            "name": "birthSexDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "in": "query",
            "name": "citizenshipStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Student"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "students"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Student"
              }
            }
          },
          "description": "The JSON representation of the Student resource to be created or updated.",
          "required": true,
          "x-bodyName": "Student"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "students"
        ]
      }
    },
    "/ed-fi/students/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "students"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Student"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "students"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Student"
              }
            }
          },
          "description": "The JSON representation of the Student resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "students"
        ]
      }
    },
    "/ed-fi/surveyCourseAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyCourseAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyCourseAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyCourseAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyCourseAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyCourseAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyCourseAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyCourseAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyCourseAssociations"
        ]
      }
    },
    "/ed-fi/surveyCourseAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyCourseAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyCourseAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyCourseAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyCourseAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyCourseAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyCourseAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyCourseAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyCourseAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyCourseAssociations"
        ]
      }
    },
    "/ed-fi/surveyProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyProgramAssociations"
        ]
      }
    },
    "/ed-fi/surveyProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyProgramAssociations"
        ]
      }
    },
    "/ed-fi/surveyQuestionResponses": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyQuestionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates there was no response to the question.",
            "in": "query",
            "name": "noResponse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional information provided by the responder about the question in the survey.",
            "in": "query",
            "name": "comment",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyQuestionResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyQuestionResponses"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyQuestionResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyQuestionResponse"
              }
            }
          },
          "description": "The JSON representation of the SurveyQuestionResponse resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyQuestionResponse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyQuestionResponses"
        ]
      }
    },
    "/ed-fi/surveyQuestionResponses/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyQuestionResponsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyQuestionResponses"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyQuestionResponsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyQuestionResponse"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyQuestionResponses"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyQuestionResponse",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyQuestionResponse"
              }
            }
          },
          "description": "The JSON representation of the SurveyQuestionResponse resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyQuestionResponses"
        ]
      }
    },
    "/ed-fi/surveyQuestions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifying code for the question, unique for the survey.",
            "in": "query",
            "name": "questionCode",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The form or type of question.",
            "in": "query",
            "name": "questionFormDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The text of the question.",
            "in": "query",
            "name": "questionText",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyQuestion"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyQuestions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyQuestion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyQuestion"
              }
            }
          },
          "description": "The JSON representation of the SurveyQuestion resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyQuestion"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyQuestions"
        ]
      }
    },
    "/ed-fi/surveyQuestions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyQuestionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyQuestions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyQuestionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyQuestion"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyQuestions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyQuestion",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyQuestion"
              }
            }
          },
          "description": "The JSON representation of the SurveyQuestion resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyQuestions"
        ]
      }
    },
    "/ed-fi/surveyResponseEducationOrganizationTargetAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyResponseEducationOrganizationTargetAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponseEducationOrganizationTargetAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponseEducationOrganizationTargetAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyResponseEducationOrganizationTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveyResponseEducationOrganizationTargetAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponseEducationOrganizationTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponseEducationOrganizationTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyResponseEducationOrganizationTargetAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponseEducationOrganizationTargetAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponseEducationOrganizationTargetAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveyResponseStaffTargetAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyResponseStaffTargetAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponseStaffTargetAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyResponseStaffTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponseStaffTargetAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyResponseStaffTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveyResponseStaffTargetAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponseStaffTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponseStaffTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyResponseStaffTargetAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponseStaffTargetAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyResponseStaffTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponseStaffTargetAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveyResponses": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of the survey typically from the survey application.",
            "in": "query",
            "name": "surveyResponseIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Date of the survey response.",
            "in": "query",
            "name": "responseDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The amount of time in seconds it took for the respondent to complete the survey.",
            "in": "query",
            "name": "responseTime",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Email address of the respondent.",
            "in": "query",
            "name": "electronicMailAddress",
            "schema": {
              "maxLength": 128,
              "minLength": 7,
              "type": "string"
            }
          },
          {
            "description": "Full name of the respondent.",
            "in": "query",
            "name": "fullName",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "description": "Location of the respondent, often a city, district, or school.",
            "in": "query",
            "name": "location",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyResponses"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyResponse"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponse resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyResponse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyResponses"
        ]
      }
    },
    "/ed-fi/surveyResponses/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyResponses"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyResponse"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyResponses"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponse",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyResponse"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponse resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyResponses"
        ]
      }
    },
    "/ed-fi/surveySectionAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveySectionAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveySectionAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveySectionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveySectionAssociations"
        ]
      }
    },
    "/ed-fi/surveySectionAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveySectionAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveySectionAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveySectionAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveySectionAssociations"
        ]
      }
    },
    "/ed-fi/surveySectionResponseEducationOrganizationTargetAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveySectionResponseEducationOrganizationTargetAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponseEducationOrganizationTargetAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponseEducationOrganizationTargetAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveySectionResponseEducationOrganizationTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveySectionResponseEducationOrganizationTargetAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponseEducationOrganizationTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponseEducationOrganizationTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveySectionResponseEducationOrganizationTargetAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponseEducationOrganizationTargetAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponseEducationOrganizationTargetAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveySectionResponseStaffTargetAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveySectionResponseStaffTargetAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponseStaffTargetAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionResponseStaffTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponseStaffTargetAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveySectionResponseStaffTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveySectionResponseStaffTargetAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponseStaffTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponseStaffTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveySectionResponseStaffTargetAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponseStaffTargetAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionResponseStaffTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponseStaffTargetAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ]
      }
    },
    "/ed-fi/surveySectionResponses": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Numeric rating computed from the survey responses for the section.",
            "in": "query",
            "name": "sectionRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveySectionResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveySectionResponses"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionResponse"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponse resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveySectionResponse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveySectionResponses"
        ]
      }
    },
    "/ed-fi/surveySectionResponses/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveySectionResponses"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveySectionResponse"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveySectionResponses"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponse",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySectionResponse"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponse resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveySectionResponses"
        ]
      }
    },
    "/ed-fi/surveySections": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The title or label for the survey section.",
            "in": "query",
            "name": "surveySectionTitle",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveySection"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveySections"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySection"
              }
            }
          },
          "description": "The JSON representation of the SurveySection resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveySection"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveySections"
        ]
      }
    },
    "/ed-fi/surveySections/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveySections"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveySection"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveySections"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySection",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveySection"
              }
            }
          },
          "description": "The JSON representation of the SurveySection resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveySections"
        ]
      }
    },
    "/ed-fi/surveys": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique survey identifier from the survey tool.",
            "in": "query",
            "name": "surveyIdentifier",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "Namespace for the survey.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "minLength": 5,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The title of the survey.",
            "in": "query",
            "name": "surveyTitle",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The category or type of survey.",
            "in": "query",
            "name": "surveyCategoryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Number of persons to whom this survey was administered.",
            "in": "query",
            "name": "numberAdministered",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Survey"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveys"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurvey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Survey"
              }
            }
          },
          "description": "The JSON representation of the Survey resource to be created or updated.",
          "required": true,
          "x-bodyName": "Survey"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveys"
        ]
      }
    },
    "/ed-fi/surveys/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveysById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveys"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveysById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Survey"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveys"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurvey",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Survey"
              }
            }
          },
          "description": "The JSON representation of the Survey resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveys"
        ]
      }
    },
    "/tpdm/candidateEducatorPreparationProgramAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMCandidateEducatorPreparationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The begin date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The end date for the association.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Reason exited for the association.",
            "in": "query",
            "name": "reasonExitedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
            "in": "query",
            "name": "eppProgramPathwayDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMCandidateEducatorPreparationProgramAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the CandidateEducatorPreparationProgramAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "CandidateEducatorPreparationProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ]
      }
    },
    "/tpdm/candidateEducatorPreparationProgramAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMCandidateEducatorPreparationProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMCandidateEducatorPreparationProgramAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMCandidateEducatorPreparationProgramAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CandidateEducatorPreparationProgramAssociation"
              }
            }
          },
          "description": "The JSON representation of the CandidateEducatorPreparationProgramAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ]
      }
    },
    "/tpdm/candidates": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMCandidates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique alphanumeric code assigned to a candidate.",
            "in": "query",
            "name": "candidateIdentifier",
            "schema": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "in": "query",
            "name": "personalTitlePrefix",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "in": "query",
            "name": "firstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "in": "query",
            "name": "middleName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The name borne in common by members of a family.",
            "in": "query",
            "name": "lastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "An appendage, if any, used to denote an individual\u0027s generation in his family (e.g., Jr., Sr., III).",
            "in": "query",
            "name": "generationCodeSuffix",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "description": "The individual\u0027s maiden name.",
            "in": "query",
            "name": "maidenName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The first name the individual prefers, if different from their legal first name",
            "in": "query",
            "name": "preferredFirstName",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The last name the individual prefers, if different from their legal last name",
            "in": "query",
            "name": "preferredLastSurname",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "description": "The sex of the candidate.",
            "in": "query",
            "name": "sexDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which an individual was born.",
            "in": "query",
            "name": "birthDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The city the student was born in.",
            "in": "query",
            "name": "birthCity",
            "schema": {
              "maxLength": 30,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "in": "query",
            "name": "birthStateAbbreviationDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "in": "query",
            "name": "birthInternationalProvince",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "in": "query",
            "name": "birthCountryDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "in": "query",
            "name": "dateEnteredUS",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "in": "query",
            "name": "multipleBirthStatus",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A person\u0027s sex at birth.",
            "in": "query",
            "name": "birthSexDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \u0022Spanish origin,\u0022 can be used in addition to \u0022Hispanic or Latino.\u0022",
            "in": "query",
            "name": "hispanicLatinoEthnicity",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication of inadequate financial condition of an individual\u0027s family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
            "in": "query",
            "name": "economicDisadvantaged",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "in": "query",
            "name": "limitedEnglishProficiencyDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
            "in": "query",
            "name": "displacementStatus",
            "schema": {
              "maxLength": 30,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "The gender of the candidate.",
            "in": "query",
            "name": "genderDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
            "in": "query",
            "name": "englishLanguageExamDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Indicator of whether individual is a first generation college student.",
            "in": "query",
            "name": "firstGenerationStudent",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_Candidate"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "candidates"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMCandidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_Candidate"
              }
            }
          },
          "description": "The JSON representation of the Candidate resource to be created or updated.",
          "required": true,
          "x-bodyName": "Candidate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "candidates"
        ]
      }
    },
    "/tpdm/candidates/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMCandidatesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "candidates"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMCandidatesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_Candidate"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "candidates"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMCandidate",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_Candidate"
              }
            }
          },
          "description": "The JSON representation of the Candidate resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "candidates"
        ]
      }
    },
    "/tpdm/educatorPreparationPrograms": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEducatorPreparationPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "in": "query",
            "name": "programId",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "description": "The name of the Educator Preparation Program.",
            "in": "query",
            "name": "programName",
            "schema": {
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type of program.",
            "in": "query",
            "name": "programTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The current accreditation status of the Educator Preparation Program.",
            "in": "query",
            "name": "accreditationStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educatorPreparationPrograms"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEducatorPreparationProgram",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
              }
            }
          },
          "description": "The JSON representation of the EducatorPreparationProgram resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducatorPreparationProgram"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educatorPreparationPrograms"
        ]
      }
    },
    "/tpdm/educatorPreparationPrograms/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEducatorPreparationProgramsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educatorPreparationPrograms"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEducatorPreparationProgramsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educatorPreparationPrograms"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEducatorPreparationProgram",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EducatorPreparationProgram"
              }
            }
          },
          "description": "The JSON representation of the EducatorPreparationProgram resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educatorPreparationPrograms"
        ]
      }
    },
    "/tpdm/evaluationElementRatings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationElementRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The rating level achieved based upon the rating or score.",
            "in": "query",
            "name": "evaluationElementRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Area identified for person to refine or improve as part of the evaluation.",
            "in": "query",
            "name": "areaOfRefinement",
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
            "in": "query",
            "name": "areaOfReinforcement",
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "Any comments about the performance evaluation to be captured.",
            "in": "query",
            "name": "comments",
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "Feedback provided to the evaluated person.",
            "in": "query",
            "name": "feedback",
            "schema": {
              "maxLength": 2048,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationElementRatings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationElementRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
              }
            }
          },
          "description": "The JSON representation of the EvaluationElementRating resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationElementRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationElementRatings"
        ]
      }
    },
    "/tpdm/evaluationElementRatings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationElementRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationElementRatings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationElementRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationElementRatings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationElementRating",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationElementRating"
              }
            }
          },
          "description": "The JSON representation of the EvaluationElementRating resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationElementRatings"
        ]
      }
    },
    "/tpdm/evaluationElements": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name or title of the evaluation element.",
            "in": "query",
            "name": "evaluationElementTitle",
            "schema": {
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The sort order of this Evaluation Element.",
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
            "in": "query",
            "name": "minRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The maximum summary numerical rating or score for the evaluation element.",
            "in": "query",
            "name": "maxRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "in": "query",
            "name": "evaluationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElement"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationElements"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationElement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationElement"
              }
            }
          },
          "description": "The JSON representation of the EvaluationElement resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationElement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationElements"
        ]
      }
    },
    "/tpdm/evaluationElements/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationElementsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationElements"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationElementsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationElement"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationElements"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationElement",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationElement"
              }
            }
          },
          "description": "The JSON representation of the EvaluationElement resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationElements"
        ]
      }
    },
    "/tpdm/evaluationObjectiveRatings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationObjectiveRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The rating level achieved based upon the rating or score.",
            "in": "query",
            "name": "objectiveRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Any comments about the performance evaluation to be captured.",
            "in": "query",
            "name": "comments",
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationObjectiveRatings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationObjectiveRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
              }
            }
          },
          "description": "The JSON representation of the EvaluationObjectiveRating resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationObjectiveRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationObjectiveRatings"
        ]
      }
    },
    "/tpdm/evaluationObjectiveRatings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationObjectiveRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationObjectiveRatings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationObjectiveRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationObjectiveRatings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationObjectiveRating",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationObjectiveRating"
              }
            }
          },
          "description": "The JSON representation of the EvaluationObjectiveRating resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationObjectiveRatings"
        ]
      }
    },
    "/tpdm/evaluationObjectives": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name or title of the evaluation Objective.",
            "in": "query",
            "name": "evaluationObjectiveTitle",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The long description of the Evaluation Objective.",
            "in": "query",
            "name": "evaluationObjectiveDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The sort order of this Evaluation Objective.",
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
            "in": "query",
            "name": "minRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The maximum summary numerical rating or score for the evaluation Objective.",
            "in": "query",
            "name": "maxRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
            "in": "query",
            "name": "evaluationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationObjective"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationObjectives"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationObjective",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationObjective"
              }
            }
          },
          "description": "The JSON representation of the EvaluationObjective resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationObjectives"
        ]
      }
    },
    "/tpdm/evaluationObjectives/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationObjectives"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationObjectivesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationObjective"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationObjectives"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationObjective",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationObjective"
              }
            }
          },
          "description": "The JSON representation of the EvaluationObjective resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationObjectives"
        ]
      }
    },
    "/tpdm/evaluationRatings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date for the person\u0027s evaluation.",
            "in": "query",
            "name": "evaluationDate",
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The rating level achieved based upon the rating or score.",
            "in": "query",
            "name": "evaluationRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The Status of the poerformance evaluation.",
            "in": "query",
            "name": "evaluationRatingStatusDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "Any comments about the evaluation to be captured.",
            "in": "query",
            "name": "comments",
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
            "in": "query",
            "name": "actualDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRating"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationRatings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationRating"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRating resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationRatings"
        ]
      }
    },
    "/tpdm/evaluationRatings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationRatings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationRating"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationRatings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationRating",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationRating"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRating resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationRatings"
        ]
      }
    },
    "/tpdm/evaluations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name or title of the evaluation.",
            "in": "query",
            "name": "evaluationTitle",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The long description of the Evaluation.",
            "in": "query",
            "name": "evaluationDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
            "in": "query",
            "name": "minRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The maximum summary numerical rating or score for the evaluation.",
            "in": "query",
            "name": "maxRating",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "in": "query",
            "name": "evaluationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "in": "query",
            "name": "interRaterReliabilityScore",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_Evaluation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_Evaluation"
              }
            }
          },
          "description": "The JSON representation of the Evaluation resource to be created or updated.",
          "required": true,
          "x-bodyName": "Evaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluations"
        ]
      }
    },
    "/tpdm/evaluations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_Evaluation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_Evaluation"
              }
            }
          },
          "description": "The JSON representation of the Evaluation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluations"
        ]
      }
    },
    "/tpdm/financialAids": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMFinancialAids",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date the award was designated.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "beginDate",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The date the award was removed.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
            "in": "query",
            "name": "aidConditionDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The classification of financial aid awarded to a person for the academic term/year.",
            "in": "query",
            "name": "aidTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The amount of financial aid awarded to a person for the term/year.",
            "in": "query",
            "name": "aidAmount",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Indicates a person who receives Pell Grant aid.",
            "in": "query",
            "name": "pellGrantRecipient",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_FinancialAid"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "financialAids"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMFinancialAid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_FinancialAid"
              }
            }
          },
          "description": "The JSON representation of the FinancialAid resource to be created or updated.",
          "required": true,
          "x-bodyName": "FinancialAid"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "financialAids"
        ]
      }
    },
    "/tpdm/financialAids/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMFinancialAidsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "financialAids"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMFinancialAidsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_FinancialAid"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "financialAids"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMFinancialAid",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_FinancialAid"
              }
            }
          },
          "description": "The JSON representation of the FinancialAid resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "financialAids"
        ]
      }
    },
    "/tpdm/performanceEvaluationRatings": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMPerformanceEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the performance evaluation was conducted.",
            "in": "query",
            "name": "actualDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indicator of whether the performance evaluation was announced or not.",
            "in": "query",
            "name": "announced",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Any comments about the performance evaluation to be captured.",
            "in": "query",
            "name": "comments",
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "A type of co-teaching observed as part of the performance evaluation.",
            "in": "query",
            "name": "coteachingStyleObservedDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
            "in": "query",
            "name": "actualDuration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The rating level achieved based upon the rating or score.",
            "in": "query",
            "name": "performanceEvaluationRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The month, day, and year on which the performance evaluation was scheduled.",
            "in": "query",
            "name": "scheduleDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "An indication of the the time at which the performance evaluation was conducted.",
            "in": "query",
            "name": "actualTime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "performanceEvaluationRatings"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMPerformanceEvaluationRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluationRating resource to be created or updated.",
          "required": true,
          "x-bodyName": "PerformanceEvaluationRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "performanceEvaluationRatings"
        ]
      }
    },
    "/tpdm/performanceEvaluationRatings/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMPerformanceEvaluationRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "performanceEvaluationRatings"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMPerformanceEvaluationRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "performanceEvaluationRatings"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMPerformanceEvaluationRating",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRating"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluationRating resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "performanceEvaluationRatings"
        ]
      }
    },
    "/tpdm/performanceEvaluations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMPerformanceEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An assigned unique identifier for the performance evaluation.",
            "in": "query",
            "name": "performanceEvaluationTitle",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The long description of the Performance Evaluation.",
            "in": "query",
            "name": "performanceEvaluationDescription",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The term for the session during the school year.",
            "in": "query",
            "name": "termDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The type of performance evaluation conducted.",
            "in": "query",
            "name": "performanceEvaluationTypeDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The identifier for the school year.",
            "in": "query",
            "name": "schoolYear",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The period for the evaluation.",
            "in": "query",
            "name": "evaluationPeriodDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the content or subject area of a performance evaluation.",
            "in": "query",
            "name": "academicSubjectDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "performanceEvaluations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMPerformanceEvaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluation resource to be created or updated.",
          "required": true,
          "x-bodyName": "PerformanceEvaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "performanceEvaluations"
        ]
      }
    },
    "/tpdm/performanceEvaluations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMPerformanceEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "performanceEvaluations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMPerformanceEvaluationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "performanceEvaluations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMPerformanceEvaluation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluation"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "performanceEvaluations"
        ]
      }
    },
    "/tpdm/rubricDimensions": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The rating achieved for the rubric dimension.",
            "in": "query",
            "name": "rubricRating",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The rating level achieved for the rubric dimension.",
            "in": "query",
            "name": "rubricRatingLevelDescriptor",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "description": "The criterion description for the rubric dimension.",
            "in": "query",
            "name": "criterionDescription",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The order for the rubric dimension.",
            "in": "query",
            "name": "dimensionOrder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_RubricDimension"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "rubricDimensions"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMRubricDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_RubricDimension"
              }
            }
          },
          "description": "The JSON representation of the RubricDimension resource to be created or updated.",
          "required": true,
          "x-bodyName": "RubricDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "rubricDimensions"
        ]
      }
    },
    "/tpdm/rubricDimensions/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMRubricDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "rubricDimensions"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMRubricDimensionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_RubricDimension"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "rubricDimensions"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMRubricDimension",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_RubricDimension"
              }
            }
          },
          "description": "The JSON representation of the RubricDimension resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "rubricDimensions"
        ]
      }
    },
    "/tpdm/surveyResponsePersonTargetAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMSurveyResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMSurveyResponsePersonTargetAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponsePersonTargetAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyResponsePersonTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ]
      }
    },
    "/tpdm/surveyResponsePersonTargetAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMSurveyResponsePersonTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMSurveyResponsePersonTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMSurveyResponsePersonTargetAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_SurveyResponsePersonTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveyResponsePersonTargetAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ]
      }
    },
    "/tpdm/surveySectionResponsePersonTargetAssociations": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMSurveySectionResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMSurveySectionResponsePersonTargetAssociation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponsePersonTargetAssociation resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveySectionResponsePersonTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ]
      }
    },
    "/tpdm/surveySectionResponsePersonTargetAssociations/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMSurveySectionResponsePersonTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMSurveySectionResponsePersonTargetAssociationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMSurveySectionResponsePersonTargetAssociation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_SurveySectionResponsePersonTargetAssociation"
              }
            }
          },
          "description": "The JSON representation of the SurveySectionResponsePersonTargetAssociation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/data"
    }
  ],
  "tags": [
    {
      "description": "This entity represents the academic weeks for a school year, optionally captured to support analyses.",
      "name": "academicWeeks"
    },
    {
      "description": "An accountability rating for a school or district.",
      "name": "accountabilityRatings"
    },
    {
      "description": "Identifies the point of contact for the administration of an assessment under the purview of an education organization.",
      "name": "assessmentAdministrationParticipations"
    },
    {
      "description": "The anticipated administration of an assessment under the purview of an education organization.",
      "name": "assessmentAdministrations"
    },
    {
      "description": "The parts organized for administering an assessessment which together provide a comprehensive assessment of the students.",
      "name": "assessmentBatteryParts"
    },
    {
      "description": "This entity represents one of many single measures that make up an assessment.",
      "name": "assessmentItems"
    },
    {
      "description": "Score ranges of an assessment associated with one or more learning standards.",
      "name": "assessmentScoreRangeLearningStandards"
    },
    {
      "description": "This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student\u0027s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.",
      "name": "assessments"
    },
    {
      "description": "The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time.",
      "name": "balanceSheetDimensions"
    },
    {
      "description": "This entity represents the schedule of class period meeting times.",
      "name": "bellSchedules"
    },
    {
      "description": "The type of scheduled or unscheduled event for the day.",
      "name": "calendarDates"
    },
    {
      "description": "A set of dates associated with an organization.",
      "name": "calendars"
    },
    {
      "description": "A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.",
      "name": "chartOfAccounts"
    },
    {
      "description": "This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.",
      "name": "classPeriods"
    },
    {
      "description": "This entity represents any type of list of designated students for tracking, analysis, or intervention.",
      "name": "cohorts"
    },
    {
      "description": "This entity represents an administrative unit at the state level which exists primarily to operate local community providers.",
      "name": "communityOrganizations"
    },
    {
      "description": "The legal document held by the community provider that authorizes the holder to perform certain functions and or services.",
      "name": "communityProviderLicenses"
    },
    {
      "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
      "name": "communityProviders"
    },
    {
      "description": "This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).",
      "name": "competencyObjectives"
    },
    {
      "description": "This entity represents a contact of a student, such as a parent, guardian or caretaker.",
      "name": "contacts"
    },
    {
      "description": "This entity represents an entry in the course catalog of available courses offered by the school during a session.",
      "name": "courseOfferings"
    },
    {
      "description": "This entity is the final record of a student\u0027s performance in their courses at the end of a semester or school year.",
      "name": "courseTranscripts"
    },
    {
      "description": "This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.",
      "name": "courses"
    },
    {
      "description": "The legal document giving authorization to perform teaching assignment services.",
      "name": "credentials"
    },
    {
      "description": "A natural or man-made event that causes the disruption of school-level activities and the temporary or permanent displacement of students.",
      "name": "crisisEvents"
    },
    {
      "description": "A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values.",
      "name": "descriptorMappings"
    },
    {
      "description": "This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.",
      "name": "disciplineActions"
    },
    {
      "description": "This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.",
      "name": "disciplineIncidents"
    },
    {
      "description": "This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.",
      "name": "educationContents"
    },
    {
      "description": "This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.",
      "name": "educationOrganizationInterventionPrescriptionAssociations"
    },
    {
      "description": "Properties of the association between the education organization and its network(s).",
      "name": "educationOrganizationNetworkAssociations"
    },
    {
      "description": "This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.",
      "name": "educationOrganizationNetworks"
    },
    {
      "description": "The association from an education organization to its peers.",
      "name": "educationOrganizationPeerAssociations"
    },
    {
      "description": "This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.",
      "name": "educationServiceCenters"
    },
    {
      "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric evaluation level.",
      "name": "evaluationRubricDimensions"
    },
    {
      "description": "The association from feeder school to the receiving school.",
      "name": "feederSchoolAssociations"
    },
    {
      "description": "The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service.",
      "name": "functionDimensions"
    },
    {
      "description": "The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations.",
      "name": "fundDimensions"
    },
    {
      "description": "This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.",
      "name": "gradebookEntries"
    },
    {
      "description": "This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.",
      "name": "grades"
    },
    {
      "description": "This entity represents the time span for which grades are reported.",
      "name": "gradingPeriods"
    },
    {
      "description": "This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.",
      "name": "graduationPlans"
    },
    {
      "description": "This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.",
      "name": "interventionPrescriptions"
    },
    {
      "description": "An experimental or quasi-experimental study of an intervention technique.",
      "name": "interventionStudies"
    },
    {
      "description": "An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.",
      "name": "interventions"
    },
    {
      "description": "Indicates a directional association of equivalence from a source to a target learning standard.",
      "name": "learningStandardEquivalenceAssociations"
    },
    {
      "description": "A statement that describes a specific competency or academic standard.",
      "name": "learningStandards"
    },
    {
      "description": "The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account.",
      "name": "localAccounts"
    },
    {
      "description": "The set of local education agency or charter management organization expense or revenue amounts.",
      "name": "localActuals"
    },
    {
      "description": "The set of local education agency or charter management organization budget amounts.",
      "name": "localBudgets"
    },
    {
      "description": "The set of local education agency or charter management organization contracted staff amounts.",
      "name": "localContractedStaffs"
    },
    {
      "description": "This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.",
      "name": "localEducationAgencies"
    },
    {
      "description": "The set of local education agency or charter management organization encumbrance amounts.",
      "name": "localEncumbrances"
    },
    {
      "description": "The set of local education agency or charter management organization payroll amounts.",
      "name": "localPayrolls"
    },
    {
      "description": "This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.",
      "name": "locations"
    },
    {
      "description": "The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth.",
      "name": "objectDimensions"
    },
    {
      "description": "This entity represents subtests that assess specific learning objectives.",
      "name": "objectiveAssessments"
    },
    {
      "description": "This entity represents an open staff position that the education organization is seeking to fill.",
      "name": "openStaffPositions"
    },
    {
      "description": "The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.",
      "name": "operationalUnitDimensions"
    },
    {
      "description": "An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.",
      "name": "organizationDepartments"
    },
    {
      "description": "This entity represents a human being.",
      "name": "people"
    },
    {
      "description": "This entity captures significant postsecondary events during a student\u0027s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student\u0027s enrollment at a post-secondary institution.",
      "name": "postSecondaryEvents"
    },
    {
      "description": "An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).",
      "name": "postSecondaryInstitutions"
    },
    {
      "description": "The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities.",
      "name": "programDimensions"
    },
    {
      "description": "The lowest level elements or criterion of a students\u0027s performance that is being evaluated, typically by a rubric.",
      "name": "programEvaluationElements"
    },
    {
      "description": "A subcomponent of a ProgramEvaluation, a specific student objective or domain of performance that is being evaluated.",
      "name": "programEvaluationObjectives"
    },
    {
      "description": "An evaluation instrument applied to evaluate a student in the context of a program. Student evaluations are typically applied by a staff member based upon a rubric.",
      "name": "programEvaluations"
    },
    {
      "description": "This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.",
      "name": "programs"
    },
    {
      "description": "The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels.",
      "name": "projectDimensions"
    },
    {
      "description": "This educational entity represents the collection of student grades for courses taken during a grading period.",
      "name": "reportCards"
    },
    {
      "description": "This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.",
      "name": "restraintEvents"
    },
    {
      "description": "Identifier for a school year.",
      "name": "schoolYearTypes"
    },
    {
      "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.",
      "name": "schools"
    },
    {
      "description": "Captures attendance taken event for given section.",
      "name": "sectionAttendanceTakenEvents"
    },
    {
      "description": "This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.",
      "name": "sections"
    },
    {
      "description": "A specific designated unit of time during which instruction is provided, grades are reported and academic credits are awarded to students (whenever applicable). Sessions serve as organized segments of the academic year and can be interrupted by vacations or other events.",
      "name": "sessions"
    },
    {
      "description": "The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.",
      "name": "sourceDimensions"
    },
    {
      "description": "This event entity represents the recording of the dates of staff absence.",
      "name": "staffAbsenceEvents"
    },
    {
      "description": "This association indicates the staff associated with a cohort of students.",
      "name": "staffCohortAssociations"
    },
    {
      "description": "This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.",
      "name": "staffDisciplineIncidentAssociations"
    },
    {
      "description": "This association indicates the education organization to which a staff member provides services.",
      "name": "staffEducationOrganizationAssignmentAssociations"
    },
    {
      "description": "This association provides the contact information of the staff associated with the education organization.",
      "name": "staffEducationOrganizationContactAssociations"
    },
    {
      "description": "This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.",
      "name": "staffEducationOrganizationEmploymentAssociations"
    },
    {
      "description": "This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).",
      "name": "staffLeaves"
    },
    {
      "description": "This association indicates the staff associated with a program.",
      "name": "staffProgramAssociations"
    },
    {
      "description": "This association indicates the school(s) to which a staff member provides instructional services.",
      "name": "staffSchoolAssociations"
    },
    {
      "description": "This association indicates the class sections to which a staff member is assigned.",
      "name": "staffSectionAssociations"
    },
    {
      "description": "This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion.",
      "name": "staffs"
    },
    {
      "description": "This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.",
      "name": "stateEducationAgencies"
    },
    {
      "description": "This educational entity represents the cumulative record of academic achievement for a student.",
      "name": "studentAcademicRecords"
    },
    {
      "description": "The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution.",
      "name": "studentAssessmentEducationOrganizationAssociations"
    },
    {
      "description": "The association to the part(s) of the assessment battery that the student is to be tested for this administration of the assessment.",
      "name": "studentAssessmentRegistrationBatteryPartAssociations"
    },
    {
      "description": "Identifies an assessment registration that a student is expected to participate in including the testing organization, reporting organization and assessment delivery details.",
      "name": "studentAssessmentRegistrations"
    },
    {
      "description": "This entity represents the analysis or scoring of a student\u0027s response on an assessment. The analysis results in a value that represents a student\u0027s performance on a set of items on a test.",
      "name": "studentAssessments"
    },
    {
      "description": "This association represents the career and technical education (CTE) program that a student participates in. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for CTE programs.",
      "name": "studentCTEProgramAssociations"
    },
    {
      "description": "This association represents the cohort(s) for which a student is designated.",
      "name": "studentCohortAssociations"
    },
    {
      "description": "This entity represents the competency assessed or evaluated for the student against a specific competency objective.",
      "name": "studentCompetencyObjectives"
    },
    {
      "description": "This association relates students to their parents, guardians, or caretakers.",
      "name": "studentContactAssociations"
    },
    {
      "description": "This association describes the behavior of students involved in a discipline incident.",
      "name": "studentDisciplineIncidentBehaviorAssociations"
    },
    {
      "description": "This association indicates those students who were involved and not perpetrators for a discipline incident.",
      "name": "studentDisciplineIncidentNonOffenderAssociations"
    },
    {
      "description": "The accommodation(s) required or expected for administering assessments as determined by the education organization.",
      "name": "studentEducationOrganizationAssessmentAccommodations"
    },
    {
      "description": "This association represents student information as reported in the context of the student\u0027s relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.",
      "name": "studentEducationOrganizationAssociations"
    },
    {
      "description": "This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.",
      "name": "studentEducationOrganizationResponsibilityAssociations"
    },
    {
      "description": "This entity holds a student\u0027s grade or competency level for a gradebook entry.",
      "name": "studentGradebookEntries"
    },
    {
      "description": "This entity stores the student health records.",
      "name": "studentHealths"
    },
    {
      "description": "This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for homeless programs.",
      "name": "studentHomelessProgramAssociations"
    },
    {
      "description": "This association indicates the students participating in an intervention.",
      "name": "studentInterventionAssociations"
    },
    {
      "description": "This event entity represents the recording of whether a student is in attendance for an intervention service.",
      "name": "studentInterventionAttendanceEvents"
    },
    {
      "description": "This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for language instruction programs.",
      "name": "studentLanguageInstructionProgramAssociations"
    },
    {
      "description": "This association represents the migrant education program(s) that a student participates in or receives services from. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for migrant education programs.",
      "name": "studentMigrantEducationProgramAssociations"
    },
    {
      "description": "This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for Title I Part D Neglected or Delinquent programs.",
      "name": "studentNeglectedOrDelinquentProgramAssociations"
    },
    {
      "description": "This association represents the program(s) that a student participates in or is served by.",
      "name": "studentProgramAssociations"
    },
    {
      "description": "This event entity represents the recording of whether a student is in attendance to receive or participate in program services.",
      "name": "studentProgramAttendanceEvents"
    },
    {
      "description": "The evaluation results for a student as evaluated in the context of a program.",
      "name": "studentProgramEvaluations"
    },
    {
      "description": "This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.",
      "name": "studentSchoolAssociations"
    },
    {
      "description": "This event entity represents the recording of whether a student is in attendance for a school day.",
      "name": "studentSchoolAttendanceEvents"
    },
    {
      "description": "This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for school food service programs.",
      "name": "studentSchoolFoodServiceProgramAssociations"
    },
    {
      "description": "This association identifies student that qualifies for the Section 504 of the Rehabilitation Act of 1973.",
      "name": "studentSection504ProgramAssociations"
    },
    {
      "description": "This association indicates the course sections to which a student is assigned.",
      "name": "studentSectionAssociations"
    },
    {
      "description": "This event entity represents the recording of whether a student is in attendance for a section.",
      "name": "studentSectionAttendanceEvents"
    },
    {
      "description": "This association represents the special education program(s) that a student participates in or receives services from. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for special education programs.",
      "name": "studentSpecialEducationProgramAssociations"
    },
    {
      "description": "Captures details regarding the evaluation process for eligibility of students for special education services under IDEA Part C or Part B.",
      "name": "studentSpecialEducationProgramEligibilityAssociations"
    },
    {
      "description": "This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is a subclass of the GeneralStudentProgramAssociation specifically designed for Title I Part A programs.",
      "name": "studentTitleIPartAProgramAssociations"
    },
    {
      "description": "This entity captures a student\u0027s specific transportation arrangement.",
      "name": "studentTransportations"
    },
    {
      "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.",
      "name": "students"
    },
    {
      "description": "The course associated with the survey.",
      "name": "surveyCourseAssociations"
    },
    {
      "description": "The program associated with the survey.",
      "name": "surveyProgramAssociations"
    },
    {
      "description": "The response to a survey question.",
      "name": "surveyQuestionResponses"
    },
    {
      "description": "The questions for the survey.",
      "name": "surveyQuestions"
    },
    {
      "description": "This association provides information about the survey being taken and the education organization the survey is about.",
      "name": "surveyResponseEducationOrganizationTargetAssociations"
    },
    {
      "description": "The association provides information about the survey being taken and who the survey is about.",
      "name": "surveyResponseStaffTargetAssociations"
    },
    {
      "description": "Responses to a Survey for named or anonymous persons.",
      "name": "surveyResponses"
    },
    {
      "description": "The section associated with the survey.",
      "name": "surveySectionAssociations"
    },
    {
      "description": "This association provides information about the survey section and the education organization the survey section is about.",
      "name": "surveySectionResponseEducationOrganizationTargetAssociations"
    },
    {
      "description": "This association provides information about the survey section and the staff the survey section is about.",
      "name": "surveySectionResponseStaffTargetAssociations"
    },
    {
      "description": "Optional information about the responses provided for a section of a survey.",
      "name": "surveySectionResponses"
    },
    {
      "description": "The section of questions for the survey.",
      "name": "surveySections"
    },
    {
      "description": "A survey to identified or anonymous respondents.",
      "name": "surveys"
    },
    {
      "description": "Information about the association between the Teacher Candidate and the EducatorPreparationProgram",
      "name": "candidateEducatorPreparationProgramAssociations"
    },
    {
      "description": "A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.",
      "name": "candidates"
    },
    {
      "description": "The\u00A0Educator\u00A0Preparation Program is designed to prepare students to become licensed educators.",
      "name": "educatorPreparationPrograms"
    },
    {
      "description": "The lowest-level rating for an Evaluation Element for an individual educator.",
      "name": "evaluationElementRatings"
    },
    {
      "description": "The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.",
      "name": "evaluationElements"
    },
    {
      "description": "The rating for the component Evaluation Objective for an individual educator.",
      "name": "evaluationObjectiveRatings"
    },
    {
      "description": "A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.",
      "name": "evaluationObjectives"
    },
    {
      "description": "The summary weighting for the Evaluation instrument for an individual educator.",
      "name": "evaluationRatings"
    },
    {
      "description": "An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.",
      "name": "evaluations"
    },
    {
      "description": "This entity represents the financial aid a person is awarded.",
      "name": "financialAids"
    },
    {
      "description": "The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.",
      "name": "performanceEvaluationRatings"
    },
    {
      "description": "A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.",
      "name": "performanceEvaluations"
    },
    {
      "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.",
      "name": "rubricDimensions"
    },
    {
      "description": "The association provides information about the survey being taken and who the survey is about.",
      "name": "surveyResponsePersonTargetAssociations"
    },
    {
      "description": "This association provides information about the survey section and the person the survey section is about.",
      "name": "surveySectionResponsePersonTargetAssociations"
    }
  ],
  "security": [
    {
      "oauth2_client_credentials": []
    }
  ]
}