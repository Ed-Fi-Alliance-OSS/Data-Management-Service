{
  "components": {
    "parameters": {
      "If-None-Match": {
        "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
        "in": "header",
        "name": "If-None-Match",
        "schema": {
          "type": "string"
        }
      },
      "MaxChangeVersion": {
        "description": "Used in synchronization to set sequence maximum ChangeVersion",
        "in": "query",
        "name": "maxChangeVersion",
        "schema": {
          "format": "int64",
          "type": "integer"
        }
      },
      "MinChangeVersion": {
        "description": "Used in synchronization to set sequence minimum ChangeVersion",
        "in": "query",
        "name": "minChangeVersion",
        "schema": {
          "format": "int64",
          "type": "integer"
        }
      },
      "fields": {
        "description": "Specifies a subset of properties that should be returned for each entity (e.g. \u0022property1,collection1(collProp1,collProp2)\u0022).",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "Indicates the maximum number of items that should be returned in the results.",
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 25,
          "format": "int32",
          "maximum": 500,
          "minimum": 0,
          "type": "integer"
        }
      },
      "numberOfPartitions": {
        "description": "The number of evenly distributed partitions to provide for client-side parallel processing. If unspecified, a reasonable set of partitions will be determined based on the total number of accessible items.",
        "in": "query",
        "name": "number",
        "schema": {
          "format": "int32",
          "maximum": 200,
          "minimum": 1,
          "type": "integer"
        }
      },
      "offset": {
        "description": "Indicates how many items should be skipped before returning results.",
        "in": "query",
        "name": "offset",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      },
      "pageSize": {
        "description": "The maximum number of items to retrieve in the page. For use with pageToken (cursor paging) only.",
        "in": "query",
        "name": "pageSize",
        "schema": {
          "default": 25,
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        }
      },
      "pageToken": {
        "description": "The token of the page to retrieve, obtained either from the \u0022Next-Page-Token\u0022 header of the previous request, or from the \u0022partitions\u0022 endpoint for the resource. Cannot be used with limit/offset paging.",
        "in": "query",
        "name": "pageToken",
        "schema": {
          "type": "string"
        }
      },
      "queryExpression": {
        "description": "Specifies a query filter expression for the request. Currently only supports range-based queries on dates and numbers (e.g. \u0022schoolId:[255901000...255901002]\u0022 and \u0022BeginDate:[2016-03-07...2016-03-10]\u0022).",
        "in": "query",
        "name": "q",
        "schema": {
          "type": "string"
        }
      },
      "totalCount": {
        "description": "Indicates if the total number of items available should be returned in the \u0027Total-Count\u0027 header of the response.  If set to false, \u0027Total-Count\u0027 header will not be provided. Must be false when using cursor paging (with pageToken).",
        "in": "query",
        "name": "totalCount",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {}
        },
        "description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or their values."
      },
      "Conflict": {
        "content": {
          "application/json": {}
        },
        "description": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
      },
      "Created": {
        "description": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
      },
      "Deleted": {
        "description": "The resource was successfully deleted."
      },
      "Error": {
        "content": {
          "application/json": {}
        },
        "description": "An unhandled error occurred on the server. See the response body for details."
      },
      "Forbidden": {
        "description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed."
      },
      "NotFound": {
        "description": "The resource could not be found."
      },
      "NotFoundUseSnapshot": {
        "description": "The resource could not be found. If Use-Snapshot header is set to true, this response can indicate the snapshot may have been removed."
      },
      "NotModified": {
        "description": "The resource\u0027s current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
      },
      "PreconditionFailed": {
        "description": "The resource\u0027s current server-side ETag value does not match the supplied If-Match header value in the request. This indicates the resource has been modified by another consumer."
      },
      "Unauthorized": {
        "description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed."
      },
      "Updated": {
        "description": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
      }
    },
    "schemas": {
      "EdFi_AbsenceEventCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AcademicHonorCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AcademicSubjectDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AccommodationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AccountTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AchievementCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AdditionalCreditTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AddressTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AdministrationEnvironmentDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AdministrativeFundingControlDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AncestryEthnicOriginDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssessmentCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssessmentIdentificationSystemDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssessmentItemCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssessmentItemResultDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssessmentPeriodDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssessmentReportingMethodDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AssignmentLateStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AttemptStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_AttendanceEventCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_BarrierToInternetAccessInResidenceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_BehaviorDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_BusRouteDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CalendarEventDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CalendarTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CareerPathwayDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CharterApprovalAgencyTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CharterStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CitizenshipStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ClassroomPositionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CohortScopeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CohortTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CohortYearTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CompetencyLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ContactTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ContentClassDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ContinuationOfServicesReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CostRateDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CountryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CourseAttemptResultDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CourseDefinedByDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CourseGPAApplicabilityDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CourseIdentificationSystemDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CourseLevelCharacteristicDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CourseRepeatCodeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CredentialFieldDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CredentialTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CreditCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CreditTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CrisisTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CTEProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_CurriculumUsedDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DeliveryMethodDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DiagnosisDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DiplomaLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DiplomaTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisabilityDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisabilityDesignationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisabilityDeterminationSourceTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisciplineActionLengthDifferenceReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisciplineDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisciplineIncidentParticipationCodeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DisplacedStudentStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DualCreditInstitutionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_DualCreditTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationAssociationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EducationOrganizationIdentificationSystemDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EducationPlanDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EducationalEnvironmentDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ElectronicMailTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EligibilityDelayReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EligibilityEvaluationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EmploymentStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EnrollmentTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EntryGradeLevelReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EntryTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EvaluationDelayReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_EventCircumstanceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ExitWithdrawTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_FinancialCollectionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GradeLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GradePointAverageTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GradeTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GradebookEntryTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GradingPeriodDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GraduationPlanTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_GunFreeSchoolsActReportingStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_HomelessPrimaryNighttimeResidenceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_HomelessProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_IDEAPartDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_IdentificationDocumentUseDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ImmunizationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_IncidentLocationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_IndicatorDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_IndicatorGroupDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_IndicatorLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InstitutionTelephoneNumberTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InteractivityStyleDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InternetAccessDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InternetAccessTypeInResidenceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InternetPerformanceInResidenceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InterventionClassDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_InterventionEffectivenessRatingDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LanguageDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LanguageInstructionProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LanguageUseDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LearningStandardCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LearningStandardEquivalenceStrengthDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LearningStandardScopeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LevelOfEducationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LicenseStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LicenseTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LimitedEnglishProficiencyDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LocalEducationAgencyCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_LocaleDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_MagnetSpecialProgramEmphasisSchoolDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_MediumOfInstructionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_MethodCreditEarnedDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_MigrantEducationProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ModelEntityDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_MonitoredDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_NeglectedOrDelinquentProgramDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_NeglectedOrDelinquentProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_NetworkPurposeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_NonMedicalImmunizationExemptionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_OperationalStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_OtherNameTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ParticipationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ParticipationStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PerformanceBaseConversionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PerformanceLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PersonalInformationVerificationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PlatformTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PopulationServedDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryEventCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PostSecondaryInstitutionLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PostingResultDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PrimaryLearningDeviceAccessDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PrimaryLearningDeviceAwayFromSchoolDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PrimaryLearningDeviceProviderDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProficiencyDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgramAssignmentDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgramCharacteristicDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationPeriodDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgramEvaluationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgramSponsorDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgramTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgressDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProgressLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProviderCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProviderProfitabilityDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ProviderStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_PublicationStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_QuestionFormDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RaceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RatingLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ReasonExitedDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ReasonNotTestedDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RecognitionTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RelationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RepeatIdentifierDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ReporterDescriptionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ReportingTagDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ResidencyStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ResponseIndicatorDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ResponsibilityDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RestraintEventReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ResultDatatypeTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_RetestIndicatorDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SchoolCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SchoolChoiceBasisDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SchoolChoiceImplementStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SchoolFoodServiceProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SchoolTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_Section504DisabilityDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SectionCharacteristicDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SectionTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SeparationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SeparationReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_ServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SexDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SourceSystemDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SpecialEducationExitReasonDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SpecialEducationProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SpecialEducationSettingDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_StaffClassificationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_StaffIdentificationSystemDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_StaffLeaveEventCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_StateAbbreviationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_StudentCharacteristicDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_StudentIdentificationSystemDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SubmissionStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SupporterMilitaryConnectionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SurveyCategoryDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_SurveyLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TeachingCredentialBasisDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TeachingCredentialDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TechnicalSkillsAssessmentDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TelephoneNumberTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TermDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TitleIPartAParticipantDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TitleIPartAProgramServiceDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TitleIPartASchoolDesignationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TransportationPublicExpenseEligibilityTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TransportationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TravelDayofWeekDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TravelDirectionDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_TribalAffiliationDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_VisaDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "EdFi_WeaponDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_AccreditationStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_AidTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_CertificationRouteDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_CoteachingStyleObservedDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_CredentialStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EducatorRoleDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EnglishLanguageExamDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EPPProgramPathwayDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EvaluationElementRatingLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EvaluationPeriodDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EvaluationRatingLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EvaluationRatingStatusDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_EvaluationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_GenderDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_ObjectiveRatingLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluationRatingLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_PerformanceEvaluationTypeDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      },
      "TPDM_RubricRatingLevelDescriptor": {
        "description": "An Ed-Fi Descriptor",
        "properties": {
          "codeValue": {
            "description": "The descriptor code value",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "description": {
            "description": "The descriptor description",
            "maxLength": 1024,
            "type": "string",
            "x-nullable": true
          },
          "effectiveBeginDate": {
            "description": "The descriptor effective begin date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "effectiveEndDate": {
            "description": "The descriptor effective end date",
            "format": "date",
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "namespace": {
            "description": "The descriptor namespace as a URI",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string",
            "x-Ed-Fi-isIdentity": true
          },
          "shortDescription": {
            "description": "The descriptor short description",
            "maxLength": 75,
            "minLength": 1,
            "pattern": "^(?!\\s).*(?\u003C!\\s)$",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "codeValue",
          "shortDescription"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "oauth2_client_credentials": {
        "type": "oauth2",
        "description": "Ed-Fi DMS OAuth 2.0 Client Credentials Grant Type authorization",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "http://localhost:8045/realms/edfi/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "info": {
    "contact": {
      "url": "https://www.ed-fi.org/what-is-ed-fi/contact/"
    },
    "description": "The Ed-Fi DMS API enables applications to read and write education data stored in an Ed-Fi DMS through a secure REST interface. \n***\n \u003E *Note: Consumers of DMS information should sanitize all data for display and storage. DMS provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.* \n***\n",
    "title": "Ed-Fi Data Management Service API",
    "version": "1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/ed-fi/absenceEventCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAbsenceEventCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AbsenceEventCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "absenceEventCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAbsenceEventCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AbsenceEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AbsenceEventCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "AbsenceEventCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "absenceEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/absenceEventCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAbsenceEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "absenceEventCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAbsenceEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AbsenceEventCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "absenceEventCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAbsenceEventCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AbsenceEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AbsenceEventCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "absenceEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/academicHonorCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAcademicHonorCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AcademicHonorCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "academicHonorCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAcademicHonorCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AcademicHonorCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AcademicHonorCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "AcademicHonorCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "academicHonorCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/academicHonorCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAcademicHonorCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "academicHonorCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAcademicHonorCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AcademicHonorCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "academicHonorCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAcademicHonorCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AcademicHonorCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AcademicHonorCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "academicHonorCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/academicSubjectDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAcademicSubjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AcademicSubjectDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "academicSubjectDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAcademicSubject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AcademicSubjectDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AcademicSubject resource to be created or updated.",
          "required": true,
          "x-bodyName": "AcademicSubject"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "academicSubjectDescriptors"
        ]
      }
    },
    "/ed-fi/academicSubjectDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAcademicSubjectsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "academicSubjectDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAcademicSubjectsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AcademicSubjectDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "academicSubjectDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAcademicSubject",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AcademicSubjectDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AcademicSubject resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "academicSubjectDescriptors"
        ]
      }
    },
    "/ed-fi/accommodationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAccommodations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AccommodationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "accommodationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAccommodation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AccommodationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Accommodation resource to be created or updated.",
          "required": true,
          "x-bodyName": "Accommodation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "accommodationDescriptors"
        ]
      }
    },
    "/ed-fi/accommodationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAccommodationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "accommodationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAccommodationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AccommodationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "accommodationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAccommodation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AccommodationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Accommodation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "accommodationDescriptors"
        ]
      }
    },
    "/ed-fi/accountTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAccountTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AccountTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "accountTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAccountType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AccountTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AccountType resource to be created or updated.",
          "required": true,
          "x-bodyName": "AccountType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "accountTypeDescriptors"
        ]
      }
    },
    "/ed-fi/accountTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAccountTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "accountTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAccountTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AccountTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "accountTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAccountType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AccountTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AccountType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "accountTypeDescriptors"
        ]
      }
    },
    "/ed-fi/achievementCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAchievementCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AchievementCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "achievementCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAchievementCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AchievementCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AchievementCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "AchievementCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "achievementCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/achievementCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAchievementCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "achievementCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAchievementCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AchievementCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "achievementCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAchievementCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AchievementCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AchievementCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "achievementCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/additionalCreditTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAdditionalCreditTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AdditionalCreditTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "additionalCreditTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAdditionalCreditType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AdditionalCreditTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AdditionalCreditType resource to be created or updated.",
          "required": true,
          "x-bodyName": "AdditionalCreditType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "additionalCreditTypeDescriptors"
        ]
      }
    },
    "/ed-fi/additionalCreditTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAdditionalCreditTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "additionalCreditTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAdditionalCreditTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AdditionalCreditTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "additionalCreditTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAdditionalCreditType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AdditionalCreditTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AdditionalCreditType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "additionalCreditTypeDescriptors"
        ]
      }
    },
    "/ed-fi/addressTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAddressTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AddressTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "addressTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAddressType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AddressTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AddressType resource to be created or updated.",
          "required": true,
          "x-bodyName": "AddressType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "addressTypeDescriptors"
        ]
      }
    },
    "/ed-fi/addressTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAddressTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "addressTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAddressTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AddressTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "addressTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAddressType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AddressTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AddressType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "addressTypeDescriptors"
        ]
      }
    },
    "/ed-fi/administrationEnvironmentDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAdministrationEnvironments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AdministrationEnvironmentDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "administrationEnvironmentDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAdministrationEnvironment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AdministrationEnvironmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AdministrationEnvironment resource to be created or updated.",
          "required": true,
          "x-bodyName": "AdministrationEnvironment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "administrationEnvironmentDescriptors"
        ]
      }
    },
    "/ed-fi/administrationEnvironmentDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAdministrationEnvironmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "administrationEnvironmentDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAdministrationEnvironmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AdministrationEnvironmentDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "administrationEnvironmentDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAdministrationEnvironment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AdministrationEnvironmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AdministrationEnvironment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "administrationEnvironmentDescriptors"
        ]
      }
    },
    "/ed-fi/administrativeFundingControlDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAdministrativeFundingControls",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AdministrativeFundingControlDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "administrativeFundingControlDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAdministrativeFundingControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AdministrativeFundingControlDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AdministrativeFundingControl resource to be created or updated.",
          "required": true,
          "x-bodyName": "AdministrativeFundingControl"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "administrativeFundingControlDescriptors"
        ]
      }
    },
    "/ed-fi/administrativeFundingControlDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAdministrativeFundingControlsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "administrativeFundingControlDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAdministrativeFundingControlsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AdministrativeFundingControlDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "administrativeFundingControlDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAdministrativeFundingControl",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AdministrativeFundingControlDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AdministrativeFundingControl resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "administrativeFundingControlDescriptors"
        ]
      }
    },
    "/ed-fi/ancestryEthnicOriginDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAncestryEthnicOrigins",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AncestryEthnicOriginDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAncestryEthnicOrigin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AncestryEthnicOriginDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AncestryEthnicOrigin resource to be created or updated.",
          "required": true,
          "x-bodyName": "AncestryEthnicOrigin"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ]
      }
    },
    "/ed-fi/ancestryEthnicOriginDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAncestryEthnicOriginsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAncestryEthnicOriginsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AncestryEthnicOriginDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAncestryEthnicOrigin",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AncestryEthnicOriginDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AncestryEthnicOrigin resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "ancestryEthnicOriginDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentIdentificationSystemDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentIdentificationSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentIdentificationSystemDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentIdentificationSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentIdentificationSystem resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentIdentificationSystem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentIdentificationSystemDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentIdentificationSystemDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentIdentificationSystem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentIdentificationSystem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentItemCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentItemCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentItemCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentItemCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentItemCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentItemCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentItemCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentItemCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentItemCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentItemCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentItemCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentItemCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentItemCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentItemCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentItemCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentItemCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentItemCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentItemCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentItemCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentItemResultDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentItemResults",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentItemResultDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentItemResultDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentItemResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentItemResultDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentItemResult resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentItemResult"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentItemResultDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentItemResultDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentItemResultsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentItemResultDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentItemResultsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentItemResultDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentItemResultDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentItemResult",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentItemResultDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentItemResult resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentItemResultDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentPeriodDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentPeriodDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentPeriodDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentPeriod resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentPeriodDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentPeriodDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentPeriodDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentPeriodDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentPeriodDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentPeriod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentPeriod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentPeriodDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentReportingMethodDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentReportingMethods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssessmentReportingMethodDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assessmentReportingMethodDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentReportingMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentReportingMethodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentReportingMethod resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssessmentReportingMethod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assessmentReportingMethodDescriptors"
        ]
      }
    },
    "/ed-fi/assessmentReportingMethodDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentReportingMethodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assessmentReportingMethodDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentReportingMethodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssessmentReportingMethodDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assessmentReportingMethodDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentReportingMethod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssessmentReportingMethodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssessmentReportingMethod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assessmentReportingMethodDescriptors"
        ]
      }
    },
    "/ed-fi/assignmentLateStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssignmentLateStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AssignmentLateStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "assignmentLateStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssignmentLateStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssignmentLateStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssignmentLateStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "AssignmentLateStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "assignmentLateStatusDescriptors"
        ]
      }
    },
    "/ed-fi/assignmentLateStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssignmentLateStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "assignmentLateStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssignmentLateStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AssignmentLateStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "assignmentLateStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssignmentLateStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AssignmentLateStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AssignmentLateStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "assignmentLateStatusDescriptors"
        ]
      }
    },
    "/ed-fi/attemptStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAttemptStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AttemptStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "attemptStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAttemptStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AttemptStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AttemptStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "AttemptStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "attemptStatusDescriptors"
        ]
      }
    },
    "/ed-fi/attemptStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAttemptStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "attemptStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAttemptStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AttemptStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "attemptStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAttemptStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AttemptStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AttemptStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "attemptStatusDescriptors"
        ]
      }
    },
    "/ed-fi/attendanceEventCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAttendanceEventCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_AttendanceEventCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "attendanceEventCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAttendanceEventCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AttendanceEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AttendanceEventCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "AttendanceEventCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "attendanceEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/attendanceEventCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteAttendanceEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "attendanceEventCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAttendanceEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_AttendanceEventCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "attendanceEventCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAttendanceEventCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_AttendanceEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AttendanceEventCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "attendanceEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/barrierToInternetAccessInResidenceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBarrierToInternetAccessInResidences",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_BarrierToInternetAccessInResidenceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBarrierToInternetAccessInResidence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BarrierToInternetAccessInResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the BarrierToInternetAccessInResidence resource to be created or updated.",
          "required": true,
          "x-bodyName": "BarrierToInternetAccessInResidence"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/barrierToInternetAccessInResidenceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteBarrierToInternetAccessInResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBarrierToInternetAccessInResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_BarrierToInternetAccessInResidenceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBarrierToInternetAccessInResidence",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BarrierToInternetAccessInResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the BarrierToInternetAccessInResidence resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "barrierToInternetAccessInResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/behaviorDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBehaviors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_BehaviorDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "behaviorDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBehavior",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BehaviorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Behavior resource to be created or updated.",
          "required": true,
          "x-bodyName": "Behavior"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "behaviorDescriptors"
        ]
      }
    },
    "/ed-fi/behaviorDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteBehaviorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "behaviorDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBehaviorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_BehaviorDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "behaviorDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBehavior",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BehaviorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Behavior resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "behaviorDescriptors"
        ]
      }
    },
    "/ed-fi/busRouteDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBusRoutes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_BusRouteDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "busRouteDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBusRoute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BusRouteDescriptor"
              }
            }
          },
          "description": "The JSON representation of the BusRoute resource to be created or updated.",
          "required": true,
          "x-bodyName": "BusRoute"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "busRouteDescriptors"
        ]
      }
    },
    "/ed-fi/busRouteDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteBusRoutesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "busRouteDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBusRoutesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_BusRouteDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "busRouteDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBusRoute",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_BusRouteDescriptor"
              }
            }
          },
          "description": "The JSON representation of the BusRoute resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "busRouteDescriptors"
        ]
      }
    },
    "/ed-fi/calendarEventDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendarEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CalendarEventDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "calendarEventDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendarEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CalendarEventDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CalendarEvent resource to be created or updated.",
          "required": true,
          "x-bodyName": "CalendarEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "calendarEventDescriptors"
        ]
      }
    },
    "/ed-fi/calendarEventDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "calendarEventDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarEventsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CalendarEventDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "calendarEventDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendarEvent",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CalendarEventDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CalendarEvent resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "calendarEventDescriptors"
        ]
      }
    },
    "/ed-fi/calendarTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendarTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CalendarTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "calendarTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendarType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CalendarTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CalendarType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CalendarType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "calendarTypeDescriptors"
        ]
      }
    },
    "/ed-fi/calendarTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "calendarTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CalendarTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "calendarTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendarType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CalendarTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CalendarType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "calendarTypeDescriptors"
        ]
      }
    },
    "/ed-fi/careerPathwayDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCareerPathways",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CareerPathwayDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "careerPathwayDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCareerPathway",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CareerPathwayDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CareerPathway resource to be created or updated.",
          "required": true,
          "x-bodyName": "CareerPathway"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "careerPathwayDescriptors"
        ]
      }
    },
    "/ed-fi/careerPathwayDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCareerPathwaysById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "careerPathwayDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCareerPathwaysById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CareerPathwayDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "careerPathwayDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCareerPathway",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CareerPathwayDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CareerPathway resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "careerPathwayDescriptors"
        ]
      }
    },
    "/ed-fi/charterApprovalAgencyTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCharterApprovalAgencyTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CharterApprovalAgencyTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCharterApprovalAgencyType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CharterApprovalAgencyTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CharterApprovalAgencyType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CharterApprovalAgencyType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ]
      }
    },
    "/ed-fi/charterApprovalAgencyTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCharterApprovalAgencyTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCharterApprovalAgencyTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CharterApprovalAgencyTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCharterApprovalAgencyType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CharterApprovalAgencyTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CharterApprovalAgencyType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "charterApprovalAgencyTypeDescriptors"
        ]
      }
    },
    "/ed-fi/charterStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCharterStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CharterStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "charterStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCharterStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CharterStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CharterStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "CharterStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "charterStatusDescriptors"
        ]
      }
    },
    "/ed-fi/charterStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCharterStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "charterStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCharterStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CharterStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "charterStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCharterStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CharterStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CharterStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "charterStatusDescriptors"
        ]
      }
    },
    "/ed-fi/citizenshipStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCitizenshipStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CitizenshipStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "citizenshipStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCitizenshipStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CitizenshipStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CitizenshipStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "CitizenshipStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "citizenshipStatusDescriptors"
        ]
      }
    },
    "/ed-fi/citizenshipStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCitizenshipStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "citizenshipStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCitizenshipStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CitizenshipStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "citizenshipStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCitizenshipStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CitizenshipStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CitizenshipStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "citizenshipStatusDescriptors"
        ]
      }
    },
    "/ed-fi/classroomPositionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getClassroomPositions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ClassroomPositionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "classroomPositionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postClassroomPosition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ClassroomPositionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ClassroomPosition resource to be created or updated.",
          "required": true,
          "x-bodyName": "ClassroomPosition"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "classroomPositionDescriptors"
        ]
      }
    },
    "/ed-fi/classroomPositionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteClassroomPositionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "classroomPositionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getClassroomPositionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ClassroomPositionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "classroomPositionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putClassroomPosition",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ClassroomPositionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ClassroomPosition resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "classroomPositionDescriptors"
        ]
      }
    },
    "/ed-fi/cohortScopeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohortScopes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CohortScopeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "cohortScopeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohortScope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CohortScopeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CohortScope resource to be created or updated.",
          "required": true,
          "x-bodyName": "CohortScope"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "cohortScopeDescriptors"
        ]
      }
    },
    "/ed-fi/cohortScopeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortScopesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "cohortScopeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortScopesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CohortScopeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "cohortScopeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohortScope",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CohortScopeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CohortScope resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "cohortScopeDescriptors"
        ]
      }
    },
    "/ed-fi/cohortTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohortTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CohortTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "cohortTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohortType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CohortTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CohortType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CohortType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "cohortTypeDescriptors"
        ]
      }
    },
    "/ed-fi/cohortTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "cohortTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CohortTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "cohortTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohortType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CohortTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CohortType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "cohortTypeDescriptors"
        ]
      }
    },
    "/ed-fi/cohortYearTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohortYearTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CohortYearTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "cohortYearTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohortYearType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CohortYearTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CohortYearType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CohortYearType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "cohortYearTypeDescriptors"
        ]
      }
    },
    "/ed-fi/cohortYearTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortYearTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "cohortYearTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortYearTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CohortYearTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "cohortYearTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohortYearType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CohortYearTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CohortYearType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "cohortYearTypeDescriptors"
        ]
      }
    },
    "/ed-fi/competencyLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCompetencyLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CompetencyLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "competencyLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCompetencyLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CompetencyLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CompetencyLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "CompetencyLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "competencyLevelDescriptors"
        ]
      }
    },
    "/ed-fi/competencyLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCompetencyLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "competencyLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCompetencyLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CompetencyLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "competencyLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCompetencyLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CompetencyLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CompetencyLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "competencyLevelDescriptors"
        ]
      }
    },
    "/ed-fi/contactTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContactTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ContactTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "contactTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContactType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ContactTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ContactType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ContactType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "contactTypeDescriptors"
        ]
      }
    },
    "/ed-fi/contactTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteContactTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "contactTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContactTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ContactTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "contactTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContactType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ContactTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ContactType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "contactTypeDescriptors"
        ]
      }
    },
    "/ed-fi/contentClassDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContentClasses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ContentClassDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "contentClassDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContentClass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ContentClassDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ContentClass resource to be created or updated.",
          "required": true,
          "x-bodyName": "ContentClass"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "contentClassDescriptors"
        ]
      }
    },
    "/ed-fi/contentClassDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteContentClassesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "contentClassDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContentClassesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ContentClassDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "contentClassDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContentClass",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ContentClassDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ContentClass resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "contentClassDescriptors"
        ]
      }
    },
    "/ed-fi/continuationOfServicesReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContinuationOfServicesReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ContinuationOfServicesReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContinuationOfServicesReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ContinuationOfServicesReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ContinuationOfServicesReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "ContinuationOfServicesReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ]
      }
    },
    "/ed-fi/continuationOfServicesReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteContinuationOfServicesReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContinuationOfServicesReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ContinuationOfServicesReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContinuationOfServicesReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ContinuationOfServicesReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ContinuationOfServicesReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "continuationOfServicesReasonDescriptors"
        ]
      }
    },
    "/ed-fi/costRateDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCostRates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CostRateDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "costRateDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCostRate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CostRateDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CostRate resource to be created or updated.",
          "required": true,
          "x-bodyName": "CostRate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "costRateDescriptors"
        ]
      }
    },
    "/ed-fi/costRateDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCostRatesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "costRateDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCostRatesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CostRateDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "costRateDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCostRate",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CostRateDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CostRate resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "costRateDescriptors"
        ]
      }
    },
    "/ed-fi/countryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCountries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CountryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "countryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCountry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CountryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Country resource to be created or updated.",
          "required": true,
          "x-bodyName": "Country"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "countryDescriptors"
        ]
      }
    },
    "/ed-fi/countryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCountriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "countryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCountriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CountryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "countryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCountry",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CountryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Country resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "countryDescriptors"
        ]
      }
    },
    "/ed-fi/courseAttemptResultDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseAttemptResults",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseAttemptResultDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseAttemptResultDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseAttemptResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseAttemptResultDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseAttemptResult resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseAttemptResult"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseAttemptResultDescriptors"
        ]
      }
    },
    "/ed-fi/courseAttemptResultDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseAttemptResultsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseAttemptResultDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseAttemptResultsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseAttemptResultDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseAttemptResultDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseAttemptResult",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseAttemptResultDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseAttemptResult resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseAttemptResultDescriptors"
        ]
      }
    },
    "/ed-fi/courseDefinedByDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseDefinedBies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseDefinedByDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseDefinedByDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseDefinedBy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseDefinedByDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseDefinedBy resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseDefinedBy"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseDefinedByDescriptors"
        ]
      }
    },
    "/ed-fi/courseDefinedByDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseDefinedBiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseDefinedByDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseDefinedBiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseDefinedByDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseDefinedByDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseDefinedBy",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseDefinedByDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseDefinedBy resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseDefinedByDescriptors"
        ]
      }
    },
    "/ed-fi/courseGPAApplicabilityDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseGPAApplicabilities",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseGPAApplicabilityDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseGPAApplicability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseGPAApplicabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseGPAApplicability resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseGPAApplicability"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ]
      }
    },
    "/ed-fi/courseGPAApplicabilityDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseGPAApplicabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseGPAApplicabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseGPAApplicabilityDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseGPAApplicability",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseGPAApplicabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseGPAApplicability resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseGPAApplicabilityDescriptors"
        ]
      }
    },
    "/ed-fi/courseIdentificationSystemDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseIdentificationSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseIdentificationSystemDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseIdentificationSystemDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseIdentificationSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseIdentificationSystem resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseIdentificationSystem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/courseIdentificationSystemDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseIdentificationSystemDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseIdentificationSystemDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseIdentificationSystemDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseIdentificationSystem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseIdentificationSystem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/courseLevelCharacteristicDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseLevelCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseLevelCharacteristicDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseLevelCharacteristic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseLevelCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseLevelCharacteristic resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseLevelCharacteristic"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/courseLevelCharacteristicDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseLevelCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseLevelCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseLevelCharacteristicDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseLevelCharacteristic",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseLevelCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseLevelCharacteristic resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseLevelCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/courseRepeatCodeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseRepeatCodes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CourseRepeatCodeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "courseRepeatCodeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseRepeatCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseRepeatCodeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseRepeatCode resource to be created or updated.",
          "required": true,
          "x-bodyName": "CourseRepeatCode"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "courseRepeatCodeDescriptors"
        ]
      }
    },
    "/ed-fi/courseRepeatCodeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseRepeatCodesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "courseRepeatCodeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseRepeatCodesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CourseRepeatCodeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "courseRepeatCodeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseRepeatCode",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CourseRepeatCodeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CourseRepeatCode resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "courseRepeatCodeDescriptors"
        ]
      }
    },
    "/ed-fi/credentialFieldDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCredentialFields",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CredentialFieldDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "credentialFieldDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCredentialField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CredentialFieldDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CredentialField resource to be created or updated.",
          "required": true,
          "x-bodyName": "CredentialField"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "credentialFieldDescriptors"
        ]
      }
    },
    "/ed-fi/credentialFieldDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCredentialFieldsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "credentialFieldDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCredentialFieldsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CredentialFieldDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "credentialFieldDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCredentialField",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CredentialFieldDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CredentialField resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "credentialFieldDescriptors"
        ]
      }
    },
    "/ed-fi/credentialTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCredentialTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CredentialTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "credentialTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCredentialType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CredentialTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CredentialType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CredentialType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "credentialTypeDescriptors"
        ]
      }
    },
    "/ed-fi/credentialTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCredentialTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "credentialTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCredentialTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CredentialTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "credentialTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCredentialType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CredentialTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CredentialType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "credentialTypeDescriptors"
        ]
      }
    },
    "/ed-fi/creditCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCreditCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CreditCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "creditCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCreditCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CreditCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CreditCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "CreditCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "creditCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/creditCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCreditCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "creditCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCreditCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CreditCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "creditCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCreditCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CreditCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CreditCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "creditCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/creditTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCreditTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CreditTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "creditTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCreditType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CreditTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CreditType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CreditType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "creditTypeDescriptors"
        ]
      }
    },
    "/ed-fi/creditTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCreditTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "creditTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCreditTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CreditTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "creditTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCreditType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CreditTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CreditType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "creditTypeDescriptors"
        ]
      }
    },
    "/ed-fi/crisisTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCrisisTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CrisisTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "crisisTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCrisisType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CrisisTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CrisisType resource to be created or updated.",
          "required": true,
          "x-bodyName": "CrisisType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "crisisTypeDescriptors"
        ]
      }
    },
    "/ed-fi/crisisTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCrisisTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "crisisTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCrisisTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CrisisTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "crisisTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCrisisType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CrisisTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CrisisType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "crisisTypeDescriptors"
        ]
      }
    },
    "/ed-fi/cteProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCTEProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CTEProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "cteProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCTEProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CTEProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CTEProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "CTEProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "cteProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/cteProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCTEProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "cteProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCTEProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CTEProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "cteProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCTEProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CTEProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CTEProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "cteProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/curriculumUsedDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCurriculumUseds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_CurriculumUsedDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "curriculumUsedDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCurriculumUsed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CurriculumUsedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CurriculumUsed resource to be created or updated.",
          "required": true,
          "x-bodyName": "CurriculumUsed"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "curriculumUsedDescriptors"
        ]
      }
    },
    "/ed-fi/curriculumUsedDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteCurriculumUsedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "curriculumUsedDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCurriculumUsedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_CurriculumUsedDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "curriculumUsedDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCurriculumUsed",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_CurriculumUsedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CurriculumUsed resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "curriculumUsedDescriptors"
        ]
      }
    },
    "/ed-fi/deliveryMethodDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDeliveryMethods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DeliveryMethodDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "deliveryMethodDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDeliveryMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DeliveryMethodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DeliveryMethod resource to be created or updated.",
          "required": true,
          "x-bodyName": "DeliveryMethod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "deliveryMethodDescriptors"
        ]
      }
    },
    "/ed-fi/deliveryMethodDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDeliveryMethodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "deliveryMethodDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDeliveryMethodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DeliveryMethodDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "deliveryMethodDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDeliveryMethod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DeliveryMethodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DeliveryMethod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "deliveryMethodDescriptors"
        ]
      }
    },
    "/ed-fi/diagnosisDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDiagnoses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DiagnosisDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "diagnosisDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiagnosis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DiagnosisDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Diagnosis resource to be created or updated.",
          "required": true,
          "x-bodyName": "Diagnosis"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "diagnosisDescriptors"
        ]
      }
    },
    "/ed-fi/diagnosisDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDiagnosesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "diagnosisDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDiagnosesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DiagnosisDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "diagnosisDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiagnosis",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DiagnosisDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Diagnosis resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "diagnosisDescriptors"
        ]
      }
    },
    "/ed-fi/diplomaLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDiplomaLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DiplomaLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "diplomaLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiplomaLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DiplomaLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DiplomaLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "DiplomaLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "diplomaLevelDescriptors"
        ]
      }
    },
    "/ed-fi/diplomaLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDiplomaLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "diplomaLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDiplomaLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DiplomaLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "diplomaLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiplomaLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DiplomaLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DiplomaLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "diplomaLevelDescriptors"
        ]
      }
    },
    "/ed-fi/diplomaTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDiplomaTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DiplomaTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "diplomaTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiplomaType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DiplomaTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DiplomaType resource to be created or updated.",
          "required": true,
          "x-bodyName": "DiplomaType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "diplomaTypeDescriptors"
        ]
      }
    },
    "/ed-fi/diplomaTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDiplomaTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "diplomaTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDiplomaTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DiplomaTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "diplomaTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiplomaType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DiplomaTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DiplomaType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "diplomaTypeDescriptors"
        ]
      }
    },
    "/ed-fi/disabilityDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisabilities",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisabilityDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disabilityDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Disability resource to be created or updated.",
          "required": true,
          "x-bodyName": "Disability"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disabilityDescriptors"
        ]
      }
    },
    "/ed-fi/disabilityDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disabilityDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisabilityDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disabilityDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisability",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Disability resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disabilityDescriptors"
        ]
      }
    },
    "/ed-fi/disabilityDesignationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisabilityDesignations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisabilityDesignationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disabilityDesignationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisabilityDesignation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisabilityDesignationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisabilityDesignation resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisabilityDesignation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disabilityDesignationDescriptors"
        ]
      }
    },
    "/ed-fi/disabilityDesignationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisabilityDesignationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disabilityDesignationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisabilityDesignationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisabilityDesignationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disabilityDesignationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisabilityDesignation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisabilityDesignationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisabilityDesignation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disabilityDesignationDescriptors"
        ]
      }
    },
    "/ed-fi/disabilityDeterminationSourceTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisabilityDeterminationSourceTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisabilityDeterminationSourceTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisabilityDeterminationSourceType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisabilityDeterminationSourceTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisabilityDeterminationSourceType resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisabilityDeterminationSourceType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ]
      }
    },
    "/ed-fi/disabilityDeterminationSourceTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisabilityDeterminationSourceTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisabilityDeterminationSourceTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisabilityDeterminationSourceTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisabilityDeterminationSourceType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisabilityDeterminationSourceTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisabilityDeterminationSourceType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disabilityDeterminationSourceTypeDescriptors"
        ]
      }
    },
    "/ed-fi/disciplineActionLengthDifferenceReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineActionLengthDifferenceReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisciplineActionLengthDifferenceReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineActionLengthDifferenceReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineActionLengthDifferenceReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisciplineActionLengthDifferenceReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisciplineActionLengthDifferenceReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ]
      }
    },
    "/ed-fi/disciplineActionLengthDifferenceReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineActionLengthDifferenceReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineActionLengthDifferenceReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisciplineActionLengthDifferenceReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineActionLengthDifferenceReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineActionLengthDifferenceReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisciplineActionLengthDifferenceReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disciplineActionLengthDifferenceReasonDescriptors"
        ]
      }
    },
    "/ed-fi/disciplineDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplines",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisciplineDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disciplineDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDiscipline",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Discipline resource to be created or updated.",
          "required": true,
          "x-bodyName": "Discipline"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disciplineDescriptors"
        ]
      }
    },
    "/ed-fi/disciplineDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplinesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disciplineDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplinesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisciplineDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disciplineDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDiscipline",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Discipline resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disciplineDescriptors"
        ]
      }
    },
    "/ed-fi/disciplineIncidentParticipationCodeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineIncidentParticipationCodes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisciplineIncidentParticipationCodeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineIncidentParticipationCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineIncidentParticipationCodeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisciplineIncidentParticipationCode resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisciplineIncidentParticipationCode"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ]
      }
    },
    "/ed-fi/disciplineIncidentParticipationCodeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineIncidentParticipationCodesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineIncidentParticipationCodesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisciplineIncidentParticipationCodeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineIncidentParticipationCode",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisciplineIncidentParticipationCodeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisciplineIncidentParticipationCode resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "disciplineIncidentParticipationCodeDescriptors"
        ]
      }
    },
    "/ed-fi/displacedStudentStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisplacedStudentStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DisplacedStudentStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "displacedStudentStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisplacedStudentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisplacedStudentStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisplacedStudentStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "DisplacedStudentStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "displacedStudentStatusDescriptors"
        ]
      }
    },
    "/ed-fi/displacedStudentStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisplacedStudentStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "displacedStudentStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisplacedStudentStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DisplacedStudentStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "displacedStudentStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisplacedStudentStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DisplacedStudentStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DisplacedStudentStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "displacedStudentStatusDescriptors"
        ]
      }
    },
    "/ed-fi/dualCreditInstitutionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDualCreditInstitutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DualCreditInstitutionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "dualCreditInstitutionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDualCreditInstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DualCreditInstitutionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DualCreditInstitution resource to be created or updated.",
          "required": true,
          "x-bodyName": "DualCreditInstitution"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "dualCreditInstitutionDescriptors"
        ]
      }
    },
    "/ed-fi/dualCreditInstitutionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDualCreditInstitutionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "dualCreditInstitutionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDualCreditInstitutionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DualCreditInstitutionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "dualCreditInstitutionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDualCreditInstitution",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DualCreditInstitutionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DualCreditInstitution resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "dualCreditInstitutionDescriptors"
        ]
      }
    },
    "/ed-fi/dualCreditTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDualCreditTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_DualCreditTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "dualCreditTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDualCreditType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DualCreditTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DualCreditType resource to be created or updated.",
          "required": true,
          "x-bodyName": "DualCreditType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "dualCreditTypeDescriptors"
        ]
      }
    },
    "/ed-fi/dualCreditTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteDualCreditTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "dualCreditTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDualCreditTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_DualCreditTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "dualCreditTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDualCreditType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_DualCreditTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the DualCreditType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "dualCreditTypeDescriptors"
        ]
      }
    },
    "/ed-fi/educationOrganizationAssociationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationAssociationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationAssociationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationAssociationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationAssociationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationAssociationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationAssociationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/educationOrganizationAssociationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationAssociationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationAssociationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationAssociationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationAssociationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationAssociationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationAssociationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationAssociationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/educationOrganizationCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/educationOrganizationCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/educationOrganizationIdentificationSystemDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationIdentificationSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationOrganizationIdentificationSystemDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationIdentificationSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationIdentificationSystem resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationOrganizationIdentificationSystem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/educationOrganizationIdentificationSystemDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationOrganizationIdentificationSystemDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationIdentificationSystem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationOrganizationIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationOrganizationIdentificationSystem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationOrganizationIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/educationPlanDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationPlanDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationPlanDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationPlanDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationPlan resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationPlan"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationPlanDescriptors"
        ]
      }
    },
    "/ed-fi/educationPlanDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationPlansById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationPlanDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationPlansById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationPlanDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationPlanDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationPlan",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationPlanDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationPlan resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationPlanDescriptors"
        ]
      }
    },
    "/ed-fi/educationalEnvironmentDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationalEnvironments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EducationalEnvironmentDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educationalEnvironmentDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationalEnvironment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationalEnvironmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationalEnvironment resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducationalEnvironment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educationalEnvironmentDescriptors"
        ]
      }
    },
    "/ed-fi/educationalEnvironmentDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationalEnvironmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educationalEnvironmentDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationalEnvironmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EducationalEnvironmentDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educationalEnvironmentDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationalEnvironment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EducationalEnvironmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducationalEnvironment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educationalEnvironmentDescriptors"
        ]
      }
    },
    "/ed-fi/electronicMailTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getElectronicMailTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ElectronicMailTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "electronicMailTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postElectronicMailType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ElectronicMailTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ElectronicMailType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ElectronicMailType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "electronicMailTypeDescriptors"
        ]
      }
    },
    "/ed-fi/electronicMailTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteElectronicMailTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "electronicMailTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getElectronicMailTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ElectronicMailTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "electronicMailTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putElectronicMailType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ElectronicMailTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ElectronicMailType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "electronicMailTypeDescriptors"
        ]
      }
    },
    "/ed-fi/eligibilityDelayReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEligibilityDelayReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EligibilityDelayReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEligibilityDelayReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EligibilityDelayReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EligibilityDelayReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "EligibilityDelayReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ]
      }
    },
    "/ed-fi/eligibilityDelayReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEligibilityDelayReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEligibilityDelayReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EligibilityDelayReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEligibilityDelayReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EligibilityDelayReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EligibilityDelayReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "eligibilityDelayReasonDescriptors"
        ]
      }
    },
    "/ed-fi/eligibilityEvaluationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEligibilityEvaluationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EligibilityEvaluationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEligibilityEvaluationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EligibilityEvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EligibilityEvaluationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "EligibilityEvaluationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/eligibilityEvaluationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEligibilityEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEligibilityEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EligibilityEvaluationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEligibilityEvaluationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EligibilityEvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EligibilityEvaluationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "eligibilityEvaluationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/employmentStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEmploymentStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EmploymentStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "employmentStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEmploymentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EmploymentStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EmploymentStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "EmploymentStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "employmentStatusDescriptors"
        ]
      }
    },
    "/ed-fi/employmentStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEmploymentStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "employmentStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEmploymentStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EmploymentStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "employmentStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEmploymentStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EmploymentStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EmploymentStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "employmentStatusDescriptors"
        ]
      }
    },
    "/ed-fi/enrollmentTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEnrollmentTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EnrollmentTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "enrollmentTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEnrollmentType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EnrollmentTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EnrollmentType resource to be created or updated.",
          "required": true,
          "x-bodyName": "EnrollmentType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "enrollmentTypeDescriptors"
        ]
      }
    },
    "/ed-fi/enrollmentTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEnrollmentTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "enrollmentTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEnrollmentTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EnrollmentTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "enrollmentTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEnrollmentType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EnrollmentTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EnrollmentType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "enrollmentTypeDescriptors"
        ]
      }
    },
    "/ed-fi/entryGradeLevelReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEntryGradeLevelReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EntryGradeLevelReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEntryGradeLevelReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EntryGradeLevelReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EntryGradeLevelReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "EntryGradeLevelReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ]
      }
    },
    "/ed-fi/entryGradeLevelReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEntryGradeLevelReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEntryGradeLevelReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EntryGradeLevelReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEntryGradeLevelReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EntryGradeLevelReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EntryGradeLevelReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "entryGradeLevelReasonDescriptors"
        ]
      }
    },
    "/ed-fi/entryTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEntryTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EntryTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "entryTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEntryType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EntryTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EntryType resource to be created or updated.",
          "required": true,
          "x-bodyName": "EntryType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "entryTypeDescriptors"
        ]
      }
    },
    "/ed-fi/entryTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEntryTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "entryTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEntryTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EntryTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "entryTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEntryType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EntryTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EntryType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "entryTypeDescriptors"
        ]
      }
    },
    "/ed-fi/evaluationDelayReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationDelayReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EvaluationDelayReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationDelayReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationDelayReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EvaluationDelayReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationDelayReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationDelayReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationDelayReasonDescriptors"
        ]
      }
    },
    "/ed-fi/evaluationDelayReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationDelayReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationDelayReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationDelayReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EvaluationDelayReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationDelayReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationDelayReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EvaluationDelayReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationDelayReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationDelayReasonDescriptors"
        ]
      }
    },
    "/ed-fi/eventCircumstanceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEventCircumstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_EventCircumstanceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "eventCircumstanceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEventCircumstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EventCircumstanceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EventCircumstance resource to be created or updated.",
          "required": true,
          "x-bodyName": "EventCircumstance"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "eventCircumstanceDescriptors"
        ]
      }
    },
    "/ed-fi/eventCircumstanceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteEventCircumstancesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "eventCircumstanceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEventCircumstancesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_EventCircumstanceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "eventCircumstanceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEventCircumstance",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_EventCircumstanceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EventCircumstance resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "eventCircumstanceDescriptors"
        ]
      }
    },
    "/ed-fi/exitWithdrawTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getExitWithdrawTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ExitWithdrawTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "exitWithdrawTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postExitWithdrawType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ExitWithdrawTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ExitWithdrawType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ExitWithdrawType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "exitWithdrawTypeDescriptors"
        ]
      }
    },
    "/ed-fi/exitWithdrawTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteExitWithdrawTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "exitWithdrawTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getExitWithdrawTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ExitWithdrawTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "exitWithdrawTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putExitWithdrawType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ExitWithdrawTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ExitWithdrawType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "exitWithdrawTypeDescriptors"
        ]
      }
    },
    "/ed-fi/financialCollectionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFinancialCollections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_FinancialCollectionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "financialCollectionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFinancialCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FinancialCollectionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the FinancialCollection resource to be created or updated.",
          "required": true,
          "x-bodyName": "FinancialCollection"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "financialCollectionDescriptors"
        ]
      }
    },
    "/ed-fi/financialCollectionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteFinancialCollectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "financialCollectionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFinancialCollectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_FinancialCollectionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "financialCollectionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFinancialCollection",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_FinancialCollectionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the FinancialCollection resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "financialCollectionDescriptors"
        ]
      }
    },
    "/ed-fi/gradeLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradeLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradeLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradeLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradeLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradeLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradeLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradeLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradeLevelDescriptors"
        ]
      }
    },
    "/ed-fi/gradeLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradeLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradeLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradeLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradeLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradeLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradeLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradeLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradeLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradeLevelDescriptors"
        ]
      }
    },
    "/ed-fi/gradePointAverageTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradePointAverageTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradePointAverageTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradePointAverageTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradePointAverageType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradePointAverageTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradePointAverageType resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradePointAverageType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradePointAverageTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gradePointAverageTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradePointAverageTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradePointAverageTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradePointAverageTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradePointAverageTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradePointAverageTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradePointAverageType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradePointAverageTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradePointAverageType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradePointAverageTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gradeTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradeTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradeTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradeTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradeType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradeTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradeType resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradeType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradeTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gradeTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradeTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradeTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradeTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradeTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradeTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradeType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradeTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradeType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradeTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gradebookEntryTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradebookEntryTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradebookEntryTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradebookEntryTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradebookEntryType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradebookEntryTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradebookEntryType resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradebookEntryType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradebookEntryTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gradebookEntryTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradebookEntryTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradebookEntryTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradebookEntryTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradebookEntryTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradebookEntryTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradebookEntryType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradebookEntryTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradebookEntryType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradebookEntryTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gradingPeriodDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradingPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GradingPeriodDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gradingPeriodDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradingPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradingPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradingPeriod resource to be created or updated.",
          "required": true,
          "x-bodyName": "GradingPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gradingPeriodDescriptors"
        ]
      }
    },
    "/ed-fi/gradingPeriodDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradingPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gradingPeriodDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradingPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GradingPeriodDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gradingPeriodDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradingPeriod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GradingPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GradingPeriod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gradingPeriodDescriptors"
        ]
      }
    },
    "/ed-fi/graduationPlanTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGraduationPlanTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GraduationPlanTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "graduationPlanTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGraduationPlanType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GraduationPlanTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GraduationPlanType resource to be created or updated.",
          "required": true,
          "x-bodyName": "GraduationPlanType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "graduationPlanTypeDescriptors"
        ]
      }
    },
    "/ed-fi/graduationPlanTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGraduationPlanTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "graduationPlanTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGraduationPlanTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GraduationPlanTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "graduationPlanTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGraduationPlanType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GraduationPlanTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GraduationPlanType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "graduationPlanTypeDescriptors"
        ]
      }
    },
    "/ed-fi/gunFreeSchoolsActReportingStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGunFreeSchoolsActReportingStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_GunFreeSchoolsActReportingStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGunFreeSchoolsActReportingStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GunFreeSchoolsActReportingStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GunFreeSchoolsActReportingStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "GunFreeSchoolsActReportingStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ]
      }
    },
    "/ed-fi/gunFreeSchoolsActReportingStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteGunFreeSchoolsActReportingStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGunFreeSchoolsActReportingStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_GunFreeSchoolsActReportingStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGunFreeSchoolsActReportingStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_GunFreeSchoolsActReportingStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the GunFreeSchoolsActReportingStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "gunFreeSchoolsActReportingStatusDescriptors"
        ]
      }
    },
    "/ed-fi/homelessPrimaryNighttimeResidenceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getHomelessPrimaryNighttimeResidences",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_HomelessPrimaryNighttimeResidenceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postHomelessPrimaryNighttimeResidence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_HomelessPrimaryNighttimeResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the HomelessPrimaryNighttimeResidence resource to be created or updated.",
          "required": true,
          "x-bodyName": "HomelessPrimaryNighttimeResidence"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/homelessPrimaryNighttimeResidenceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteHomelessPrimaryNighttimeResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getHomelessPrimaryNighttimeResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_HomelessPrimaryNighttimeResidenceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putHomelessPrimaryNighttimeResidence",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_HomelessPrimaryNighttimeResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the HomelessPrimaryNighttimeResidence resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "homelessPrimaryNighttimeResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/homelessProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getHomelessProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_HomelessProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "homelessProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postHomelessProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_HomelessProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the HomelessProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "HomelessProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "homelessProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/homelessProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteHomelessProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "homelessProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getHomelessProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_HomelessProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "homelessProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putHomelessProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_HomelessProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the HomelessProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "homelessProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/ideaPartDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIDEAParts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_IDEAPartDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "ideaPartDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIDEAPart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IDEAPartDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IDEAPart resource to be created or updated.",
          "required": true,
          "x-bodyName": "IDEAPart"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "ideaPartDescriptors"
        ]
      }
    },
    "/ed-fi/ideaPartDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteIDEAPartsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "ideaPartDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIDEAPartsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_IDEAPartDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "ideaPartDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIDEAPart",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IDEAPartDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IDEAPart resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "ideaPartDescriptors"
        ]
      }
    },
    "/ed-fi/identificationDocumentUseDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIdentificationDocumentUses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_IdentificationDocumentUseDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "identificationDocumentUseDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIdentificationDocumentUse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IdentificationDocumentUseDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IdentificationDocumentUse resource to be created or updated.",
          "required": true,
          "x-bodyName": "IdentificationDocumentUse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "identificationDocumentUseDescriptors"
        ]
      }
    },
    "/ed-fi/identificationDocumentUseDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteIdentificationDocumentUsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "identificationDocumentUseDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIdentificationDocumentUsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_IdentificationDocumentUseDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "identificationDocumentUseDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIdentificationDocumentUse",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IdentificationDocumentUseDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IdentificationDocumentUse resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "identificationDocumentUseDescriptors"
        ]
      }
    },
    "/ed-fi/immunizationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getImmunizationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ImmunizationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "immunizationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postImmunizationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ImmunizationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ImmunizationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ImmunizationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "immunizationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/immunizationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteImmunizationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "immunizationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getImmunizationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ImmunizationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "immunizationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putImmunizationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ImmunizationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ImmunizationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "immunizationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/incidentLocationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIncidentLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_IncidentLocationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "incidentLocationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIncidentLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IncidentLocationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IncidentLocation resource to be created or updated.",
          "required": true,
          "x-bodyName": "IncidentLocation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "incidentLocationDescriptors"
        ]
      }
    },
    "/ed-fi/incidentLocationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteIncidentLocationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "incidentLocationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIncidentLocationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_IncidentLocationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "incidentLocationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIncidentLocation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IncidentLocationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IncidentLocation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "incidentLocationDescriptors"
        ]
      }
    },
    "/ed-fi/indicatorDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIndicators",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_IndicatorDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "indicatorDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIndicator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IndicatorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Indicator resource to be created or updated.",
          "required": true,
          "x-bodyName": "Indicator"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "indicatorDescriptors"
        ]
      }
    },
    "/ed-fi/indicatorDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteIndicatorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "indicatorDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIndicatorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_IndicatorDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "indicatorDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIndicator",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IndicatorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Indicator resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "indicatorDescriptors"
        ]
      }
    },
    "/ed-fi/indicatorGroupDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIndicatorGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_IndicatorGroupDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "indicatorGroupDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIndicatorGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IndicatorGroupDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IndicatorGroup resource to be created or updated.",
          "required": true,
          "x-bodyName": "IndicatorGroup"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "indicatorGroupDescriptors"
        ]
      }
    },
    "/ed-fi/indicatorGroupDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteIndicatorGroupsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "indicatorGroupDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIndicatorGroupsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_IndicatorGroupDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "indicatorGroupDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIndicatorGroup",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IndicatorGroupDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IndicatorGroup resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "indicatorGroupDescriptors"
        ]
      }
    },
    "/ed-fi/indicatorLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getIndicatorLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_IndicatorLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "indicatorLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIndicatorLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IndicatorLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IndicatorLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "IndicatorLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "indicatorLevelDescriptors"
        ]
      }
    },
    "/ed-fi/indicatorLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteIndicatorLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "indicatorLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getIndicatorLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_IndicatorLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "indicatorLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIndicatorLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_IndicatorLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the IndicatorLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "indicatorLevelDescriptors"
        ]
      }
    },
    "/ed-fi/institutionTelephoneNumberTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInstitutionTelephoneNumberTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InstitutionTelephoneNumberTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInstitutionTelephoneNumberType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InstitutionTelephoneNumberTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InstitutionTelephoneNumberType resource to be created or updated.",
          "required": true,
          "x-bodyName": "InstitutionTelephoneNumberType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ]
      }
    },
    "/ed-fi/institutionTelephoneNumberTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInstitutionTelephoneNumberTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInstitutionTelephoneNumberTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InstitutionTelephoneNumberTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInstitutionTelephoneNumberType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InstitutionTelephoneNumberTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InstitutionTelephoneNumberType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "institutionTelephoneNumberTypeDescriptors"
        ]
      }
    },
    "/ed-fi/interactivityStyleDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInteractivityStyles",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InteractivityStyleDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "interactivityStyleDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInteractivityStyle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InteractivityStyleDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InteractivityStyle resource to be created or updated.",
          "required": true,
          "x-bodyName": "InteractivityStyle"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "interactivityStyleDescriptors"
        ]
      }
    },
    "/ed-fi/interactivityStyleDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInteractivityStylesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "interactivityStyleDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInteractivityStylesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InteractivityStyleDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "interactivityStyleDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInteractivityStyle",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InteractivityStyleDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InteractivityStyle resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "interactivityStyleDescriptors"
        ]
      }
    },
    "/ed-fi/internetAccessDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInternetAccesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InternetAccessDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "internetAccessDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInternetAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InternetAccessDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InternetAccess resource to be created or updated.",
          "required": true,
          "x-bodyName": "InternetAccess"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "internetAccessDescriptors"
        ]
      }
    },
    "/ed-fi/internetAccessDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInternetAccessesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "internetAccessDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInternetAccessesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InternetAccessDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "internetAccessDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInternetAccess",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InternetAccessDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InternetAccess resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "internetAccessDescriptors"
        ]
      }
    },
    "/ed-fi/internetAccessTypeInResidenceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInternetAccessTypeInResidences",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InternetAccessTypeInResidenceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInternetAccessTypeInResidence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InternetAccessTypeInResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InternetAccessTypeInResidence resource to be created or updated.",
          "required": true,
          "x-bodyName": "InternetAccessTypeInResidence"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/internetAccessTypeInResidenceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInternetAccessTypeInResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInternetAccessTypeInResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InternetAccessTypeInResidenceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInternetAccessTypeInResidence",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InternetAccessTypeInResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InternetAccessTypeInResidence resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "internetAccessTypeInResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/internetPerformanceInResidenceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInternetPerformanceInResidences",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InternetPerformanceInResidenceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInternetPerformanceInResidence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InternetPerformanceInResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InternetPerformanceInResidence resource to be created or updated.",
          "required": true,
          "x-bodyName": "InternetPerformanceInResidence"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/internetPerformanceInResidenceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInternetPerformanceInResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInternetPerformanceInResidencesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InternetPerformanceInResidenceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInternetPerformanceInResidence",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InternetPerformanceInResidenceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InternetPerformanceInResidence resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "internetPerformanceInResidenceDescriptors"
        ]
      }
    },
    "/ed-fi/interventionClassDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionClasses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InterventionClassDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "interventionClassDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionClass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionClassDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InterventionClass resource to be created or updated.",
          "required": true,
          "x-bodyName": "InterventionClass"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "interventionClassDescriptors"
        ]
      }
    },
    "/ed-fi/interventionClassDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionClassesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "interventionClassDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionClassesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InterventionClassDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "interventionClassDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionClass",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionClassDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InterventionClass resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "interventionClassDescriptors"
        ]
      }
    },
    "/ed-fi/interventionEffectivenessRatingDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionEffectivenessRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_InterventionEffectivenessRatingDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionEffectivenessRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionEffectivenessRatingDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InterventionEffectivenessRating resource to be created or updated.",
          "required": true,
          "x-bodyName": "InterventionEffectivenessRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ]
      }
    },
    "/ed-fi/interventionEffectivenessRatingDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionEffectivenessRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionEffectivenessRatingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_InterventionEffectivenessRatingDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionEffectivenessRating",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_InterventionEffectivenessRatingDescriptor"
              }
            }
          },
          "description": "The JSON representation of the InterventionEffectivenessRating resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "interventionEffectivenessRatingDescriptors"
        ]
      }
    },
    "/ed-fi/languageDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLanguages",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LanguageDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "languageDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLanguage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LanguageDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Language resource to be created or updated.",
          "required": true,
          "x-bodyName": "Language"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "languageDescriptors"
        ]
      }
    },
    "/ed-fi/languageDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLanguagesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "languageDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLanguagesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LanguageDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "languageDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLanguage",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LanguageDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Language resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "languageDescriptors"
        ]
      }
    },
    "/ed-fi/languageInstructionProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLanguageInstructionProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LanguageInstructionProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLanguageInstructionProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LanguageInstructionProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LanguageInstructionProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "LanguageInstructionProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/languageInstructionProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLanguageInstructionProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLanguageInstructionProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LanguageInstructionProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLanguageInstructionProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LanguageInstructionProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LanguageInstructionProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "languageInstructionProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/languageUseDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLanguageUses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LanguageUseDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "languageUseDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLanguageUse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LanguageUseDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LanguageUse resource to be created or updated.",
          "required": true,
          "x-bodyName": "LanguageUse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "languageUseDescriptors"
        ]
      }
    },
    "/ed-fi/languageUseDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLanguageUsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "languageUseDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLanguageUsesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LanguageUseDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "languageUseDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLanguageUse",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LanguageUseDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LanguageUse resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "languageUseDescriptors"
        ]
      }
    },
    "/ed-fi/learningStandardCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LearningStandardCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "learningStandardCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "LearningStandardCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "learningStandardCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/learningStandardCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "learningStandardCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LearningStandardCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "learningStandardCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "learningStandardCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/learningStandardEquivalenceStrengthDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardEquivalenceStrengths",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceStrengthDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardEquivalenceStrength",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceStrengthDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardEquivalenceStrength resource to be created or updated.",
          "required": true,
          "x-bodyName": "LearningStandardEquivalenceStrength"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ]
      }
    },
    "/ed-fi/learningStandardEquivalenceStrengthDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardEquivalenceStrengthsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardEquivalenceStrengthsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceStrengthDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardEquivalenceStrength",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardEquivalenceStrengthDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardEquivalenceStrength resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "learningStandardEquivalenceStrengthDescriptors"
        ]
      }
    },
    "/ed-fi/learningStandardScopeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardScopes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LearningStandardScopeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "learningStandardScopeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardScope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardScopeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardScope resource to be created or updated.",
          "required": true,
          "x-bodyName": "LearningStandardScope"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "learningStandardScopeDescriptors"
        ]
      }
    },
    "/ed-fi/learningStandardScopeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardScopesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "learningStandardScopeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardScopesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LearningStandardScopeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "learningStandardScopeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardScope",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LearningStandardScopeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LearningStandardScope resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "learningStandardScopeDescriptors"
        ]
      }
    },
    "/ed-fi/levelOfEducationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLevelOfEducations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LevelOfEducationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "levelOfEducationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLevelOfEducation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LevelOfEducationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LevelOfEducation resource to be created or updated.",
          "required": true,
          "x-bodyName": "LevelOfEducation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "levelOfEducationDescriptors"
        ]
      }
    },
    "/ed-fi/levelOfEducationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLevelOfEducationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "levelOfEducationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLevelOfEducationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LevelOfEducationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "levelOfEducationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLevelOfEducation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LevelOfEducationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LevelOfEducation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "levelOfEducationDescriptors"
        ]
      }
    },
    "/ed-fi/licenseStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLicenseStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LicenseStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "licenseStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLicenseStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LicenseStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LicenseStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "LicenseStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "licenseStatusDescriptors"
        ]
      }
    },
    "/ed-fi/licenseStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLicenseStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "licenseStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLicenseStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LicenseStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "licenseStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLicenseStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LicenseStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LicenseStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "licenseStatusDescriptors"
        ]
      }
    },
    "/ed-fi/licenseTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLicenseTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LicenseTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "licenseTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLicenseType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LicenseTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LicenseType resource to be created or updated.",
          "required": true,
          "x-bodyName": "LicenseType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "licenseTypeDescriptors"
        ]
      }
    },
    "/ed-fi/licenseTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLicenseTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "licenseTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLicenseTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LicenseTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "licenseTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLicenseType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LicenseTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LicenseType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "licenseTypeDescriptors"
        ]
      }
    },
    "/ed-fi/limitedEnglishProficiencyDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLimitedEnglishProficiencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LimitedEnglishProficiencyDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLimitedEnglishProficiency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LimitedEnglishProficiencyDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LimitedEnglishProficiency resource to be created or updated.",
          "required": true,
          "x-bodyName": "LimitedEnglishProficiency"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ]
      }
    },
    "/ed-fi/limitedEnglishProficiencyDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLimitedEnglishProficienciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLimitedEnglishProficienciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LimitedEnglishProficiencyDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLimitedEnglishProficiency",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LimitedEnglishProficiencyDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LimitedEnglishProficiency resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "limitedEnglishProficiencyDescriptors"
        ]
      }
    },
    "/ed-fi/localEducationAgencyCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalEducationAgencyCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocalEducationAgencyCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalEducationAgencyCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalEducationAgencyCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LocalEducationAgencyCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "LocalEducationAgencyCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/localEducationAgencyCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalEducationAgencyCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalEducationAgencyCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocalEducationAgencyCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalEducationAgencyCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocalEducationAgencyCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the LocalEducationAgencyCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localEducationAgencyCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/localeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocales",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_LocaleDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "localeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocale",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocaleDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Locale resource to be created or updated.",
          "required": true,
          "x-bodyName": "Locale"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "localeDescriptors"
        ]
      }
    },
    "/ed-fi/localeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "localeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_LocaleDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "localeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocale",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_LocaleDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Locale resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "localeDescriptors"
        ]
      }
    },
    "/ed-fi/magnetSpecialProgramEmphasisSchoolDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMagnetSpecialProgramEmphasisSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_MagnetSpecialProgramEmphasisSchoolDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMagnetSpecialProgramEmphasisSchool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MagnetSpecialProgramEmphasisSchoolDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MagnetSpecialProgramEmphasisSchool resource to be created or updated.",
          "required": true,
          "x-bodyName": "MagnetSpecialProgramEmphasisSchool"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ]
      }
    },
    "/ed-fi/magnetSpecialProgramEmphasisSchoolDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteMagnetSpecialProgramEmphasisSchoolsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMagnetSpecialProgramEmphasisSchoolsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_MagnetSpecialProgramEmphasisSchoolDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMagnetSpecialProgramEmphasisSchool",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MagnetSpecialProgramEmphasisSchoolDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MagnetSpecialProgramEmphasisSchool resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "magnetSpecialProgramEmphasisSchoolDescriptors"
        ]
      }
    },
    "/ed-fi/mediumOfInstructionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMediumOfInstructions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_MediumOfInstructionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "mediumOfInstructionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMediumOfInstruction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MediumOfInstructionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MediumOfInstruction resource to be created or updated.",
          "required": true,
          "x-bodyName": "MediumOfInstruction"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "mediumOfInstructionDescriptors"
        ]
      }
    },
    "/ed-fi/mediumOfInstructionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteMediumOfInstructionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "mediumOfInstructionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMediumOfInstructionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_MediumOfInstructionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "mediumOfInstructionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMediumOfInstruction",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MediumOfInstructionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MediumOfInstruction resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "mediumOfInstructionDescriptors"
        ]
      }
    },
    "/ed-fi/methodCreditEarnedDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMethodCreditEarneds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_MethodCreditEarnedDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "methodCreditEarnedDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMethodCreditEarned",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MethodCreditEarnedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MethodCreditEarned resource to be created or updated.",
          "required": true,
          "x-bodyName": "MethodCreditEarned"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "methodCreditEarnedDescriptors"
        ]
      }
    },
    "/ed-fi/methodCreditEarnedDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteMethodCreditEarnedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "methodCreditEarnedDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMethodCreditEarnedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_MethodCreditEarnedDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "methodCreditEarnedDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMethodCreditEarned",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MethodCreditEarnedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MethodCreditEarned resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "methodCreditEarnedDescriptors"
        ]
      }
    },
    "/ed-fi/migrantEducationProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMigrantEducationProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_MigrantEducationProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMigrantEducationProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MigrantEducationProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MigrantEducationProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "MigrantEducationProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/migrantEducationProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteMigrantEducationProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMigrantEducationProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_MigrantEducationProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMigrantEducationProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MigrantEducationProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the MigrantEducationProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "migrantEducationProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/modelEntityDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getModelEntities",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ModelEntityDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "modelEntityDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postModelEntity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ModelEntityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ModelEntity resource to be created or updated.",
          "required": true,
          "x-bodyName": "ModelEntity"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "modelEntityDescriptors"
        ]
      }
    },
    "/ed-fi/modelEntityDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteModelEntitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "modelEntityDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getModelEntitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ModelEntityDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "modelEntityDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putModelEntity",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ModelEntityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ModelEntity resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "modelEntityDescriptors"
        ]
      }
    },
    "/ed-fi/monitoredDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getMonitoreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_MonitoredDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "monitoredDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postMonitored",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MonitoredDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Monitored resource to be created or updated.",
          "required": true,
          "x-bodyName": "Monitored"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "monitoredDescriptors"
        ]
      }
    },
    "/ed-fi/monitoredDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteMonitoredsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "monitoredDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getMonitoredsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_MonitoredDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "monitoredDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putMonitored",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_MonitoredDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Monitored resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "monitoredDescriptors"
        ]
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNeglectedOrDelinquentPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNeglectedOrDelinquentProgram",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NeglectedOrDelinquentProgram resource to be created or updated.",
          "required": true,
          "x-bodyName": "NeglectedOrDelinquentProgram"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ]
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteNeglectedOrDelinquentProgramsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNeglectedOrDelinquentProgramsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNeglectedOrDelinquentProgram",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NeglectedOrDelinquentProgram resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "neglectedOrDelinquentProgramDescriptors"
        ]
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNeglectedOrDelinquentProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNeglectedOrDelinquentProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NeglectedOrDelinquentProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "NeglectedOrDelinquentProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/neglectedOrDelinquentProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteNeglectedOrDelinquentProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNeglectedOrDelinquentProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNeglectedOrDelinquentProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NeglectedOrDelinquentProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NeglectedOrDelinquentProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "neglectedOrDelinquentProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/networkPurposeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNetworkPurposes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_NetworkPurposeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "networkPurposeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNetworkPurpose",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NetworkPurposeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NetworkPurpose resource to be created or updated.",
          "required": true,
          "x-bodyName": "NetworkPurpose"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "networkPurposeDescriptors"
        ]
      }
    },
    "/ed-fi/networkPurposeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteNetworkPurposesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "networkPurposeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNetworkPurposesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_NetworkPurposeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "networkPurposeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNetworkPurpose",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NetworkPurposeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NetworkPurpose resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "networkPurposeDescriptors"
        ]
      }
    },
    "/ed-fi/nonMedicalImmunizationExemptionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getNonMedicalImmunizationExemptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_NonMedicalImmunizationExemptionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postNonMedicalImmunizationExemption",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NonMedicalImmunizationExemptionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NonMedicalImmunizationExemption resource to be created or updated.",
          "required": true,
          "x-bodyName": "NonMedicalImmunizationExemption"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ]
      }
    },
    "/ed-fi/nonMedicalImmunizationExemptionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteNonMedicalImmunizationExemptionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getNonMedicalImmunizationExemptionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_NonMedicalImmunizationExemptionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putNonMedicalImmunizationExemption",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_NonMedicalImmunizationExemptionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the NonMedicalImmunizationExemption resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "nonMedicalImmunizationExemptionDescriptors"
        ]
      }
    },
    "/ed-fi/operationalStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOperationalStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_OperationalStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "operationalStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOperationalStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OperationalStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the OperationalStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "OperationalStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "operationalStatusDescriptors"
        ]
      }
    },
    "/ed-fi/operationalStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteOperationalStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "operationalStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOperationalStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_OperationalStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "operationalStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOperationalStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OperationalStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the OperationalStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "operationalStatusDescriptors"
        ]
      }
    },
    "/ed-fi/otherNameTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOtherNameTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_OtherNameTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "otherNameTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOtherNameType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OtherNameTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the OtherNameType resource to be created or updated.",
          "required": true,
          "x-bodyName": "OtherNameType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "otherNameTypeDescriptors"
        ]
      }
    },
    "/ed-fi/otherNameTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteOtherNameTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "otherNameTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOtherNameTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_OtherNameTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "otherNameTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOtherNameType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_OtherNameTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the OtherNameType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "otherNameTypeDescriptors"
        ]
      }
    },
    "/ed-fi/participationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getParticipations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ParticipationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "participationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postParticipation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ParticipationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Participation resource to be created or updated.",
          "required": true,
          "x-bodyName": "Participation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "participationDescriptors"
        ]
      }
    },
    "/ed-fi/participationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteParticipationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "participationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getParticipationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ParticipationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "participationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putParticipation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ParticipationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Participation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "participationDescriptors"
        ]
      }
    },
    "/ed-fi/participationStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getParticipationStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ParticipationStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "participationStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postParticipationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ParticipationStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ParticipationStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "ParticipationStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "participationStatusDescriptors"
        ]
      }
    },
    "/ed-fi/participationStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteParticipationStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "participationStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getParticipationStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ParticipationStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "participationStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putParticipationStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ParticipationStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ParticipationStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "participationStatusDescriptors"
        ]
      }
    },
    "/ed-fi/performanceBaseConversionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPerformanceBaseConversions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PerformanceBaseConversionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "performanceBaseConversionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerformanceBaseConversion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PerformanceBaseConversionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceBaseConversion resource to be created or updated.",
          "required": true,
          "x-bodyName": "PerformanceBaseConversion"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "performanceBaseConversionDescriptors"
        ]
      }
    },
    "/ed-fi/performanceBaseConversionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePerformanceBaseConversionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "performanceBaseConversionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPerformanceBaseConversionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PerformanceBaseConversionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "performanceBaseConversionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerformanceBaseConversion",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PerformanceBaseConversionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceBaseConversion resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "performanceBaseConversionDescriptors"
        ]
      }
    },
    "/ed-fi/performanceLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPerformanceLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PerformanceLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "performanceLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerformanceLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PerformanceLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "PerformanceLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "performanceLevelDescriptors"
        ]
      }
    },
    "/ed-fi/performanceLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePerformanceLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "performanceLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPerformanceLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PerformanceLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "performanceLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerformanceLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PerformanceLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "performanceLevelDescriptors"
        ]
      }
    },
    "/ed-fi/personalInformationVerificationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPersonalInformationVerifications",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PersonalInformationVerificationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "personalInformationVerificationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPersonalInformationVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PersonalInformationVerificationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PersonalInformationVerification resource to be created or updated.",
          "required": true,
          "x-bodyName": "PersonalInformationVerification"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "personalInformationVerificationDescriptors"
        ]
      }
    },
    "/ed-fi/personalInformationVerificationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePersonalInformationVerificationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "personalInformationVerificationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPersonalInformationVerificationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PersonalInformationVerificationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "personalInformationVerificationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPersonalInformationVerification",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PersonalInformationVerificationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PersonalInformationVerification resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "personalInformationVerificationDescriptors"
        ]
      }
    },
    "/ed-fi/platformTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPlatformTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PlatformTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "platformTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPlatformType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PlatformTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PlatformType resource to be created or updated.",
          "required": true,
          "x-bodyName": "PlatformType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "platformTypeDescriptors"
        ]
      }
    },
    "/ed-fi/platformTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePlatformTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "platformTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPlatformTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PlatformTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "platformTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPlatformType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PlatformTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PlatformType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "platformTypeDescriptors"
        ]
      }
    },
    "/ed-fi/populationServedDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPopulationServeds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PopulationServedDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "populationServedDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPopulationServed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PopulationServedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PopulationServed resource to be created or updated.",
          "required": true,
          "x-bodyName": "PopulationServed"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "populationServedDescriptors"
        ]
      }
    },
    "/ed-fi/populationServedDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePopulationServedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "populationServedDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPopulationServedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PopulationServedDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "populationServedDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPopulationServed",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PopulationServedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PopulationServed resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "populationServedDescriptors"
        ]
      }
    },
    "/ed-fi/postSecondaryEventCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryEventCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PostSecondaryEventCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryEventCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryEventCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "PostSecondaryEventCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/postSecondaryEventCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PostSecondaryEventCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryEventCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryEventCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "postSecondaryEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/postSecondaryInstitutionLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryInstitutionLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PostSecondaryInstitutionLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryInstitutionLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryInstitutionLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryInstitutionLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "PostSecondaryInstitutionLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ]
      }
    },
    "/ed-fi/postSecondaryInstitutionLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryInstitutionLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryInstitutionLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PostSecondaryInstitutionLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryInstitutionLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostSecondaryInstitutionLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PostSecondaryInstitutionLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "postSecondaryInstitutionLevelDescriptors"
        ]
      }
    },
    "/ed-fi/postingResultDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostingResults",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PostingResultDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "postingResultDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostingResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostingResultDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PostingResult resource to be created or updated.",
          "required": true,
          "x-bodyName": "PostingResult"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "postingResultDescriptors"
        ]
      }
    },
    "/ed-fi/postingResultDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePostingResultsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "postingResultDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostingResultsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PostingResultDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "postingResultDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostingResult",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PostingResultDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PostingResult resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "postingResultDescriptors"
        ]
      }
    },
    "/ed-fi/primaryLearningDeviceAccessDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrimaryLearningDeviceAccesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAccessDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPrimaryLearningDeviceAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAccessDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PrimaryLearningDeviceAccess resource to be created or updated.",
          "required": true,
          "x-bodyName": "PrimaryLearningDeviceAccess"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ]
      }
    },
    "/ed-fi/primaryLearningDeviceAccessDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePrimaryLearningDeviceAccessesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPrimaryLearningDeviceAccessesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAccessDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPrimaryLearningDeviceAccess",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAccessDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PrimaryLearningDeviceAccess resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "primaryLearningDeviceAccessDescriptors"
        ]
      }
    },
    "/ed-fi/primaryLearningDeviceAwayFromSchoolDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrimaryLearningDeviceAwayFromSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAwayFromSchoolDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPrimaryLearningDeviceAwayFromSchool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAwayFromSchoolDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PrimaryLearningDeviceAwayFromSchool resource to be created or updated.",
          "required": true,
          "x-bodyName": "PrimaryLearningDeviceAwayFromSchool"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ]
      }
    },
    "/ed-fi/primaryLearningDeviceAwayFromSchoolDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePrimaryLearningDeviceAwayFromSchoolsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPrimaryLearningDeviceAwayFromSchoolsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAwayFromSchoolDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPrimaryLearningDeviceAwayFromSchool",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceAwayFromSchoolDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PrimaryLearningDeviceAwayFromSchool resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "primaryLearningDeviceAwayFromSchoolDescriptors"
        ]
      }
    },
    "/ed-fi/primaryLearningDeviceProviderDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrimaryLearningDeviceProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceProviderDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPrimaryLearningDeviceProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceProviderDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PrimaryLearningDeviceProvider resource to be created or updated.",
          "required": true,
          "x-bodyName": "PrimaryLearningDeviceProvider"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ]
      }
    },
    "/ed-fi/primaryLearningDeviceProviderDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePrimaryLearningDeviceProvidersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPrimaryLearningDeviceProvidersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceProviderDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPrimaryLearningDeviceProvider",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PrimaryLearningDeviceProviderDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PrimaryLearningDeviceProvider resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "primaryLearningDeviceProviderDescriptors"
        ]
      }
    },
    "/ed-fi/proficiencyDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProficiencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProficiencyDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "proficiencyDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProficiency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProficiencyDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Proficiency resource to be created or updated.",
          "required": true,
          "x-bodyName": "Proficiency"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "proficiencyDescriptors"
        ]
      }
    },
    "/ed-fi/proficiencyDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProficienciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "proficiencyDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProficienciesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProficiencyDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "proficiencyDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProficiency",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProficiencyDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Proficiency resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "proficiencyDescriptors"
        ]
      }
    },
    "/ed-fi/programAssignmentDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramAssignments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramAssignmentDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programAssignmentDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramAssignmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramAssignment resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramAssignment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programAssignmentDescriptors"
        ]
      }
    },
    "/ed-fi/programAssignmentDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramAssignmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programAssignmentDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramAssignmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramAssignmentDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programAssignmentDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramAssignment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramAssignmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramAssignment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programAssignmentDescriptors"
        ]
      }
    },
    "/ed-fi/programCharacteristicDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramCharacteristicDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programCharacteristicDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramCharacteristic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramCharacteristic resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramCharacteristic"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/programCharacteristicDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programCharacteristicDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramCharacteristicDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programCharacteristicDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramCharacteristic",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramCharacteristic resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/programEvaluationPeriodDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramEvaluationPeriodDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programEvaluationPeriodDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationPeriod resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramEvaluationPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programEvaluationPeriodDescriptors"
        ]
      }
    },
    "/ed-fi/programEvaluationPeriodDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programEvaluationPeriodDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramEvaluationPeriodDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programEvaluationPeriodDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationPeriod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationPeriod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programEvaluationPeriodDescriptors"
        ]
      }
    },
    "/ed-fi/programEvaluationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramEvaluationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programEvaluationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramEvaluationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programEvaluationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/programEvaluationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programEvaluationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramEvaluationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programEvaluationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramEvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramEvaluationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programEvaluationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/programSponsorDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramSponsors",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramSponsorDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programSponsorDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramSponsor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramSponsorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramSponsor resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramSponsor"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programSponsorDescriptors"
        ]
      }
    },
    "/ed-fi/programSponsorDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramSponsorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programSponsorDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramSponsorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramSponsorDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programSponsorDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramSponsor",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramSponsorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramSponsor resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programSponsorDescriptors"
        ]
      }
    },
    "/ed-fi/programTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgramTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "programTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgramType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "programTypeDescriptors"
        ]
      }
    },
    "/ed-fi/programTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "programTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgramTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "programTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgramTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgramType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "programTypeDescriptors"
        ]
      }
    },
    "/ed-fi/progressDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgressDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "progressDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgressDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Progress resource to be created or updated.",
          "required": true,
          "x-bodyName": "Progress"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "progressDescriptors"
        ]
      }
    },
    "/ed-fi/progressDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgressesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "progressDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgressesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgressDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "progressDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgress",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgressDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Progress resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "progressDescriptors"
        ]
      }
    },
    "/ed-fi/progressLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgressLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProgressLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "progressLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgressLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgressLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgressLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProgressLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "progressLevelDescriptors"
        ]
      }
    },
    "/ed-fi/progressLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgressLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "progressLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgressLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProgressLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "progressLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgressLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProgressLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProgressLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "progressLevelDescriptors"
        ]
      }
    },
    "/ed-fi/providerCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProviderCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProviderCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "providerCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProviderCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProviderCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProviderCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProviderCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "providerCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/providerCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProviderCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "providerCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProviderCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProviderCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "providerCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProviderCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProviderCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProviderCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "providerCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/providerProfitabilityDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProviderProfitabilities",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProviderProfitabilityDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "providerProfitabilityDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProviderProfitability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProviderProfitabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProviderProfitability resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProviderProfitability"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "providerProfitabilityDescriptors"
        ]
      }
    },
    "/ed-fi/providerProfitabilityDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProviderProfitabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "providerProfitabilityDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProviderProfitabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProviderProfitabilityDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "providerProfitabilityDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProviderProfitability",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProviderProfitabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProviderProfitability resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "providerProfitabilityDescriptors"
        ]
      }
    },
    "/ed-fi/providerStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProviderStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ProviderStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "providerStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProviderStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProviderStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProviderStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "ProviderStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "providerStatusDescriptors"
        ]
      }
    },
    "/ed-fi/providerStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteProviderStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "providerStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProviderStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ProviderStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "providerStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProviderStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ProviderStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ProviderStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "providerStatusDescriptors"
        ]
      }
    },
    "/ed-fi/publicationStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPublicationStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_PublicationStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "publicationStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPublicationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PublicationStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PublicationStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "PublicationStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "publicationStatusDescriptors"
        ]
      }
    },
    "/ed-fi/publicationStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deletePublicationStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "publicationStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPublicationStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_PublicationStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "publicationStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPublicationStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_PublicationStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PublicationStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "publicationStatusDescriptors"
        ]
      }
    },
    "/ed-fi/questionFormDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getQuestionForms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_QuestionFormDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "questionFormDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postQuestionForm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_QuestionFormDescriptor"
              }
            }
          },
          "description": "The JSON representation of the QuestionForm resource to be created or updated.",
          "required": true,
          "x-bodyName": "QuestionForm"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "questionFormDescriptors"
        ]
      }
    },
    "/ed-fi/questionFormDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteQuestionFormsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "questionFormDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getQuestionFormsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_QuestionFormDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "questionFormDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putQuestionForm",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_QuestionFormDescriptor"
              }
            }
          },
          "description": "The JSON representation of the QuestionForm resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "questionFormDescriptors"
        ]
      }
    },
    "/ed-fi/raceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRaces",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RaceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "raceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RaceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Race resource to be created or updated.",
          "required": true,
          "x-bodyName": "Race"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "raceDescriptors"
        ]
      }
    },
    "/ed-fi/raceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRacesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "raceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRacesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RaceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "raceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRace",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RaceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Race resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "raceDescriptors"
        ]
      }
    },
    "/ed-fi/ratingLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRatingLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RatingLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "ratingLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRatingLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RatingLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "RatingLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "ratingLevelDescriptors"
        ]
      }
    },
    "/ed-fi/ratingLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "ratingLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RatingLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "ratingLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRatingLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RatingLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "ratingLevelDescriptors"
        ]
      }
    },
    "/ed-fi/reasonExitedDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReasonExiteds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ReasonExitedDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "reasonExitedDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReasonExited",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReasonExitedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReasonExited resource to be created or updated.",
          "required": true,
          "x-bodyName": "ReasonExited"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "reasonExitedDescriptors"
        ]
      }
    },
    "/ed-fi/reasonExitedDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteReasonExitedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "reasonExitedDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReasonExitedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ReasonExitedDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "reasonExitedDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReasonExited",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReasonExitedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReasonExited resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "reasonExitedDescriptors"
        ]
      }
    },
    "/ed-fi/reasonNotTestedDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReasonNotTesteds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ReasonNotTestedDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "reasonNotTestedDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReasonNotTested",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReasonNotTestedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReasonNotTested resource to be created or updated.",
          "required": true,
          "x-bodyName": "ReasonNotTested"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "reasonNotTestedDescriptors"
        ]
      }
    },
    "/ed-fi/reasonNotTestedDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteReasonNotTestedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "reasonNotTestedDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReasonNotTestedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ReasonNotTestedDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "reasonNotTestedDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReasonNotTested",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReasonNotTestedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReasonNotTested resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "reasonNotTestedDescriptors"
        ]
      }
    },
    "/ed-fi/recognitionTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRecognitionTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RecognitionTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "recognitionTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRecognitionType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RecognitionTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RecognitionType resource to be created or updated.",
          "required": true,
          "x-bodyName": "RecognitionType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "recognitionTypeDescriptors"
        ]
      }
    },
    "/ed-fi/recognitionTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRecognitionTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "recognitionTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRecognitionTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RecognitionTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "recognitionTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRecognitionType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RecognitionTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RecognitionType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "recognitionTypeDescriptors"
        ]
      }
    },
    "/ed-fi/relationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRelations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RelationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "relationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRelation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RelationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Relation resource to be created or updated.",
          "required": true,
          "x-bodyName": "Relation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "relationDescriptors"
        ]
      }
    },
    "/ed-fi/relationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRelationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "relationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRelationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RelationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "relationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRelation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RelationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Relation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "relationDescriptors"
        ]
      }
    },
    "/ed-fi/repeatIdentifierDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRepeatIdentifiers",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RepeatIdentifierDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "repeatIdentifierDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRepeatIdentifier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RepeatIdentifierDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RepeatIdentifier resource to be created or updated.",
          "required": true,
          "x-bodyName": "RepeatIdentifier"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "repeatIdentifierDescriptors"
        ]
      }
    },
    "/ed-fi/repeatIdentifierDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRepeatIdentifiersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "repeatIdentifierDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRepeatIdentifiersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RepeatIdentifierDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "repeatIdentifierDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRepeatIdentifier",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RepeatIdentifierDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RepeatIdentifier resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "repeatIdentifierDescriptors"
        ]
      }
    },
    "/ed-fi/reporterDescriptionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReporterDescriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ReporterDescriptionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "reporterDescriptionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReporterDescription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReporterDescriptionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReporterDescription resource to be created or updated.",
          "required": true,
          "x-bodyName": "ReporterDescription"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "reporterDescriptionDescriptors"
        ]
      }
    },
    "/ed-fi/reporterDescriptionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteReporterDescriptionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "reporterDescriptionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReporterDescriptionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ReporterDescriptionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "reporterDescriptionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReporterDescription",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReporterDescriptionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReporterDescription resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "reporterDescriptionDescriptors"
        ]
      }
    },
    "/ed-fi/reportingTagDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReportingTags",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ReportingTagDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "reportingTagDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReportingTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReportingTagDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReportingTag resource to be created or updated.",
          "required": true,
          "x-bodyName": "ReportingTag"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "reportingTagDescriptors"
        ]
      }
    },
    "/ed-fi/reportingTagDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteReportingTagsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "reportingTagDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReportingTagsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ReportingTagDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "reportingTagDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReportingTag",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ReportingTagDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ReportingTag resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "reportingTagDescriptors"
        ]
      }
    },
    "/ed-fi/residencyStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResidencyStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ResidencyStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "residencyStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResidencyStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResidencyStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ResidencyStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "ResidencyStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "residencyStatusDescriptors"
        ]
      }
    },
    "/ed-fi/residencyStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteResidencyStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "residencyStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResidencyStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ResidencyStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "residencyStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResidencyStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResidencyStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ResidencyStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "residencyStatusDescriptors"
        ]
      }
    },
    "/ed-fi/responseIndicatorDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResponseIndicators",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ResponseIndicatorDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "responseIndicatorDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResponseIndicator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResponseIndicatorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ResponseIndicator resource to be created or updated.",
          "required": true,
          "x-bodyName": "ResponseIndicator"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "responseIndicatorDescriptors"
        ]
      }
    },
    "/ed-fi/responseIndicatorDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteResponseIndicatorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "responseIndicatorDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResponseIndicatorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ResponseIndicatorDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "responseIndicatorDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResponseIndicator",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResponseIndicatorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ResponseIndicator resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "responseIndicatorDescriptors"
        ]
      }
    },
    "/ed-fi/responsibilityDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResponsibilities",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ResponsibilityDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "responsibilityDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResponsibility",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResponsibilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Responsibility resource to be created or updated.",
          "required": true,
          "x-bodyName": "Responsibility"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "responsibilityDescriptors"
        ]
      }
    },
    "/ed-fi/responsibilityDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteResponsibilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "responsibilityDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResponsibilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ResponsibilityDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "responsibilityDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResponsibility",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResponsibilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Responsibility resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "responsibilityDescriptors"
        ]
      }
    },
    "/ed-fi/restraintEventReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRestraintEventReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RestraintEventReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "restraintEventReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRestraintEventReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RestraintEventReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RestraintEventReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "RestraintEventReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "restraintEventReasonDescriptors"
        ]
      }
    },
    "/ed-fi/restraintEventReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRestraintEventReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "restraintEventReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRestraintEventReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RestraintEventReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "restraintEventReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRestraintEventReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RestraintEventReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RestraintEventReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "restraintEventReasonDescriptors"
        ]
      }
    },
    "/ed-fi/resultDatatypeTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getResultDatatypeTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ResultDatatypeTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "resultDatatypeTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postResultDatatypeType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResultDatatypeTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ResultDatatypeType resource to be created or updated.",
          "required": true,
          "x-bodyName": "ResultDatatypeType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "resultDatatypeTypeDescriptors"
        ]
      }
    },
    "/ed-fi/resultDatatypeTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteResultDatatypeTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "resultDatatypeTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getResultDatatypeTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ResultDatatypeTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "resultDatatypeTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putResultDatatypeType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ResultDatatypeTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ResultDatatypeType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "resultDatatypeTypeDescriptors"
        ]
      }
    },
    "/ed-fi/retestIndicatorDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRetestIndicators",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_RetestIndicatorDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "retestIndicatorDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRetestIndicator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RetestIndicatorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RetestIndicator resource to be created or updated.",
          "required": true,
          "x-bodyName": "RetestIndicator"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "retestIndicatorDescriptors"
        ]
      }
    },
    "/ed-fi/retestIndicatorDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteRetestIndicatorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "retestIndicatorDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRetestIndicatorsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_RetestIndicatorDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "retestIndicatorDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRetestIndicator",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_RetestIndicatorDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RetestIndicator resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "retestIndicatorDescriptors"
        ]
      }
    },
    "/ed-fi/schoolCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SchoolCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schoolCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "SchoolCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schoolCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/schoolCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schoolCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SchoolCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schoolCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schoolCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/schoolChoiceBasisDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolChoiceBases",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SchoolChoiceBasisDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schoolChoiceBasisDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolChoiceBasis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolChoiceBasisDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolChoiceBasis resource to be created or updated.",
          "required": true,
          "x-bodyName": "SchoolChoiceBasis"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schoolChoiceBasisDescriptors"
        ]
      }
    },
    "/ed-fi/schoolChoiceBasisDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolChoiceBasesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schoolChoiceBasisDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolChoiceBasesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SchoolChoiceBasisDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schoolChoiceBasisDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolChoiceBasis",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolChoiceBasisDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolChoiceBasis resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schoolChoiceBasisDescriptors"
        ]
      }
    },
    "/ed-fi/schoolChoiceImplementStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolChoiceImplementStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SchoolChoiceImplementStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolChoiceImplementStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolChoiceImplementStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolChoiceImplementStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "SchoolChoiceImplementStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ]
      }
    },
    "/ed-fi/schoolChoiceImplementStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolChoiceImplementStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolChoiceImplementStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SchoolChoiceImplementStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolChoiceImplementStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolChoiceImplementStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolChoiceImplementStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schoolChoiceImplementStatusDescriptors"
        ]
      }
    },
    "/ed-fi/schoolFoodServiceProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolFoodServiceProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SchoolFoodServiceProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolFoodServiceProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolFoodServiceProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolFoodServiceProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "SchoolFoodServiceProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/schoolFoodServiceProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolFoodServiceProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolFoodServiceProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SchoolFoodServiceProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolFoodServiceProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolFoodServiceProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolFoodServiceProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schoolFoodServiceProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/schoolTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SchoolTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "schoolTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolType resource to be created or updated.",
          "required": true,
          "x-bodyName": "SchoolType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "schoolTypeDescriptors"
        ]
      }
    },
    "/ed-fi/schoolTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "schoolTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SchoolTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "schoolTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SchoolTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SchoolType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "schoolTypeDescriptors"
        ]
      }
    },
    "/ed-fi/section504DisabilityDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSection504Disabilities",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_Section504DisabilityDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "section504DisabilityDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSection504Disability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Section504DisabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Section504Disability resource to be created or updated.",
          "required": true,
          "x-bodyName": "Section504Disability"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "section504DisabilityDescriptors"
        ]
      }
    },
    "/ed-fi/section504DisabilityDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSection504DisabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "section504DisabilityDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSection504DisabilitiesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_Section504DisabilityDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "section504DisabilityDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSection504Disability",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_Section504DisabilityDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Section504Disability resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "section504DisabilityDescriptors"
        ]
      }
    },
    "/ed-fi/sectionCharacteristicDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSectionCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SectionCharacteristicDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sectionCharacteristicDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSectionCharacteristic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SectionCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SectionCharacteristic resource to be created or updated.",
          "required": true,
          "x-bodyName": "SectionCharacteristic"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sectionCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/sectionCharacteristicDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sectionCharacteristicDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SectionCharacteristicDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sectionCharacteristicDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSectionCharacteristic",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SectionCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SectionCharacteristic resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sectionCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/sectionTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSectionTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SectionTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sectionTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSectionType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SectionTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SectionType resource to be created or updated.",
          "required": true,
          "x-bodyName": "SectionType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sectionTypeDescriptors"
        ]
      }
    },
    "/ed-fi/sectionTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sectionTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SectionTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sectionTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSectionType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SectionTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SectionType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sectionTypeDescriptors"
        ]
      }
    },
    "/ed-fi/separationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSeparations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SeparationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "separationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSeparation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SeparationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Separation resource to be created or updated.",
          "required": true,
          "x-bodyName": "Separation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "separationDescriptors"
        ]
      }
    },
    "/ed-fi/separationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSeparationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "separationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSeparationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SeparationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "separationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSeparation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SeparationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Separation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "separationDescriptors"
        ]
      }
    },
    "/ed-fi/separationReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSeparationReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SeparationReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "separationReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSeparationReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SeparationReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SeparationReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "SeparationReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "separationReasonDescriptors"
        ]
      }
    },
    "/ed-fi/separationReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSeparationReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "separationReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSeparationReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SeparationReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "separationReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSeparationReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SeparationReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SeparationReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "separationReasonDescriptors"
        ]
      }
    },
    "/ed-fi/serviceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_ServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "serviceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Service resource to be created or updated.",
          "required": true,
          "x-bodyName": "Service"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "serviceDescriptors"
        ]
      }
    },
    "/ed-fi/serviceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "serviceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_ServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "serviceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_ServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Service resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "serviceDescriptors"
        ]
      }
    },
    "/ed-fi/sexDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSexes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SexDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sexDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SexDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Sex resource to be created or updated.",
          "required": true,
          "x-bodyName": "Sex"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sexDescriptors"
        ]
      }
    },
    "/ed-fi/sexDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSexesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sexDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSexesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SexDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sexDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSex",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SexDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Sex resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sexDescriptors"
        ]
      }
    },
    "/ed-fi/sourceSystemDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSourceSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SourceSystemDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "sourceSystemDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSourceSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SourceSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SourceSystem resource to be created or updated.",
          "required": true,
          "x-bodyName": "SourceSystem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "sourceSystemDescriptors"
        ]
      }
    },
    "/ed-fi/sourceSystemDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSourceSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "sourceSystemDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSourceSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SourceSystemDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "sourceSystemDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSourceSystem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SourceSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SourceSystem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "sourceSystemDescriptors"
        ]
      }
    },
    "/ed-fi/specialEducationExitReasonDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSpecialEducationExitReasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SpecialEducationExitReasonDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "specialEducationExitReasonDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSpecialEducationExitReason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SpecialEducationExitReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SpecialEducationExitReason resource to be created or updated.",
          "required": true,
          "x-bodyName": "SpecialEducationExitReason"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "specialEducationExitReasonDescriptors"
        ]
      }
    },
    "/ed-fi/specialEducationExitReasonDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSpecialEducationExitReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "specialEducationExitReasonDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSpecialEducationExitReasonsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SpecialEducationExitReasonDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "specialEducationExitReasonDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSpecialEducationExitReason",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SpecialEducationExitReasonDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SpecialEducationExitReason resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "specialEducationExitReasonDescriptors"
        ]
      }
    },
    "/ed-fi/specialEducationProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSpecialEducationProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SpecialEducationProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSpecialEducationProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SpecialEducationProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SpecialEducationProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "SpecialEducationProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/specialEducationProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSpecialEducationProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSpecialEducationProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SpecialEducationProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSpecialEducationProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SpecialEducationProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SpecialEducationProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "specialEducationProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/specialEducationSettingDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSpecialEducationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SpecialEducationSettingDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "specialEducationSettingDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSpecialEducationSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SpecialEducationSettingDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SpecialEducationSetting resource to be created or updated.",
          "required": true,
          "x-bodyName": "SpecialEducationSetting"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "specialEducationSettingDescriptors"
        ]
      }
    },
    "/ed-fi/specialEducationSettingDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSpecialEducationSettingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "specialEducationSettingDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSpecialEducationSettingsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SpecialEducationSettingDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "specialEducationSettingDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSpecialEducationSetting",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SpecialEducationSettingDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SpecialEducationSetting resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "specialEducationSettingDescriptors"
        ]
      }
    },
    "/ed-fi/staffClassificationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffClassifications",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffClassificationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffClassificationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffClassification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffClassificationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StaffClassification resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffClassification"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffClassificationDescriptors"
        ]
      }
    },
    "/ed-fi/staffClassificationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffClassificationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffClassificationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffClassificationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffClassificationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffClassificationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffClassification",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffClassificationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StaffClassification resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffClassificationDescriptors"
        ]
      }
    },
    "/ed-fi/staffIdentificationSystemDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffIdentificationSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffIdentificationSystemDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffIdentificationSystemDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffIdentificationSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StaffIdentificationSystem resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffIdentificationSystem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/staffIdentificationSystemDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffIdentificationSystemDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffIdentificationSystemDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffIdentificationSystemDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffIdentificationSystem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StaffIdentificationSystem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/staffLeaveEventCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffLeaveEventCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StaffLeaveEventCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffLeaveEventCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffLeaveEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StaffLeaveEventCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "StaffLeaveEventCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/staffLeaveEventCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffLeaveEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffLeaveEventCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StaffLeaveEventCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffLeaveEventCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StaffLeaveEventCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StaffLeaveEventCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "staffLeaveEventCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/stateAbbreviationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStateAbbreviations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StateAbbreviationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "stateAbbreviationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStateAbbreviation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StateAbbreviationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StateAbbreviation resource to be created or updated.",
          "required": true,
          "x-bodyName": "StateAbbreviation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "stateAbbreviationDescriptors"
        ]
      }
    },
    "/ed-fi/stateAbbreviationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStateAbbreviationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "stateAbbreviationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStateAbbreviationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StateAbbreviationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "stateAbbreviationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStateAbbreviation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StateAbbreviationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StateAbbreviation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "stateAbbreviationDescriptors"
        ]
      }
    },
    "/ed-fi/studentCharacteristicDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentCharacteristicDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentCharacteristicDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCharacteristic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StudentCharacteristic resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentCharacteristic"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/studentCharacteristicDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentCharacteristicDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCharacteristicsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentCharacteristicDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentCharacteristicDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCharacteristic",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentCharacteristicDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StudentCharacteristic resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentCharacteristicDescriptors"
        ]
      }
    },
    "/ed-fi/studentIdentificationSystemDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentIdentificationSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_StudentIdentificationSystemDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "studentIdentificationSystemDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentIdentificationSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StudentIdentificationSystem resource to be created or updated.",
          "required": true,
          "x-bodyName": "StudentIdentificationSystem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "studentIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/studentIdentificationSystemDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "studentIdentificationSystemDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentIdentificationSystemsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_StudentIdentificationSystemDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "studentIdentificationSystemDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentIdentificationSystem",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_StudentIdentificationSystemDescriptor"
              }
            }
          },
          "description": "The JSON representation of the StudentIdentificationSystem resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "studentIdentificationSystemDescriptors"
        ]
      }
    },
    "/ed-fi/submissionStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSubmissionStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SubmissionStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "submissionStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSubmissionStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SubmissionStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SubmissionStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "SubmissionStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "submissionStatusDescriptors"
        ]
      }
    },
    "/ed-fi/submissionStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSubmissionStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "submissionStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSubmissionStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SubmissionStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "submissionStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSubmissionStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SubmissionStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SubmissionStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "submissionStatusDescriptors"
        ]
      }
    },
    "/ed-fi/supporterMilitaryConnectionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSupporterMilitaryConnections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SupporterMilitaryConnectionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSupporterMilitaryConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SupporterMilitaryConnectionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SupporterMilitaryConnection resource to be created or updated.",
          "required": true,
          "x-bodyName": "SupporterMilitaryConnection"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ]
      }
    },
    "/ed-fi/supporterMilitaryConnectionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSupporterMilitaryConnectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSupporterMilitaryConnectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SupporterMilitaryConnectionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSupporterMilitaryConnection",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SupporterMilitaryConnectionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SupporterMilitaryConnection resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "supporterMilitaryConnectionDescriptors"
        ]
      }
    },
    "/ed-fi/surveyCategoryDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyCategoryDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyCategoryDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SurveyCategory resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyCategory"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/surveyCategoryDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyCategoryDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyCategoriesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyCategoryDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyCategoryDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyCategory",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyCategoryDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SurveyCategory resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyCategoryDescriptors"
        ]
      }
    },
    "/ed-fi/surveyLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_SurveyLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "surveyLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SurveyLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "SurveyLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "surveyLevelDescriptors"
        ]
      }
    },
    "/ed-fi/surveyLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "surveyLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_SurveyLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "surveyLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_SurveyLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the SurveyLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "surveyLevelDescriptors"
        ]
      }
    },
    "/ed-fi/teachingCredentialBasisDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTeachingCredentialBases",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TeachingCredentialBasisDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "teachingCredentialBasisDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTeachingCredentialBasis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TeachingCredentialBasisDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TeachingCredentialBasis resource to be created or updated.",
          "required": true,
          "x-bodyName": "TeachingCredentialBasis"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "teachingCredentialBasisDescriptors"
        ]
      }
    },
    "/ed-fi/teachingCredentialBasisDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTeachingCredentialBasesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "teachingCredentialBasisDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTeachingCredentialBasesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TeachingCredentialBasisDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "teachingCredentialBasisDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTeachingCredentialBasis",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TeachingCredentialBasisDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TeachingCredentialBasis resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "teachingCredentialBasisDescriptors"
        ]
      }
    },
    "/ed-fi/teachingCredentialDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTeachingCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TeachingCredentialDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "teachingCredentialDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTeachingCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TeachingCredentialDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TeachingCredential resource to be created or updated.",
          "required": true,
          "x-bodyName": "TeachingCredential"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "teachingCredentialDescriptors"
        ]
      }
    },
    "/ed-fi/teachingCredentialDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTeachingCredentialsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "teachingCredentialDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTeachingCredentialsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TeachingCredentialDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "teachingCredentialDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTeachingCredential",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TeachingCredentialDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TeachingCredential resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "teachingCredentialDescriptors"
        ]
      }
    },
    "/ed-fi/technicalSkillsAssessmentDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTechnicalSkillsAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TechnicalSkillsAssessmentDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTechnicalSkillsAssessment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TechnicalSkillsAssessmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TechnicalSkillsAssessment resource to be created or updated.",
          "required": true,
          "x-bodyName": "TechnicalSkillsAssessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ]
      }
    },
    "/ed-fi/technicalSkillsAssessmentDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTechnicalSkillsAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTechnicalSkillsAssessmentsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TechnicalSkillsAssessmentDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTechnicalSkillsAssessment",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TechnicalSkillsAssessmentDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TechnicalSkillsAssessment resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "technicalSkillsAssessmentDescriptors"
        ]
      }
    },
    "/ed-fi/telephoneNumberTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTelephoneNumberTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TelephoneNumberTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "telephoneNumberTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTelephoneNumberType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TelephoneNumberTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TelephoneNumberType resource to be created or updated.",
          "required": true,
          "x-bodyName": "TelephoneNumberType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "telephoneNumberTypeDescriptors"
        ]
      }
    },
    "/ed-fi/telephoneNumberTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTelephoneNumberTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "telephoneNumberTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTelephoneNumberTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TelephoneNumberTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "telephoneNumberTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTelephoneNumberType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TelephoneNumberTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TelephoneNumberType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "telephoneNumberTypeDescriptors"
        ]
      }
    },
    "/ed-fi/termDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTerms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TermDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "termDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTerm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TermDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Term resource to be created or updated.",
          "required": true,
          "x-bodyName": "Term"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "termDescriptors"
        ]
      }
    },
    "/ed-fi/termDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTermsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "termDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTermsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TermDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "termDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTerm",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TermDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Term resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "termDescriptors"
        ]
      }
    },
    "/ed-fi/titleIPartAParticipantDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTitleIPartAParticipants",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TitleIPartAParticipantDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "titleIPartAParticipantDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTitleIPartAParticipant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TitleIPartAParticipantDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TitleIPartAParticipant resource to be created or updated.",
          "required": true,
          "x-bodyName": "TitleIPartAParticipant"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "titleIPartAParticipantDescriptors"
        ]
      }
    },
    "/ed-fi/titleIPartAParticipantDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTitleIPartAParticipantsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "titleIPartAParticipantDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTitleIPartAParticipantsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TitleIPartAParticipantDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "titleIPartAParticipantDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTitleIPartAParticipant",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TitleIPartAParticipantDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TitleIPartAParticipant resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "titleIPartAParticipantDescriptors"
        ]
      }
    },
    "/ed-fi/titleIPartAProgramServiceDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTitleIPartAProgramServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TitleIPartAProgramServiceDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTitleIPartAProgramService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TitleIPartAProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TitleIPartAProgramService resource to be created or updated.",
          "required": true,
          "x-bodyName": "TitleIPartAProgramService"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/titleIPartAProgramServiceDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTitleIPartAProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTitleIPartAProgramServicesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TitleIPartAProgramServiceDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTitleIPartAProgramService",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TitleIPartAProgramServiceDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TitleIPartAProgramService resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "titleIPartAProgramServiceDescriptors"
        ]
      }
    },
    "/ed-fi/titleIPartASchoolDesignationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTitleIPartASchoolDesignations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TitleIPartASchoolDesignationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTitleIPartASchoolDesignation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TitleIPartASchoolDesignationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TitleIPartASchoolDesignation resource to be created or updated.",
          "required": true,
          "x-bodyName": "TitleIPartASchoolDesignation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ]
      }
    },
    "/ed-fi/titleIPartASchoolDesignationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTitleIPartASchoolDesignationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTitleIPartASchoolDesignationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TitleIPartASchoolDesignationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTitleIPartASchoolDesignation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TitleIPartASchoolDesignationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TitleIPartASchoolDesignation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "titleIPartASchoolDesignationDescriptors"
        ]
      }
    },
    "/ed-fi/transportationPublicExpenseEligibilityTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTransportationPublicExpenseEligibilityTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TransportationPublicExpenseEligibilityTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTransportationPublicExpenseEligibilityType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TransportationPublicExpenseEligibilityTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TransportationPublicExpenseEligibilityType resource to be created or updated.",
          "required": true,
          "x-bodyName": "TransportationPublicExpenseEligibilityType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ]
      }
    },
    "/ed-fi/transportationPublicExpenseEligibilityTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTransportationPublicExpenseEligibilityTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTransportationPublicExpenseEligibilityTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TransportationPublicExpenseEligibilityTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTransportationPublicExpenseEligibilityType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TransportationPublicExpenseEligibilityTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TransportationPublicExpenseEligibilityType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "transportationPublicExpenseEligibilityTypeDescriptors"
        ]
      }
    },
    "/ed-fi/transportationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTransportationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TransportationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "transportationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTransportationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TransportationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TransportationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "TransportationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "transportationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/transportationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTransportationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "transportationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTransportationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TransportationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "transportationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTransportationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TransportationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TransportationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "transportationTypeDescriptors"
        ]
      }
    },
    "/ed-fi/travelDayofWeekDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTravelDayofWeeks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TravelDayofWeekDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "travelDayofWeekDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTravelDayofWeek",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TravelDayofWeekDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TravelDayofWeek resource to be created or updated.",
          "required": true,
          "x-bodyName": "TravelDayofWeek"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "travelDayofWeekDescriptors"
        ]
      }
    },
    "/ed-fi/travelDayofWeekDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTravelDayofWeeksById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "travelDayofWeekDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTravelDayofWeeksById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TravelDayofWeekDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "travelDayofWeekDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTravelDayofWeek",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TravelDayofWeekDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TravelDayofWeek resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "travelDayofWeekDescriptors"
        ]
      }
    },
    "/ed-fi/travelDirectionDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTravelDirections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TravelDirectionDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "travelDirectionDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTravelDirection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TravelDirectionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TravelDirection resource to be created or updated.",
          "required": true,
          "x-bodyName": "TravelDirection"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "travelDirectionDescriptors"
        ]
      }
    },
    "/ed-fi/travelDirectionDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTravelDirectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "travelDirectionDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTravelDirectionsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TravelDirectionDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "travelDirectionDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTravelDirection",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TravelDirectionDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TravelDirection resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "travelDirectionDescriptors"
        ]
      }
    },
    "/ed-fi/tribalAffiliationDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getTribalAffiliations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_TribalAffiliationDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "tribalAffiliationDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postTribalAffiliation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TribalAffiliationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TribalAffiliation resource to be created or updated.",
          "required": true,
          "x-bodyName": "TribalAffiliation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "tribalAffiliationDescriptors"
        ]
      }
    },
    "/ed-fi/tribalAffiliationDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteTribalAffiliationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "tribalAffiliationDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getTribalAffiliationsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_TribalAffiliationDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "tribalAffiliationDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putTribalAffiliation",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_TribalAffiliationDescriptor"
              }
            }
          },
          "description": "The JSON representation of the TribalAffiliation resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "tribalAffiliationDescriptors"
        ]
      }
    },
    "/ed-fi/visaDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getVisas",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_VisaDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "visaDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postVisa",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_VisaDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Visa resource to be created or updated.",
          "required": true,
          "x-bodyName": "Visa"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "visaDescriptors"
        ]
      }
    },
    "/ed-fi/visaDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteVisasById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "visaDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getVisasById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_VisaDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "visaDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putVisa",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_VisaDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Visa resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "visaDescriptors"
        ]
      }
    },
    "/ed-fi/weaponDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getWeapons",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EdFi_WeaponDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "weaponDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postWeapon",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_WeaponDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Weapon resource to be created or updated.",
          "required": true,
          "x-bodyName": "Weapon"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "weaponDescriptors"
        ]
      }
    },
    "/ed-fi/weaponDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "deleteWeaponsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "weaponDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getWeaponsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdFi_WeaponDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "weaponDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putWeapon",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdFi_WeaponDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Weapon resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "weaponDescriptors"
        ]
      }
    },
    "/tpdm/accreditationStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMAccreditationStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "accreditationStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMAccreditationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AccreditationStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "AccreditationStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "accreditationStatusDescriptors"
        ]
      }
    },
    "/tpdm/accreditationStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMAccreditationStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "accreditationStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMAccreditationStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "accreditationStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMAccreditationStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_AccreditationStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AccreditationStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "accreditationStatusDescriptors"
        ]
      }
    },
    "/tpdm/aidTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMAidTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "aidTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMAidType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AidType resource to be created or updated.",
          "required": true,
          "x-bodyName": "AidType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "aidTypeDescriptors"
        ]
      }
    },
    "/tpdm/aidTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMAidTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "aidTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMAidTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "aidTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMAidType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_AidTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the AidType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "aidTypeDescriptors"
        ]
      }
    },
    "/tpdm/certificationRouteDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMCertificationRoutes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "certificationRouteDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMCertificationRoute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CertificationRoute resource to be created or updated.",
          "required": true,
          "x-bodyName": "CertificationRoute"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "certificationRouteDescriptors"
        ]
      }
    },
    "/tpdm/certificationRouteDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMCertificationRoutesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "certificationRouteDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMCertificationRoutesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "certificationRouteDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMCertificationRoute",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CertificationRouteDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CertificationRoute resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "certificationRouteDescriptors"
        ]
      }
    },
    "/tpdm/coteachingStyleObservedDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMCoteachingStyleObserveds",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "coteachingStyleObservedDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMCoteachingStyleObserved",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CoteachingStyleObserved resource to be created or updated.",
          "required": true,
          "x-bodyName": "CoteachingStyleObserved"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "coteachingStyleObservedDescriptors"
        ]
      }
    },
    "/tpdm/coteachingStyleObservedDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMCoteachingStyleObservedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "coteachingStyleObservedDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMCoteachingStyleObservedsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "coteachingStyleObservedDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMCoteachingStyleObserved",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CoteachingStyleObservedDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CoteachingStyleObserved resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "coteachingStyleObservedDescriptors"
        ]
      }
    },
    "/tpdm/credentialStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMCredentialStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "credentialStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMCredentialStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CredentialStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "CredentialStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "credentialStatusDescriptors"
        ]
      }
    },
    "/tpdm/credentialStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMCredentialStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "credentialStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMCredentialStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "credentialStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMCredentialStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_CredentialStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the CredentialStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "credentialStatusDescriptors"
        ]
      }
    },
    "/tpdm/educatorRoleDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEducatorRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "educatorRoleDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEducatorRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducatorRole resource to be created or updated.",
          "required": true,
          "x-bodyName": "EducatorRole"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "educatorRoleDescriptors"
        ]
      }
    },
    "/tpdm/educatorRoleDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEducatorRolesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "educatorRoleDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEducatorRolesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "educatorRoleDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEducatorRole",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EducatorRoleDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EducatorRole resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "educatorRoleDescriptors"
        ]
      }
    },
    "/tpdm/englishLanguageExamDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEnglishLanguageExams",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "englishLanguageExamDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEnglishLanguageExam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EnglishLanguageExam resource to be created or updated.",
          "required": true,
          "x-bodyName": "EnglishLanguageExam"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "englishLanguageExamDescriptors"
        ]
      }
    },
    "/tpdm/englishLanguageExamDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEnglishLanguageExamsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "englishLanguageExamDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEnglishLanguageExamsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "englishLanguageExamDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEnglishLanguageExam",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EnglishLanguageExamDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EnglishLanguageExam resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "englishLanguageExamDescriptors"
        ]
      }
    },
    "/tpdm/eppProgramPathwayDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEPPProgramPathways",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "eppProgramPathwayDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEPPProgramPathway",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EPPProgramPathway resource to be created or updated.",
          "required": true,
          "x-bodyName": "EPPProgramPathway"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "eppProgramPathwayDescriptors"
        ]
      }
    },
    "/tpdm/eppProgramPathwayDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEPPProgramPathwaysById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "eppProgramPathwayDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEPPProgramPathwaysById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "eppProgramPathwayDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEPPProgramPathway",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EPPProgramPathwayDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EPPProgramPathway resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "eppProgramPathwayDescriptors"
        ]
      }
    },
    "/tpdm/evaluationElementRatingLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationElementRatingLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationElementRatingLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationElementRatingLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationElementRatingLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationElementRatingLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationElementRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/evaluationElementRatingLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationElementRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationElementRatingLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationElementRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationElementRatingLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationElementRatingLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationElementRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationElementRatingLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationElementRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/evaluationPeriodDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationPeriodDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationPeriod resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationPeriodDescriptors"
        ]
      }
    },
    "/tpdm/evaluationPeriodDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationPeriodDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationPeriodsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationPeriodDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationPeriod",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationPeriodDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationPeriod resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationPeriodDescriptors"
        ]
      }
    },
    "/tpdm/evaluationRatingLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationRatingLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationRatingLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationRatingLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRatingLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationRatingLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/evaluationRatingLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationRatingLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationRatingLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationRatingLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRatingLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/evaluationRatingStatusDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationRatingStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationRatingStatusDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationRatingStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRatingStatus resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationRatingStatus"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationRatingStatusDescriptors"
        ]
      }
    },
    "/tpdm/evaluationRatingStatusDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationRatingStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationRatingStatusDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationRatingStatusesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationRatingStatusDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationRatingStatus",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationRatingStatusDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationRatingStatus resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationRatingStatusDescriptors"
        ]
      }
    },
    "/tpdm/evaluationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMEvaluationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "evaluationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMEvaluationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "EvaluationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "evaluationTypeDescriptors"
        ]
      }
    },
    "/tpdm/evaluationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "evaluationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "evaluationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMEvaluationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_EvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the EvaluationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "evaluationTypeDescriptors"
        ]
      }
    },
    "/tpdm/genderDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMGenders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_GenderDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "genderDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMGender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_GenderDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Gender resource to be created or updated.",
          "required": true,
          "x-bodyName": "Gender"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "genderDescriptors"
        ]
      }
    },
    "/tpdm/genderDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMGendersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "genderDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMGendersById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_GenderDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "genderDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMGender",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_GenderDescriptor"
              }
            }
          },
          "description": "The JSON representation of the Gender resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "genderDescriptors"
        ]
      }
    },
    "/tpdm/objectiveRatingLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMObjectiveRatingLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "objectiveRatingLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMObjectiveRatingLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ObjectiveRatingLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "ObjectiveRatingLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "objectiveRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/objectiveRatingLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMObjectiveRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "objectiveRatingLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMObjectiveRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "objectiveRatingLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMObjectiveRatingLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_ObjectiveRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the ObjectiveRatingLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "objectiveRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/performanceEvaluationRatingLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMPerformanceEvaluationRatingLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "performanceEvaluationRatingLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMPerformanceEvaluationRatingLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluationRatingLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "PerformanceEvaluationRatingLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "performanceEvaluationRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/performanceEvaluationRatingLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMPerformanceEvaluationRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "performanceEvaluationRatingLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMPerformanceEvaluationRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "performanceEvaluationRatingLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMPerformanceEvaluationRatingLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluationRatingLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "performanceEvaluationRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/performanceEvaluationTypeDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMPerformanceEvaluationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "performanceEvaluationTypeDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMPerformanceEvaluationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluationType resource to be created or updated.",
          "required": true,
          "x-bodyName": "PerformanceEvaluationType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "performanceEvaluationTypeDescriptors"
        ]
      }
    },
    "/tpdm/performanceEvaluationTypeDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMPerformanceEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "performanceEvaluationTypeDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMPerformanceEvaluationTypesById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "performanceEvaluationTypeDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMPerformanceEvaluationType",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_PerformanceEvaluationTypeDescriptor"
              }
            }
          },
          "description": "The JSON representation of the PerformanceEvaluationType resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "performanceEvaluationTypeDescriptors"
        ]
      }
    },
    "/tpdm/rubricRatingLevelDescriptors": {
      "get": {
        "description": "This GET operation provides access to resources using the \u0022Get\u0022 search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "get_TPDMRubricRatingLevels",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "description": "",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A code or abbreviation that is used to refer to the descriptor.",
            "in": "query",
            "name": "codeValue",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "The description of the descriptor.",
            "in": "query",
            "name": "description",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "description": "The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.",
            "in": "query",
            "name": "effectiveBeginDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The end date of the period when the descriptor is in effect.",
            "in": "query",
            "name": "effectiveEndDate",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.",
            "in": "query",
            "name": "namespace",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "description": "A shortened description for the descriptor.",
            "in": "query",
            "name": "shortDescription",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves specific resources using the resource\u0027s property values (using the \u0022Get\u0022 pattern).",
        "tags": [
          "rubricRatingLevelDescriptors"
        ]
      },
      "post": {
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \u0022upsert\u0022 operation (insert \u002B update). Clients should NOT include the resource \u0022id\u0022 in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "post_TPDMRubricRatingLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RubricRatingLevel resource to be created or updated.",
          "required": true,
          "x-bodyName": "RubricRatingLevel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "tags": [
          "rubricRatingLevelDescriptors"
        ]
      }
    },
    "/tpdm/rubricRatingLevelDescriptors/{id}": {
      "delete": {
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn\u0027t exist, an error will result (the resource will not be found).",
        "operationId": "delete_TPDMRubricRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Deletes an existing resource using the resource identifier.",
        "tags": [
          "rubricRatingLevelDescriptors"
        ]
      },
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "get_TPDMRubricRatingLevelsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
                }
              }
            },
            "description": "The requested resource was successfully retrieved."
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Retrieves a specific resource using the resource\u0027s identifier (using the \u0022Get By Id\u0022 pattern).",
        "tags": [
          "rubricRatingLevelDescriptors"
        ]
      },
      "put": {
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\u0022id\u0022) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "put_TPDMRubricRatingLevel",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "description": "Indicates if the configured Snapshot should be used.",
            "in": "header",
            "name": "Use-Snapshot",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TPDM_RubricRatingLevelDescriptor"
              }
            }
          },
          "description": "The JSON representation of the RubricRatingLevel resource to be created or updated."
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Updates a resource based on the resource identifier.",
        "tags": [
          "rubricRatingLevelDescriptors"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/data"
    }
  ],
  "tags": [
    {
      "description": "This descriptor describes the type of absence",
      "name": "absenceEventCategoryDescriptors"
    },
    {
      "description": "A designation of the type of academic distinctions earned by or awarded to the student.",
      "name": "academicHonorCategoryDescriptors"
    },
    {
      "description": "This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).",
      "name": "academicSubjectDescriptors"
    },
    {
      "description": "This descriptor defines variations used in how an assessment is presented or taken.",
      "name": "accommodationDescriptors"
    },
    {
      "description": "The type of account used in accounting such as revenue, expenditure, or balance sheet.",
      "name": "accountTypeDescriptors"
    },
    {
      "description": "This descriptor defines the category of achievement attributed to the learner.",
      "name": "achievementCategoryDescriptors"
    },
    {
      "description": "The type of additional credits or units of value awarded for the completion of a course.",
      "name": "additionalCreditTypeDescriptors"
    },
    {
      "description": "The type of address listed for an individual or organization.",
      "name": "addressTypeDescriptors"
    },
    {
      "description": "The environment in which the test was administered.",
      "name": "administrationEnvironmentDescriptors"
    },
    {
      "description": "This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).",
      "name": "administrativeFundingControlDescriptors"
    },
    {
      "description": "The original peoples or cultures with which the individual identifies.",
      "name": "ancestryEthnicOriginDescriptors"
    },
    {
      "description": "This descriptor holds the category of an assessment based on format and content.",
      "name": "assessmentCategoryDescriptors"
    },
    {
      "description": "This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.",
      "name": "assessmentIdentificationSystemDescriptors"
    },
    {
      "description": "Category or type of the assessment item.",
      "name": "assessmentItemCategoryDescriptors"
    },
    {
      "description": "The analyzed result of a student\u0027s response to an assessment item.. For example:\r\n    Correct\r\n    Incorrect\r\n    Met standard\r\n    ...",
      "name": "assessmentItemResultDescriptors"
    },
    {
      "description": "This descriptor holds the period of time window in which an assessment is supposed to be administered.",
      "name": "assessmentPeriodDescriptors"
    },
    {
      "description": "This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.",
      "name": "assessmentReportingMethodDescriptors"
    },
    {
      "description": "Status of whether the assignment was submitted after the due date and/or marked as late.",
      "name": "assignmentLateStatusDescriptors"
    },
    {
      "description": "This descriptor describes a student\u0027s completion status for a section.",
      "name": "attemptStatusDescriptors"
    },
    {
      "description": "This descriptor holds the category of the attendance event (e.g., tardy).",
      "name": "attendanceEventCategoryDescriptors"
    },
    {
      "description": "An indication of the barrier to having internet access in the student\u2019s primary place of residence.",
      "name": "barrierToInternetAccessInResidenceDescriptors"
    },
    {
      "description": "This descriptor holds the categories of behavior describing a discipline incident.",
      "name": "behaviorDescriptors"
    },
    {
      "description": "Identifies the specific route taken by a bus for student transportation.",
      "name": "busRouteDescriptors"
    },
    {
      "description": "This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).",
      "name": "calendarEventDescriptors"
    },
    {
      "description": "This descriptor defines the calendar types.",
      "name": "calendarTypeDescriptors"
    },
    {
      "description": "The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.",
      "name": "careerPathwayDescriptors"
    },
    {
      "description": "The type of agency that approved the establishment or continuation of a charter school.",
      "name": "charterApprovalAgencyTypeDescriptors"
    },
    {
      "description": "The category of charter school. For example: School Charter, Open Enrollment Charter.",
      "name": "charterStatusDescriptors"
    },
    {
      "description": "An indicator of whether or not the person is a U.S. citizen.",
      "name": "citizenshipStatusDescriptors"
    },
    {
      "description": "This descriptor defines the type of position the staff member holds in a specific class/section.",
      "name": "classroomPositionDescriptors"
    },
    {
      "description": "The scope of cohort (e.g., school, district, classroom).",
      "name": "cohortScopeDescriptors"
    },
    {
      "description": "The type of the cohort (e.g., academic intervention, classroom breakout).",
      "name": "cohortTypeDescriptors"
    },
    {
      "description": "The enumeration items for the set of cohort years.",
      "name": "cohortYearTypeDescriptors"
    },
    {
      "description": "This descriptor defines various levels for assessed competencies.",
      "name": "competencyLevelDescriptors"
    },
    {
      "description": "This descriptor defines the set of contact types.",
      "name": "contactTypeDescriptors"
    },
    {
      "description": "The predominate type or kind characterizing the learning resource.",
      "name": "contentClassDescriptors"
    },
    {
      "description": "In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute.",
      "name": "continuationOfServicesReasonDescriptors"
    },
    {
      "description": "The rate by which a cost applies (e.g. $1 per student).",
      "name": "costRateDescriptors"
    },
    {
      "description": "This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
      "name": "countryDescriptors"
    },
    {
      "description": "The result from the student\u0027s attempt to take the course.",
      "name": "courseAttemptResultDescriptors"
    },
    {
      "description": "Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.",
      "name": "courseDefinedByDescriptors"
    },
    {
      "description": "An indicator of whether or not this course being described is included in the computation of the student\u0027s Grade Point Average, and if so, if it is weighted differently than regular courses.",
      "name": "courseGPAApplicabilityDescriptors"
    },
    {
      "description": "This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.",
      "name": "courseIdentificationSystemDescriptors"
    },
    {
      "description": "The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.",
      "name": "courseLevelCharacteristicDescriptors"
    },
    {
      "description": "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student\u0027s academic grade average.",
      "name": "courseRepeatCodeDescriptors"
    },
    {
      "description": "This descriptor defines the fields of certification that the state education agency offers to teachers.",
      "name": "credentialFieldDescriptors"
    },
    {
      "description": "An indication of the category of credential an individual holds.",
      "name": "credentialTypeDescriptors"
    },
    {
      "description": "A categorization for the course transcript credits.",
      "name": "creditCategoryDescriptors"
    },
    {
      "description": "The type of credits or units of value awarded for the completion of a course.",
      "name": "creditTypeDescriptors"
    },
    {
      "description": "The type or category of crisis.",
      "name": "crisisTypeDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.",
      "name": "cteProgramServiceDescriptors"
    },
    {
      "description": "The type of curriculum used in an early learning classroom or group.",
      "name": "curriculumUsedDescriptors"
    },
    {
      "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
      "name": "deliveryMethodDescriptors"
    },
    {
      "description": "This descriptor defines diagnoses that interventions are intended to target.",
      "name": "diagnosisDescriptors"
    },
    {
      "description": "The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.",
      "name": "diplomaLevelDescriptors"
    },
    {
      "description": "The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.",
      "name": "diplomaTypeDescriptors"
    },
    {
      "description": "This descriptor defines a student\u0027s impairment.",
      "name": "disabilityDescriptors"
    },
    {
      "description": "The type of disability designation (e.g., IDEA, Section 504).",
      "name": "disabilityDesignationDescriptors"
    },
    {
      "description": "The source that provided the disability determination.",
      "name": "disabilityDeterminationSourceTypeDescriptors"
    },
    {
      "description": "Indicates the reason for the difference, if any, between the official and actual lengths of a student\u0027s disciplinary assignment.",
      "name": "disciplineActionLengthDifferenceReasonDescriptors"
    },
    {
      "description": "This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.",
      "name": "disciplineDescriptors"
    },
    {
      "description": "The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.",
      "name": "disciplineIncidentParticipationCodeDescriptors"
    },
    {
      "description": "Indicates whether a student has been displaced as a result of a crisis event.",
      "name": "displacedStudentStatusDescriptors"
    },
    {
      "description": "Custom descriptor of college institutions or categories of institutions participating in the dual credit program.",
      "name": "dualCreditInstitutionDescriptors"
    },
    {
      "description": "Indicates the type of the dual credit program.",
      "name": "dualCreditTypeDescriptors"
    },
    {
      "description": "The type of education organization association being represented.",
      "name": "educationOrganizationAssociationTypeDescriptors"
    },
    {
      "description": "The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.",
      "name": "educationOrganizationCategoryDescriptors"
    },
    {
      "description": "This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.",
      "name": "educationOrganizationIdentificationSystemDescriptors"
    },
    {
      "description": "The type of education plan(s) the student is following, if appropriate.",
      "name": "educationPlanDescriptors"
    },
    {
      "description": "The setting in which a child receives education and related services.",
      "name": "educationalEnvironmentDescriptors"
    },
    {
      "description": "The type of email listed for an individual or organization.",
      "name": "electronicMailTypeDescriptors"
    },
    {
      "description": "The reason why the eligibility determination was completed beyond the required timeframe.",
      "name": "eligibilityDelayReasonDescriptors"
    },
    {
      "description": "Indicates if this is an initial evaluation or a reevaluation.",
      "name": "eligibilityEvaluationTypeDescriptors"
    },
    {
      "description": "This descriptor defines the type of employment or contract.",
      "name": "employmentStatusDescriptors"
    },
    {
      "description": "The type of enrollment reflected by the StudentSchoolAssociation.",
      "name": "enrollmentTypeDescriptors"
    },
    {
      "description": "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.",
      "name": "entryGradeLevelReasonDescriptors"
    },
    {
      "description": "This descriptor defines the process by which a student enters a school during a given academic session.",
      "name": "entryTypeDescriptors"
    },
    {
      "description": "Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe.",
      "name": "evaluationDelayReasonDescriptors"
    },
    {
      "description": "An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.",
      "name": "eventCircumstanceDescriptors"
    },
    {
      "description": "This descriptor defines the circumstances under which the student exited from membership in an educational institution.",
      "name": "exitWithdrawTypeDescriptors"
    },
    {
      "description": "The accounting period or grouping for which financial information is collected.",
      "name": "financialCollectionDescriptors"
    },
    {
      "description": "This descriptor defines the set of grade levels.",
      "name": "gradeLevelDescriptors"
    },
    {
      "description": "The system used for calculating the grade point average for an individual.",
      "name": "gradePointAverageTypeDescriptors"
    },
    {
      "description": "The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).",
      "name": "gradeTypeDescriptors"
    },
    {
      "description": "The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.",
      "name": "gradebookEntryTypeDescriptors"
    },
    {
      "description": "This descriptor defines the state\u0027s name of the period for which grades are reported.",
      "name": "gradingPeriodDescriptors"
    },
    {
      "description": "This descriptor defines the set of graduation plan types.",
      "name": "graduationPlanTypeDescriptors"
    },
    {
      "description": "An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.",
      "name": "gunFreeSchoolsActReportingStatusDescriptors"
    },
    {
      "description": "The primary nighttime residence of the student at the time the student is identified as homeless.",
      "name": "homelessPrimaryNighttimeResidenceDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.",
      "name": "homelessProgramServiceDescriptors"
    },
    {
      "description": "Indicates if the evaluation is done under Part B IDEA or Part C IDEA.",
      "name": "ideaPartDescriptors"
    },
    {
      "description": "Identifies the type of use given to an identification document.",
      "name": "identificationDocumentUseDescriptors"
    },
    {
      "description": "An indication of the type of immunization that an individual has satisfactorily received.",
      "name": "immunizationTypeDescriptors"
    },
    {
      "description": "Identifies where the incident occurred and whether or not it occurred on school property.",
      "name": "incidentLocationDescriptors"
    },
    {
      "description": "The name or code for the indicator or metric.",
      "name": "indicatorDescriptors"
    },
    {
      "description": "The name for a group of indicators.",
      "name": "indicatorGroupDescriptors"
    },
    {
      "description": "The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is \u0022not submitted.\u0022",
      "name": "indicatorLevelDescriptors"
    },
    {
      "description": "The type of communication number listed for an organization.",
      "name": "institutionTelephoneNumberTypeDescriptors"
    },
    {
      "description": "The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.",
      "name": "interactivityStyleDescriptors"
    },
    {
      "description": "The type of Internet access available.",
      "name": "internetAccessDescriptors"
    },
    {
      "description": "The primary type of internet service used in the student\u2019s primary place of residence.",
      "name": "internetAccessTypeInResidenceDescriptors"
    },
    {
      "description": "An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.",
      "name": "internetPerformanceInResidenceDescriptors"
    },
    {
      "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
      "name": "interventionClassDescriptors"
    },
    {
      "description": "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.",
      "name": "interventionEffectivenessRatingDescriptors"
    },
    {
      "description": "This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.",
      "name": "languageDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.",
      "name": "languageInstructionProgramServiceDescriptors"
    },
    {
      "description": "The category denoting how a language is used.",
      "name": "languageUseDescriptors"
    },
    {
      "description": "An additional classification of the type of a specific learning standard.",
      "name": "learningStandardCategoryDescriptors"
    },
    {
      "description": "A measure that indicates the strength or quality of the equivalence relationship.",
      "name": "learningStandardEquivalenceStrengthDescriptors"
    },
    {
      "description": "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.",
      "name": "learningStandardScopeDescriptors"
    },
    {
      "description": "This descriptor defines the different levels of education achievable.",
      "name": "levelOfEducationDescriptors"
    },
    {
      "description": "This descriptor defines the license statuses.",
      "name": "licenseStatusDescriptors"
    },
    {
      "description": "This descriptor defines the type of a license.",
      "name": "licenseTypeDescriptors"
    },
    {
      "description": "This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
      "name": "limitedEnglishProficiencyDescriptors"
    },
    {
      "description": "The category of local education agency/district. For example: Independent or Charter.",
      "name": "localEducationAgencyCategoryDescriptors"
    },
    {
      "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
      "name": "localeDescriptors"
    },
    {
      "description": "A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).",
      "name": "magnetSpecialProgramEmphasisSchoolDescriptors"
    },
    {
      "description": "The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.",
      "name": "mediumOfInstructionDescriptors"
    },
    {
      "description": "The method the credits were earned, for example:  Classroom, Examination, Transfer.",
      "name": "methodCreditEarnedDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.",
      "name": "migrantEducationProgramServiceDescriptors"
    },
    {
      "description": "The class of a domain entity in the Ed-Fi data model.",
      "name": "modelEntityDescriptors"
    },
    {
      "description": "This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.",
      "name": "monitoredDescriptors"
    },
    {
      "description": "This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).",
      "name": "neglectedOrDelinquentProgramDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.",
      "name": "neglectedOrDelinquentProgramServiceDescriptors"
    },
    {
      "description": "The purpose(s) of the network, e.g. shared services, collective procurement, etc.",
      "name": "networkPurposeDescriptors"
    },
    {
      "description": "The type of nonmedical exemption from vaccination claimed by the student\u0027s parent or guardian.",
      "name": "nonMedicalImmunizationExemptionDescriptors"
    },
    {
      "description": "The current operational status of the education organization (e.g., active, inactive).",
      "name": "operationalStatusDescriptors"
    },
    {
      "description": "The types of alternate names for a person.",
      "name": "otherNameTypeDescriptors"
    },
    {
      "description": "This descriptor defines participation in a yearly English language assessment.",
      "name": "participationDescriptors"
    },
    {
      "description": "The student\u0027s program participation status.",
      "name": "participationStatusDescriptors"
    },
    {
      "description": "Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.",
      "name": "performanceBaseConversionDescriptors"
    },
    {
      "description": "This descriptor defines various levels or thresholds for performance on the assessment.",
      "name": "performanceLevelDescriptors"
    },
    {
      "description": "The evidence presented to verify one\u0027s personal identity; for example: driver\u0027s license, passport, birth certificate, etc.",
      "name": "personalInformationVerificationDescriptors"
    },
    {
      "description": "The platforms with which an assessment may be delivered.",
      "name": "platformTypeDescriptors"
    },
    {
      "description": "The type of students the Section is offered and tailored to.",
      "name": "populationServedDescriptors"
    },
    {
      "description": "A code describing the type of post-secondary event (e.g., college application or acceptance).",
      "name": "postSecondaryEventCategoryDescriptors"
    },
    {
      "description": "A classification of a postsecondary institution\u0027s highest level of offering. Default values are based on the Carnegie Classifications.",
      "name": "postSecondaryInstitutionLevelDescriptors"
    },
    {
      "description": "Indication of whether the position was filled or retired without filling.",
      "name": "postingResultDescriptors"
    },
    {
      "description": "An indication of whether the primary learning device is shared or not shared with another individual.",
      "name": "primaryLearningDeviceAccessDescriptors"
    },
    {
      "description": "The type of device the student uses most often to complete learning activities away from school.",
      "name": "primaryLearningDeviceAwayFromSchoolDescriptors"
    },
    {
      "description": "The provider of the primary learning device.",
      "name": "primaryLearningDeviceProviderDescriptors"
    },
    {
      "description": "This descriptor defines proficiency levels for a yearly English language assessment.",
      "name": "proficiencyDescriptors"
    },
    {
      "description": "This descriptor defines the name of the education program for which a teacher is assigned to a school.",
      "name": "programAssignmentDescriptors"
    },
    {
      "description": "This descriptor defines important characteristics of the Program, such as categories or particular indications.",
      "name": "programCharacteristicDescriptors"
    },
    {
      "description": "The period for the evaluation.",
      "name": "programEvaluationPeriodDescriptors"
    },
    {
      "description": "The type of the evaluation.",
      "name": "programEvaluationTypeDescriptors"
    },
    {
      "description": "Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual\u0027s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).",
      "name": "programSponsorDescriptors"
    },
    {
      "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
      "name": "programTypeDescriptors"
    },
    {
      "description": "This descriptor defines yearly progress or growth from last year\u0027s assessment.",
      "name": "progressDescriptors"
    },
    {
      "description": "This descriptor defines progress measured from pre- to post-test.",
      "name": "progressLevelDescriptors"
    },
    {
      "description": "This descriptor holds the category of the provider.",
      "name": "providerCategoryDescriptors"
    },
    {
      "description": "This descriptor indicates the profitability status of the provider.",
      "name": "providerProfitabilityDescriptors"
    },
    {
      "description": "This descriptor defines the status of the provider.",
      "name": "providerStatusDescriptors"
    },
    {
      "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
      "name": "publicationStatusDescriptors"
    },
    {
      "description": "The form or type of question.",
      "name": "questionFormDescriptors"
    },
    {
      "description": "The enumeration items defining the racial categories which most clearly reflects the individual\u0027s recognition of his or her community or with which the individual most identifies.",
      "name": "raceDescriptors"
    },
    {
      "description": "The descriptive level(s) of ratings (cut scores) for evaluation.",
      "name": "ratingLevelDescriptors"
    },
    {
      "description": "This descriptor defines the reason a student exited a program.",
      "name": "reasonExitedDescriptors"
    },
    {
      "description": "The primary reason student is not tested.",
      "name": "reasonNotTestedDescriptors"
    },
    {
      "description": "The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.",
      "name": "recognitionTypeDescriptors"
    },
    {
      "description": "The nature of an individual\u0027s relationship to a student.",
      "name": "relationDescriptors"
    },
    {
      "description": "An indication as to whether a student has previously taken a given course.",
      "name": "repeatIdentifierDescriptors"
    },
    {
      "description": "This descriptor defines the type of individual who reported an incident.",
      "name": "reporterDescriptionDescriptors"
    },
    {
      "description": "A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.",
      "name": "reportingTagDescriptors"
    },
    {
      "description": "This descriptor defines indications of the location of a person\u0027s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.",
      "name": "residencyStatusDescriptors"
    },
    {
      "description": "Indicator of the response.",
      "name": "responseIndicatorDescriptors"
    },
    {
      "description": "This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).",
      "name": "responsibilityDescriptors"
    },
    {
      "description": "The items of categorization of the circumstances or reason for the restraint.",
      "name": "restraintEventReasonDescriptors"
    },
    {
      "description": "The results can be expressed as a number, percentile, range, level, etc.",
      "name": "resultDatatypeTypeDescriptors"
    },
    {
      "description": "Indicator if the test was retaken.",
      "name": "retestIndicatorDescriptors"
    },
    {
      "description": "The category of school. For example: High School, Middle School, Elementary School.",
      "name": "schoolCategoryDescriptors"
    },
    {
      "description": "The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state).",
      "name": "schoolChoiceBasisDescriptors"
    },
    {
      "description": "An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.",
      "name": "schoolChoiceImplementStatusDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.",
      "name": "schoolFoodServiceProgramServiceDescriptors"
    },
    {
      "description": "The type of education institution as classified by its primary focus such as Alternative, Career and Technical Education, Regular, or Special Education schools.",
      "name": "schoolTypeDescriptors"
    },
    {
      "description": "This descriptor defines the reason(s) why student qualifies for Section 504 consideration.",
      "name": "section504DisabilityDescriptors"
    },
    {
      "description": "This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.",
      "name": "sectionCharacteristicDescriptors"
    },
    {
      "description": "Specifies whether the section is for attendance only, credit only, or both.",
      "name": "sectionTypeDescriptors"
    },
    {
      "description": "Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.",
      "name": "separationDescriptors"
    },
    {
      "description": "This descriptor defines the reasons for terminating the employment.",
      "name": "separationReasonDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a program.",
      "name": "serviceDescriptors"
    },
    {
      "description": "A person\u0027s birth sex.",
      "name": "sexDescriptors"
    },
    {
      "description": "This descriptor defines the originating record source system.",
      "name": "sourceSystemDescriptors"
    },
    {
      "description": "The reason why a person stops receiving special education services.",
      "name": "specialEducationExitReasonDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a special education program.",
      "name": "specialEducationProgramServiceDescriptors"
    },
    {
      "description": "This descriptor defines the major instructional setting (more than 50 percent of a student\u0027s special education program).",
      "name": "specialEducationSettingDescriptors"
    },
    {
      "description": "This descriptor defines an individual\u0027s title of employment, official status or rank.",
      "name": "staffClassificationDescriptors"
    },
    {
      "description": "This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.",
      "name": "staffIdentificationSystemDescriptors"
    },
    {
      "description": "A code describing the type of the leave event.",
      "name": "staffLeaveEventCategoryDescriptors"
    },
    {
      "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
      "name": "stateAbbreviationDescriptors"
    },
    {
      "description": "This descriptor captures important characteristics of the student\u0027s environment or situation. Generally used for non-program-based student characteristics.",
      "name": "studentCharacteristicDescriptors"
    },
    {
      "description": "This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.",
      "name": "studentIdentificationSystemDescriptors"
    },
    {
      "description": "The status of the student\u0027s submission.",
      "name": "submissionStatusDescriptors"
    },
    {
      "description": "Military connection of the person/people whom the student is a dependent of.",
      "name": "supporterMilitaryConnectionDescriptors"
    },
    {
      "description": "The descriptor holds the category or type of survey.",
      "name": "surveyCategoryDescriptors"
    },
    {
      "description": "Provides information about the respondents of a survey and how they can be grouped together.",
      "name": "surveyLevelDescriptors"
    },
    {
      "description": "An indication of the pre-determined criteria for granting the teaching credential that an individual holds.",
      "name": "teachingCredentialBasisDescriptors"
    },
    {
      "description": "This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.",
      "name": "teachingCredentialDescriptors"
    },
    {
      "description": "This descriptor defines the results of technical skills assessment aligned with industry recognized standards.",
      "name": "technicalSkillsAssessmentDescriptors"
    },
    {
      "description": "The type of communication number listed for an individual.",
      "name": "telephoneNumberTypeDescriptors"
    },
    {
      "description": "A distinct period of time into which the academic year is divided. These could be \u201Csemesters\u201D, \u201Ctrimesters\u201D or \u201Cquarters\u201D, depending on the school or district\u2019s academic calendar.",
      "name": "termDescriptors"
    },
    {
      "description": "An indication of the type of Title I program, if any, in which the student is participating and served.",
      "name": "titleIPartAParticipantDescriptors"
    },
    {
      "description": "This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.",
      "name": "titleIPartAProgramServiceDescriptors"
    },
    {
      "description": "Denotes the Title I Part A designation for the school.",
      "name": "titleIPartASchoolDesignationDescriptors"
    },
    {
      "description": "The primary type of eligibility for transporting a student at public expense.",
      "name": "transportationPublicExpenseEligibilityTypeDescriptors"
    },
    {
      "description": "The mode or type of transportation utilized by a student to commute to and from school",
      "name": "transportationTypeDescriptors"
    },
    {
      "description": "Specifies the day(s) of the week on which student transportation occurs.",
      "name": "travelDayofWeekDescriptors"
    },
    {
      "description": "Indicates the direction of travel for the student transportation route (e.g., to school, from school).",
      "name": "travelDirectionDescriptors"
    },
    {
      "description": "An American Indian tribe with which an individual is affiliated.",
      "name": "tribalAffiliationDescriptors"
    },
    {
      "description": "An indicator of a non-U.S. citizen\u0027s Visa type.",
      "name": "visaDescriptors"
    },
    {
      "description": "This descriptor defines the types of weapon used during an incident.",
      "name": "weaponDescriptors"
    },
    {
      "description": "Accreditation Status for a Teacher Preparation Provider.",
      "name": "accreditationStatusDescriptors"
    },
    {
      "description": "This descriptor defines the classification of financial aid awarded to a person for the academic term/year.",
      "name": "aidTypeDescriptors"
    },
    {
      "description": "The process, program, or pathway used to obtain a certification.",
      "name": "certificationRouteDescriptors"
    },
    {
      "description": "A type of co-teaching observed as part of the performance evaluation.",
      "name": "coteachingStyleObservedDescriptors"
    },
    {
      "description": "The current status of the credential.",
      "name": "credentialStatusDescriptors"
    },
    {
      "description": "The role authorized by the Credential or Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.",
      "name": "educatorRoleDescriptors"
    },
    {
      "description": "Indicates that a person passed, failed, or did not take an English Language assessment.",
      "name": "englishLanguageExamDescriptors"
    },
    {
      "description": "The description of the program pathway, for example: Residency, Internship, Traditional",
      "name": "eppProgramPathwayDescriptors"
    },
    {
      "description": "Rating levels for Evaluation Elements.",
      "name": "evaluationElementRatingLevelDescriptors"
    },
    {
      "description": "The period for the evaluation.",
      "name": "evaluationPeriodDescriptors"
    },
    {
      "description": "Rating levels for Evaluations.",
      "name": "evaluationRatingLevelDescriptors"
    },
    {
      "description": "Represents the status of a Evaluation Rating.",
      "name": "evaluationRatingStatusDescriptors"
    },
    {
      "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
      "name": "evaluationTypeDescriptors"
    },
    {
      "description": "A person\u0027s gender.",
      "name": "genderDescriptors"
    },
    {
      "description": "Rating levels for Evaluation Objectives.",
      "name": "objectiveRatingLevelDescriptors"
    },
    {
      "description": "Rating levels for Performance Evaluations.",
      "name": "performanceEvaluationRatingLevelDescriptors"
    },
    {
      "description": "The type of performance evaluation conducted (e.g., walkthrough, summative).",
      "name": "performanceEvaluationTypeDescriptors"
    },
    {
      "description": "Rating levels for Rubric Dimensions.",
      "name": "rubricRatingLevelDescriptors"
    }
  ],
  "security": [
    {
      "oauth2_client_credentials": []
    }
  ]
}